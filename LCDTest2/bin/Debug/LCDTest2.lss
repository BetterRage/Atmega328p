
bin\Debug\LCDTest2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00002a4c  00002ae0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a4c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00002ae2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  00002ae5  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002af8  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000080  00000000  00000000  00002b38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_pubnames 0000001d  00000000  00000000  00002bb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001477  00000000  00000000  00002bd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000008c7  00000000  00000000  0000404c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   0000105a  00000000  00000000  00004913  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000260  00000000  00000000  00005970  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000499  00000000  00000000  00005bd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec e4       	ldi	r30, 0x4C	; 76
      7c:	fa e2       	ldi	r31, 0x2A	; 42
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a2 30       	cpi	r26, 0x02	; 2
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
      8a:	0e 94 87 13 	call	0x270e	; 0x270e <main>
      8e:	0c 94 24 15 	jmp	0x2a48	; 0x2a48 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <toggle_e>:


#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
      96:	cf 93       	push	r28
      98:	df 93       	push	r29
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
      9e:	c8 54       	subi	r28, 0x48	; 72
      a0:	d1 09       	sbc	r29, r1
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
    lcd_e_high();
      ac:	85 e2       	ldi	r24, 0x25	; 37
      ae:	90 e0       	ldi	r25, 0x00	; 0
      b0:	dc 01       	movw	r26, r24
      b2:	2c 91       	ld	r18, X
      b4:	85 e2       	ldi	r24, 0x25	; 37
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	20 61       	ori	r18, 0x10	; 16
      ba:	fc 01       	movw	r30, r24
      bc:	20 83       	st	Z, r18
      be:	80 e0       	ldi	r24, 0x00	; 0
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	a0 e8       	ldi	r26, 0x80	; 128
      c4:	bf e3       	ldi	r27, 0x3F	; 63
      c6:	89 83       	std	Y+1, r24	; 0x01
      c8:	9a 83       	std	Y+2, r25	; 0x02
      ca:	ab 83       	std	Y+3, r26	; 0x03
      cc:	bc 83       	std	Y+4, r27	; 0x04
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
      ce:	2b ea       	ldi	r18, 0xAB	; 171
      d0:	3a ea       	ldi	r19, 0xAA	; 170
      d2:	4a ea       	ldi	r20, 0xAA	; 170
      d4:	50 e4       	ldi	r21, 0x40	; 64
      d6:	69 81       	ldd	r22, Y+1	; 0x01
      d8:	7a 81       	ldd	r23, Y+2	; 0x02
      da:	8b 81       	ldd	r24, Y+3	; 0x03
      dc:	9c 81       	ldd	r25, Y+4	; 0x04
      de:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
      e2:	6d a3       	std	Y+37, r22	; 0x25
      e4:	7e a3       	std	Y+38, r23	; 0x26
      e6:	8f a3       	std	Y+39, r24	; 0x27
      e8:	98 a7       	std	Y+40, r25	; 0x28
      ea:	8d a1       	ldd	r24, Y+37	; 0x25
      ec:	9e a1       	ldd	r25, Y+38	; 0x26
      ee:	af a1       	ldd	r26, Y+39	; 0x27
      f0:	b8 a5       	ldd	r27, Y+40	; 0x28
      f2:	8d 83       	std	Y+5, r24	; 0x05
      f4:	9e 83       	std	Y+6, r25	; 0x06
      f6:	af 83       	std	Y+7, r26	; 0x07
      f8:	b8 87       	std	Y+8, r27	; 0x08
	__tmp2 = ((F_CPU) / 4e6) * __us;
      fa:	20 e0       	ldi	r18, 0x00	; 0
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	40 e8       	ldi	r20, 0x80	; 128
     100:	50 e4       	ldi	r21, 0x40	; 64
     102:	69 81       	ldd	r22, Y+1	; 0x01
     104:	7a 81       	ldd	r23, Y+2	; 0x02
     106:	8b 81       	ldd	r24, Y+3	; 0x03
     108:	9c 81       	ldd	r25, Y+4	; 0x04
     10a:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     10e:	69 a7       	std	Y+41, r22	; 0x29
     110:	7a a7       	std	Y+42, r23	; 0x2a
     112:	8b a7       	std	Y+43, r24	; 0x2b
     114:	9c a7       	std	Y+44, r25	; 0x2c
     116:	89 a5       	ldd	r24, Y+41	; 0x29
     118:	9a a5       	ldd	r25, Y+42	; 0x2a
     11a:	ab a5       	ldd	r26, Y+43	; 0x2b
     11c:	bc a5       	ldd	r27, Y+44	; 0x2c
     11e:	89 87       	std	Y+9, r24	; 0x09
     120:	9a 87       	std	Y+10, r25	; 0x0a
     122:	ab 87       	std	Y+11, r26	; 0x0b
     124:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     126:	20 e0       	ldi	r18, 0x00	; 0
     128:	30 e0       	ldi	r19, 0x00	; 0
     12a:	40 e8       	ldi	r20, 0x80	; 128
     12c:	5f e3       	ldi	r21, 0x3F	; 63
     12e:	6d 81       	ldd	r22, Y+5	; 0x05
     130:	7e 81       	ldd	r23, Y+6	; 0x06
     132:	8f 81       	ldd	r24, Y+7	; 0x07
     134:	98 85       	ldd	r25, Y+8	; 0x08
     136:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     13a:	88 23       	and	r24, r24
     13c:	1c f4       	brge	.+6      	; 0x144 <toggle_e+0xae>
		__ticks = 1;
     13e:	81 e0       	ldi	r24, 0x01	; 1
     140:	8d 87       	std	Y+13, r24	; 0x0d
     142:	e5 c0       	rjmp	.+458    	; 0x30e <toggle_e+0x278>
	else if (__tmp2 > 65535)
     144:	20 e0       	ldi	r18, 0x00	; 0
     146:	3f ef       	ldi	r19, 0xFF	; 255
     148:	4f e7       	ldi	r20, 0x7F	; 127
     14a:	57 e4       	ldi	r21, 0x47	; 71
     14c:	69 85       	ldd	r22, Y+9	; 0x09
     14e:	7a 85       	ldd	r23, Y+10	; 0x0a
     150:	8b 85       	ldd	r24, Y+11	; 0x0b
     152:	9c 85       	ldd	r25, Y+12	; 0x0c
     154:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     158:	18 16       	cp	r1, r24
     15a:	0c f0       	brlt	.+2      	; 0x15e <toggle_e+0xc8>
     15c:	9e c0       	rjmp	.+316    	; 0x29a <toggle_e+0x204>
	{
		_delay_ms(__us / 1000.0);
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	4a e7       	ldi	r20, 0x7A	; 122
     164:	54 e4       	ldi	r21, 0x44	; 68
     166:	69 81       	ldd	r22, Y+1	; 0x01
     168:	7a 81       	ldd	r23, Y+2	; 0x02
     16a:	8b 81       	ldd	r24, Y+3	; 0x03
     16c:	9c 81       	ldd	r25, Y+4	; 0x04
     16e:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
     172:	6d a7       	std	Y+45, r22	; 0x2d
     174:	7e a7       	std	Y+46, r23	; 0x2e
     176:	8f a7       	std	Y+47, r24	; 0x2f
     178:	98 ab       	std	Y+48, r25	; 0x30
     17a:	8d a5       	ldd	r24, Y+45	; 0x2d
     17c:	9e a5       	ldd	r25, Y+46	; 0x2e
     17e:	af a5       	ldd	r26, Y+47	; 0x2f
     180:	b8 a9       	ldd	r27, Y+48	; 0x30
     182:	8e 87       	std	Y+14, r24	; 0x0e
     184:	9f 87       	std	Y+15, r25	; 0x0f
     186:	a8 8b       	std	Y+16, r26	; 0x10
     188:	b9 8b       	std	Y+17, r27	; 0x11
	__tmp = ((F_CPU) / 4e3) * __ms;
     18a:	20 e0       	ldi	r18, 0x00	; 0
     18c:	30 e0       	ldi	r19, 0x00	; 0
     18e:	4a e7       	ldi	r20, 0x7A	; 122
     190:	55 e4       	ldi	r21, 0x45	; 69
     192:	6e 85       	ldd	r22, Y+14	; 0x0e
     194:	7f 85       	ldd	r23, Y+15	; 0x0f
     196:	88 89       	ldd	r24, Y+16	; 0x10
     198:	99 89       	ldd	r25, Y+17	; 0x11
     19a:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     19e:	69 ab       	std	Y+49, r22	; 0x31
     1a0:	7a ab       	std	Y+50, r23	; 0x32
     1a2:	8b ab       	std	Y+51, r24	; 0x33
     1a4:	9c ab       	std	Y+52, r25	; 0x34
     1a6:	89 a9       	ldd	r24, Y+49	; 0x31
     1a8:	9a a9       	ldd	r25, Y+50	; 0x32
     1aa:	ab a9       	ldd	r26, Y+51	; 0x33
     1ac:	bc a9       	ldd	r27, Y+52	; 0x34
     1ae:	8a 8b       	std	Y+18, r24	; 0x12
     1b0:	9b 8b       	std	Y+19, r25	; 0x13
     1b2:	ac 8b       	std	Y+20, r26	; 0x14
     1b4:	bd 8b       	std	Y+21, r27	; 0x15
	if (__tmp < 1.0)
     1b6:	20 e0       	ldi	r18, 0x00	; 0
     1b8:	30 e0       	ldi	r19, 0x00	; 0
     1ba:	40 e8       	ldi	r20, 0x80	; 128
     1bc:	5f e3       	ldi	r21, 0x3F	; 63
     1be:	6a 89       	ldd	r22, Y+18	; 0x12
     1c0:	7b 89       	ldd	r23, Y+19	; 0x13
     1c2:	8c 89       	ldd	r24, Y+20	; 0x14
     1c4:	9d 89       	ldd	r25, Y+21	; 0x15
     1c6:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     1ca:	88 23       	and	r24, r24
     1cc:	2c f4       	brge	.+10     	; 0x1d8 <toggle_e+0x142>
		__ticks = 1;
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	9f 8b       	std	Y+23, r25	; 0x17
     1d4:	8e 8b       	std	Y+22, r24	; 0x16
     1d6:	56 c0       	rjmp	.+172    	; 0x284 <toggle_e+0x1ee>
	else if (__tmp > 65535)
     1d8:	20 e0       	ldi	r18, 0x00	; 0
     1da:	3f ef       	ldi	r19, 0xFF	; 255
     1dc:	4f e7       	ldi	r20, 0x7F	; 127
     1de:	57 e4       	ldi	r21, 0x47	; 71
     1e0:	6a 89       	ldd	r22, Y+18	; 0x12
     1e2:	7b 89       	ldd	r23, Y+19	; 0x13
     1e4:	8c 89       	ldd	r24, Y+20	; 0x14
     1e6:	9d 89       	ldd	r25, Y+21	; 0x15
     1e8:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     1ec:	18 16       	cp	r1, r24
     1ee:	d4 f5       	brge	.+116    	; 0x264 <toggle_e+0x1ce>
		__ticks = (uint16_t) (__ms * 10.0);
     1f0:	20 e0       	ldi	r18, 0x00	; 0
     1f2:	30 e0       	ldi	r19, 0x00	; 0
     1f4:	40 e2       	ldi	r20, 0x20	; 32
     1f6:	51 e4       	ldi	r21, 0x41	; 65
     1f8:	6e 85       	ldd	r22, Y+14	; 0x0e
     1fa:	7f 85       	ldd	r23, Y+15	; 0x0f
     1fc:	88 89       	ldd	r24, Y+16	; 0x10
     1fe:	99 89       	ldd	r25, Y+17	; 0x11
     200:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     204:	6d ab       	std	Y+53, r22	; 0x35
     206:	7e ab       	std	Y+54, r23	; 0x36
     208:	8f ab       	std	Y+55, r24	; 0x37
     20a:	98 af       	std	Y+56, r25	; 0x38
     20c:	8d a9       	ldd	r24, Y+53	; 0x35
     20e:	9e a9       	ldd	r25, Y+54	; 0x36
     210:	af a9       	ldd	r26, Y+55	; 0x37
     212:	b8 ad       	ldd	r27, Y+56	; 0x38
     214:	89 a3       	std	Y+33, r24	; 0x21
     216:	9a a3       	std	Y+34, r25	; 0x22
     218:	ab a3       	std	Y+35, r26	; 0x23
     21a:	bc a3       	std	Y+36, r27	; 0x24
     21c:	69 a1       	ldd	r22, Y+33	; 0x21
     21e:	7a a1       	ldd	r23, Y+34	; 0x22
     220:	8b a1       	ldd	r24, Y+35	; 0x23
     222:	9c a1       	ldd	r25, Y+36	; 0x24
     224:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     228:	69 af       	std	Y+57, r22	; 0x39
     22a:	7a af       	std	Y+58, r23	; 0x3a
     22c:	8b af       	std	Y+59, r24	; 0x3b
     22e:	9c af       	std	Y+60, r25	; 0x3c
     230:	a9 ad       	ldd	r26, Y+57	; 0x39
     232:	ba ad       	ldd	r27, Y+58	; 0x3a
     234:	bf 8b       	std	Y+23, r27	; 0x17
     236:	ae 8b       	std	Y+22, r26	; 0x16
		while(__ticks)
     238:	10 c0       	rjmp	.+32     	; 0x25a <toggle_e+0x1c4>
     23a:	80 e9       	ldi	r24, 0x90	; 144
     23c:	91 e0       	ldi	r25, 0x01	; 1
     23e:	99 8f       	std	Y+25, r25	; 0x19
     240:	88 8f       	std	Y+24, r24	; 0x18
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     242:	88 8d       	ldd	r24, Y+24	; 0x18
     244:	99 8d       	ldd	r25, Y+25	; 0x19
     246:	01 97       	sbiw	r24, 0x01	; 1
     248:	f1 f7       	brne	.-4      	; 0x246 <toggle_e+0x1b0>
     24a:	99 8f       	std	Y+25, r25	; 0x19
     24c:	88 8f       	std	Y+24, r24	; 0x18
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     24e:	00 00       	nop
			__ticks --;
     250:	8e 89       	ldd	r24, Y+22	; 0x16
     252:	9f 89       	ldd	r25, Y+23	; 0x17
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	9f 8b       	std	Y+23, r25	; 0x17
     258:	8e 8b       	std	Y+22, r24	; 0x16
		while(__ticks)
     25a:	8e 89       	ldd	r24, Y+22	; 0x16
     25c:	9f 89       	ldd	r25, Y+23	; 0x17
     25e:	89 2b       	or	r24, r25
     260:	61 f7       	brne	.-40     	; 0x23a <toggle_e+0x1a4>
		return;
     262:	55 c0       	rjmp	.+170    	; 0x30e <toggle_e+0x278>
		__ticks = (uint16_t)__tmp;
     264:	6a 89       	ldd	r22, Y+18	; 0x12
     266:	7b 89       	ldd	r23, Y+19	; 0x13
     268:	8c 89       	ldd	r24, Y+20	; 0x14
     26a:	9d 89       	ldd	r25, Y+21	; 0x15
     26c:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     270:	21 96       	adiw	r28, 0x01	; 1
     272:	6c af       	std	Y+60, r22	; 0x3c
     274:	7d af       	std	Y+61, r23	; 0x3d
     276:	8e af       	std	Y+62, r24	; 0x3e
     278:	9f af       	std	Y+63, r25	; 0x3f
     27a:	21 97       	sbiw	r28, 0x01	; 1
     27c:	ed ad       	ldd	r30, Y+61	; 0x3d
     27e:	fe ad       	ldd	r31, Y+62	; 0x3e
     280:	ff 8b       	std	Y+23, r31	; 0x17
     282:	ee 8b       	std	Y+22, r30	; 0x16
     284:	8e 89       	ldd	r24, Y+22	; 0x16
     286:	9f 89       	ldd	r25, Y+23	; 0x17
     288:	9b 8f       	std	Y+27, r25	; 0x1b
     28a:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
     28c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     28e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     290:	01 97       	sbiw	r24, 0x01	; 1
     292:	f1 f7       	brne	.-4      	; 0x290 <toggle_e+0x1fa>
     294:	9b 8f       	std	Y+27, r25	; 0x1b
     296:	8a 8f       	std	Y+26, r24	; 0x1a
}
     298:	3a c0       	rjmp	.+116    	; 0x30e <toggle_e+0x278>
	}
	else if (__tmp > 255)
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	4f e7       	ldi	r20, 0x7F	; 127
     2a0:	53 e4       	ldi	r21, 0x43	; 67
     2a2:	6d 81       	ldd	r22, Y+5	; 0x05
     2a4:	7e 81       	ldd	r23, Y+6	; 0x06
     2a6:	8f 81       	ldd	r24, Y+7	; 0x07
     2a8:	98 85       	ldd	r25, Y+8	; 0x08
     2aa:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     2ae:	18 16       	cp	r1, r24
     2b0:	f4 f4       	brge	.+60     	; 0x2ee <toggle_e+0x258>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     2b2:	69 85       	ldd	r22, Y+9	; 0x09
     2b4:	7a 85       	ldd	r23, Y+10	; 0x0a
     2b6:	8b 85       	ldd	r24, Y+11	; 0x0b
     2b8:	9c 85       	ldd	r25, Y+12	; 0x0c
     2ba:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     2be:	25 96       	adiw	r28, 0x05	; 5
     2c0:	6c af       	std	Y+60, r22	; 0x3c
     2c2:	7d af       	std	Y+61, r23	; 0x3d
     2c4:	8e af       	std	Y+62, r24	; 0x3e
     2c6:	9f af       	std	Y+63, r25	; 0x3f
     2c8:	25 97       	sbiw	r28, 0x05	; 5
     2ca:	23 96       	adiw	r28, 0x03	; 3
     2cc:	8e ad       	ldd	r24, Y+62	; 0x3e
     2ce:	9f ad       	ldd	r25, Y+63	; 0x3f
     2d0:	23 97       	sbiw	r28, 0x03	; 3
     2d2:	9d 8f       	std	Y+29, r25	; 0x1d
     2d4:	8c 8f       	std	Y+28, r24	; 0x1c
     2d6:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2d8:	9d 8d       	ldd	r25, Y+29	; 0x1d
     2da:	9f 8f       	std	Y+31, r25	; 0x1f
     2dc:	8e 8f       	std	Y+30, r24	; 0x1e
	__asm__ volatile (
     2de:	8e 8d       	ldd	r24, Y+30	; 0x1e
     2e0:	9f 8d       	ldd	r25, Y+31	; 0x1f
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <toggle_e+0x24c>
     2e6:	9f 8f       	std	Y+31, r25	; 0x1f
     2e8:	8e 8f       	std	Y+30, r24	; 0x1e
}
     2ea:	00 00       	nop
		_delay_loop_2(__ticks);
		return;
     2ec:	17 c0       	rjmp	.+46     	; 0x31c <toggle_e+0x286>
	}
	else
		__ticks = (uint8_t)__tmp;
     2ee:	6d 81       	ldd	r22, Y+5	; 0x05
     2f0:	7e 81       	ldd	r23, Y+6	; 0x06
     2f2:	8f 81       	ldd	r24, Y+7	; 0x07
     2f4:	98 85       	ldd	r25, Y+8	; 0x08
     2f6:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     2fa:	29 96       	adiw	r28, 0x09	; 9
     2fc:	6c af       	std	Y+60, r22	; 0x3c
     2fe:	7d af       	std	Y+61, r23	; 0x3d
     300:	8e af       	std	Y+62, r24	; 0x3e
     302:	9f af       	std	Y+63, r25	; 0x3f
     304:	29 97       	sbiw	r28, 0x09	; 9
     306:	26 96       	adiw	r28, 0x06	; 6
     308:	9f ad       	ldd	r25, Y+63	; 0x3f
     30a:	26 97       	sbiw	r28, 0x06	; 6
     30c:	9d 87       	std	Y+13, r25	; 0x0d
     30e:	8d 85       	ldd	r24, Y+13	; 0x0d
     310:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
     312:	88 a1       	ldd	r24, Y+32	; 0x20
     314:	8a 95       	dec	r24
     316:	f1 f7       	brne	.-4      	; 0x314 <toggle_e+0x27e>
     318:	88 a3       	std	Y+32, r24	; 0x20
}
     31a:	00 00       	nop
    lcd_e_delay();
    lcd_e_low();
     31c:	85 e2       	ldi	r24, 0x25	; 37
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	dc 01       	movw	r26, r24
     322:	2c 91       	ld	r18, X
     324:	85 e2       	ldi	r24, 0x25	; 37
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	2f 7e       	andi	r18, 0xEF	; 239
     32a:	fc 01       	movw	r30, r24
     32c:	20 83       	st	Z, r18
}
     32e:	00 00       	nop
     330:	c8 5b       	subi	r28, 0xB8	; 184
     332:	df 4f       	sbci	r29, 0xFF	; 255
     334:	0f b6       	in	r0, 0x3f	; 63
     336:	f8 94       	cli
     338:	de bf       	out	0x3e, r29	; 62
     33a:	0f be       	out	0x3f, r0	; 63
     33c:	cd bf       	out	0x3d, r28	; 61
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <lcd_write>:
                 0: write instruction
Returns:  none
*************************************************************************/
#if LCD_IO_MODE
static void lcd_write(uint8_t data,uint8_t rs) 
{
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	00 d0       	rcall	.+0      	; 0x34a <lcd_write+0x6>
     34a:	0f 92       	push	r0
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
     350:	8a 83       	std	Y+2, r24	; 0x02
     352:	6b 83       	std	Y+3, r22	; 0x03
    unsigned char dataBits ;


    if (rs) {        /* write data        (RS=1, RW=0) */
     354:	8b 81       	ldd	r24, Y+3	; 0x03
     356:	88 23       	and	r24, r24
     358:	51 f0       	breq	.+20     	; 0x36e <lcd_write+0x2a>
       lcd_rs_high();
     35a:	8b e2       	ldi	r24, 0x2B	; 43
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	fc 01       	movw	r30, r24
     360:	20 81       	ld	r18, Z
     362:	8b e2       	ldi	r24, 0x2B	; 43
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	24 60       	ori	r18, 0x04	; 4
     368:	fc 01       	movw	r30, r24
     36a:	20 83       	st	Z, r18
     36c:	09 c0       	rjmp	.+18     	; 0x380 <lcd_write+0x3c>
    } else {         /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
     36e:	8b e2       	ldi	r24, 0x2B	; 43
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	fc 01       	movw	r30, r24
     374:	20 81       	ld	r18, Z
     376:	8b e2       	ldi	r24, 0x2B	; 43
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	2b 7f       	andi	r18, 0xFB	; 251
     37c:	fc 01       	movw	r30, r24
     37e:	20 83       	st	Z, r18
    }
    lcd_rw_low();    /* RW=0  write mode      */
     380:	8b e2       	ldi	r24, 0x2B	; 43
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	fc 01       	movw	r30, r24
     386:	20 81       	ld	r18, Z
     388:	8b e2       	ldi	r24, 0x2B	; 43
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	27 7f       	andi	r18, 0xF7	; 247
     38e:	fc 01       	movw	r30, r24
     390:	20 83       	st	Z, r18

    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && (LCD_DATA0_PIN == 0) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= 0x0F;
     392:	84 e2       	ldi	r24, 0x24	; 36
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	fc 01       	movw	r30, r24
     398:	20 81       	ld	r18, Z
     39a:	84 e2       	ldi	r24, 0x24	; 36
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	2f 60       	ori	r18, 0x0F	; 15
     3a0:	fc 01       	movw	r30, r24
     3a2:	20 83       	st	Z, r18

        /* output high nibble first */
        dataBits = LCD_DATA0_PORT & 0xF0;
     3a4:	85 e2       	ldi	r24, 0x25	; 37
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	fc 01       	movw	r30, r24
     3aa:	80 81       	ld	r24, Z
     3ac:	80 7f       	andi	r24, 0xF0	; 240
     3ae:	89 83       	std	Y+1, r24	; 0x01
        LCD_DATA0_PORT = dataBits |((data>>4)&0x0F);
     3b0:	8a 81       	ldd	r24, Y+2	; 0x02
     3b2:	82 95       	swap	r24
     3b4:	8f 70       	andi	r24, 0x0F	; 15
     3b6:	98 2f       	mov	r25, r24
     3b8:	89 81       	ldd	r24, Y+1	; 0x01
     3ba:	29 2f       	mov	r18, r25
     3bc:	28 2b       	or	r18, r24
     3be:	85 e2       	ldi	r24, 0x25	; 37
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	fc 01       	movw	r30, r24
     3c4:	20 83       	st	Z, r18
        lcd_e_toggle();
     3c6:	0e 94 4b 00 	call	0x96	; 0x96 <toggle_e>

        /* output low nibble */
        LCD_DATA0_PORT = dataBits | (data&0x0F);
     3ca:	8a 81       	ldd	r24, Y+2	; 0x02
     3cc:	98 2f       	mov	r25, r24
     3ce:	9f 70       	andi	r25, 0x0F	; 15
     3d0:	89 81       	ldd	r24, Y+1	; 0x01
     3d2:	29 2f       	mov	r18, r25
     3d4:	28 2b       	or	r18, r24
     3d6:	85 e2       	ldi	r24, 0x25	; 37
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	fc 01       	movw	r30, r24
     3dc:	20 83       	st	Z, r18
        lcd_e_toggle();
     3de:	0e 94 4b 00 	call	0x96	; 0x96 <toggle_e>

        /* all data pins high (inactive) */
        LCD_DATA0_PORT = dataBits | 0x0F;
     3e2:	85 e2       	ldi	r24, 0x25	; 37
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	29 81       	ldd	r18, Y+1	; 0x01
     3e8:	2f 60       	ori	r18, 0x0F	; 15
     3ea:	fc 01       	movw	r30, r24
     3ec:	20 83       	st	Z, r18
        LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
        LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
        LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
        LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
    }
}
     3ee:	00 00       	nop
     3f0:	0f 90       	pop	r0
     3f2:	0f 90       	pop	r0
     3f4:	0f 90       	pop	r0
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	08 95       	ret

000003fc <lcd_read>:
                 0: read busy flag / address counter
Returns:  byte read from LCD controller
*************************************************************************/
#if LCD_IO_MODE
static uint8_t lcd_read(uint8_t rs) 
{
     3fc:	0f 93       	push	r16
     3fe:	1f 93       	push	r17
     400:	cf 93       	push	r28
     402:	df 93       	push	r29
     404:	cd b7       	in	r28, 0x3d	; 61
     406:	de b7       	in	r29, 0x3e	; 62
     408:	ca 5d       	subi	r28, 0xDA	; 218
     40a:	d1 09       	sbc	r29, r1
     40c:	0f b6       	in	r0, 0x3f	; 63
     40e:	f8 94       	cli
     410:	de bf       	out	0x3e, r29	; 62
     412:	0f be       	out	0x3f, r0	; 63
     414:	cd bf       	out	0x3d, r28	; 61
     416:	9e 01       	movw	r18, r28
     418:	2e 59       	subi	r18, 0x9E	; 158
     41a:	3f 4f       	sbci	r19, 0xFF	; 255
     41c:	d9 01       	movw	r26, r18
     41e:	8c 93       	st	X, r24
    uint8_t data;
    
    
    if (rs)
     420:	ce 01       	movw	r24, r28
     422:	8e 59       	subi	r24, 0x9E	; 158
     424:	9f 4f       	sbci	r25, 0xFF	; 255
     426:	fc 01       	movw	r30, r24
     428:	80 81       	ld	r24, Z
     42a:	88 23       	and	r24, r24
     42c:	51 f0       	breq	.+20     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
        lcd_rs_high();                       /* RS=1: read data      */
     42e:	8b e2       	ldi	r24, 0x2B	; 43
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	dc 01       	movw	r26, r24
     434:	2c 91       	ld	r18, X
     436:	8b e2       	ldi	r24, 0x2B	; 43
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	24 60       	ori	r18, 0x04	; 4
     43c:	fc 01       	movw	r30, r24
     43e:	20 83       	st	Z, r18
     440:	09 c0       	rjmp	.+18     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
     442:	8b e2       	ldi	r24, 0x2B	; 43
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	dc 01       	movw	r26, r24
     448:	2c 91       	ld	r18, X
     44a:	8b e2       	ldi	r24, 0x2B	; 43
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	2b 7f       	andi	r18, 0xFB	; 251
     450:	fc 01       	movw	r30, r24
     452:	20 83       	st	Z, r18
    lcd_rw_high();                           /* RW=1  read mode      */
     454:	8b e2       	ldi	r24, 0x2B	; 43
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	dc 01       	movw	r26, r24
     45a:	2c 91       	ld	r18, X
     45c:	8b e2       	ldi	r24, 0x2B	; 43
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	28 60       	ori	r18, 0x08	; 8
     462:	fc 01       	movw	r30, r24
     464:	20 83       	st	Z, r18
    
    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && ( LCD_DATA0_PIN == 0 )&& (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        DDR(LCD_DATA0_PORT) &= 0xF0;         /* configure data pins as input */
     466:	84 e2       	ldi	r24, 0x24	; 36
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	dc 01       	movw	r26, r24
     46c:	2c 91       	ld	r18, X
     46e:	84 e2       	ldi	r24, 0x24	; 36
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	20 7f       	andi	r18, 0xF0	; 240
     474:	fc 01       	movw	r30, r24
     476:	20 83       	st	Z, r18
        
        lcd_e_high();
     478:	85 e2       	ldi	r24, 0x25	; 37
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	dc 01       	movw	r26, r24
     47e:	2c 91       	ld	r18, X
     480:	85 e2       	ldi	r24, 0x25	; 37
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	20 61       	ori	r18, 0x10	; 16
     486:	fc 01       	movw	r30, r24
     488:	20 83       	st	Z, r18
     48a:	9e 01       	movw	r18, r28
     48c:	2e 5b       	subi	r18, 0xBE	; 190
     48e:	3f 4f       	sbci	r19, 0xFF	; 255
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	a0 e8       	ldi	r26, 0x80	; 128
     496:	bf e3       	ldi	r27, 0x3F	; 63
     498:	f9 01       	movw	r30, r18
     49a:	80 83       	st	Z, r24
     49c:	91 83       	std	Z+1, r25	; 0x01
     49e:	a2 83       	std	Z+2, r26	; 0x02
     4a0:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
     4a2:	8e 01       	movw	r16, r28
     4a4:	0a 5b       	subi	r16, 0xBA	; 186
     4a6:	1f 4f       	sbci	r17, 0xFF	; 255
     4a8:	ce 01       	movw	r24, r28
     4aa:	8e 5b       	subi	r24, 0xBE	; 190
     4ac:	9f 4f       	sbci	r25, 0xFF	; 255
     4ae:	2b ea       	ldi	r18, 0xAB	; 171
     4b0:	3a ea       	ldi	r19, 0xAA	; 170
     4b2:	4a ea       	ldi	r20, 0xAA	; 170
     4b4:	50 e4       	ldi	r21, 0x40	; 64
     4b6:	dc 01       	movw	r26, r24
     4b8:	6d 91       	ld	r22, X+
     4ba:	7d 91       	ld	r23, X+
     4bc:	8d 91       	ld	r24, X+
     4be:	9c 91       	ld	r25, X
     4c0:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     4c4:	e3 96       	adiw	r28, 0x33	; 51
     4c6:	6c af       	std	Y+60, r22	; 0x3c
     4c8:	7d af       	std	Y+61, r23	; 0x3d
     4ca:	8e af       	std	Y+62, r24	; 0x3e
     4cc:	9f af       	std	Y+63, r25	; 0x3f
     4ce:	e3 97       	sbiw	r28, 0x33	; 51
     4d0:	e3 96       	adiw	r28, 0x33	; 51
     4d2:	8c ad       	ldd	r24, Y+60	; 0x3c
     4d4:	9d ad       	ldd	r25, Y+61	; 0x3d
     4d6:	ae ad       	ldd	r26, Y+62	; 0x3e
     4d8:	bf ad       	ldd	r27, Y+63	; 0x3f
     4da:	e3 97       	sbiw	r28, 0x33	; 51
     4dc:	f8 01       	movw	r30, r16
     4de:	80 83       	st	Z, r24
     4e0:	91 83       	std	Z+1, r25	; 0x01
     4e2:	a2 83       	std	Z+2, r26	; 0x02
     4e4:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     4e6:	8e 01       	movw	r16, r28
     4e8:	06 5b       	subi	r16, 0xB6	; 182
     4ea:	1f 4f       	sbci	r17, 0xFF	; 255
     4ec:	ce 01       	movw	r24, r28
     4ee:	8e 5b       	subi	r24, 0xBE	; 190
     4f0:	9f 4f       	sbci	r25, 0xFF	; 255
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	40 e8       	ldi	r20, 0x80	; 128
     4f8:	50 e4       	ldi	r21, 0x40	; 64
     4fa:	dc 01       	movw	r26, r24
     4fc:	6d 91       	ld	r22, X+
     4fe:	7d 91       	ld	r23, X+
     500:	8d 91       	ld	r24, X+
     502:	9c 91       	ld	r25, X
     504:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     508:	e7 96       	adiw	r28, 0x37	; 55
     50a:	6c af       	std	Y+60, r22	; 0x3c
     50c:	7d af       	std	Y+61, r23	; 0x3d
     50e:	8e af       	std	Y+62, r24	; 0x3e
     510:	9f af       	std	Y+63, r25	; 0x3f
     512:	e7 97       	sbiw	r28, 0x37	; 55
     514:	e7 96       	adiw	r28, 0x37	; 55
     516:	8c ad       	ldd	r24, Y+60	; 0x3c
     518:	9d ad       	ldd	r25, Y+61	; 0x3d
     51a:	ae ad       	ldd	r26, Y+62	; 0x3e
     51c:	bf ad       	ldd	r27, Y+63	; 0x3f
     51e:	e7 97       	sbiw	r28, 0x37	; 55
     520:	f8 01       	movw	r30, r16
     522:	80 83       	st	Z, r24
     524:	91 83       	std	Z+1, r25	; 0x01
     526:	a2 83       	std	Z+2, r26	; 0x02
     528:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     52a:	ce 01       	movw	r24, r28
     52c:	8a 5b       	subi	r24, 0xBA	; 186
     52e:	9f 4f       	sbci	r25, 0xFF	; 255
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	40 e8       	ldi	r20, 0x80	; 128
     536:	5f e3       	ldi	r21, 0x3F	; 63
     538:	dc 01       	movw	r26, r24
     53a:	6d 91       	ld	r22, X+
     53c:	7d 91       	ld	r23, X+
     53e:	8d 91       	ld	r24, X+
     540:	9c 91       	ld	r25, X
     542:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     546:	88 23       	and	r24, r24
     548:	3c f4       	brge	.+14     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
		__ticks = 1;
     54a:	ce 01       	movw	r24, r28
     54c:	82 5b       	subi	r24, 0xB2	; 178
     54e:	9f 4f       	sbci	r25, 0xFF	; 255
     550:	21 e0       	ldi	r18, 0x01	; 1
     552:	fc 01       	movw	r30, r24
     554:	20 83       	st	Z, r18
     556:	8d c1       	rjmp	.+794    	; 0x872 <__LOCK_REGION_LENGTH__+0x472>
	else if (__tmp2 > 65535)
     558:	ce 01       	movw	r24, r28
     55a:	86 5b       	subi	r24, 0xB6	; 182
     55c:	9f 4f       	sbci	r25, 0xFF	; 255
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	3f ef       	ldi	r19, 0xFF	; 255
     562:	4f e7       	ldi	r20, 0x7F	; 127
     564:	57 e4       	ldi	r21, 0x47	; 71
     566:	dc 01       	movw	r26, r24
     568:	6d 91       	ld	r22, X+
     56a:	7d 91       	ld	r23, X+
     56c:	8d 91       	ld	r24, X+
     56e:	9c 91       	ld	r25, X
     570:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     574:	18 16       	cp	r1, r24
     576:	0c f0       	brlt	.+2      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
     578:	16 c1       	rjmp	.+556    	; 0x7a6 <__LOCK_REGION_LENGTH__+0x3a6>
		_delay_ms(__us / 1000.0);
     57a:	ce 01       	movw	r24, r28
     57c:	8e 5b       	subi	r24, 0xBE	; 190
     57e:	9f 4f       	sbci	r25, 0xFF	; 255
     580:	20 e0       	ldi	r18, 0x00	; 0
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	4a e7       	ldi	r20, 0x7A	; 122
     586:	54 e4       	ldi	r21, 0x44	; 68
     588:	fc 01       	movw	r30, r24
     58a:	60 81       	ld	r22, Z
     58c:	71 81       	ldd	r23, Z+1	; 0x01
     58e:	82 81       	ldd	r24, Z+2	; 0x02
     590:	93 81       	ldd	r25, Z+3	; 0x03
     592:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
     596:	eb 96       	adiw	r28, 0x3b	; 59
     598:	6c af       	std	Y+60, r22	; 0x3c
     59a:	7d af       	std	Y+61, r23	; 0x3d
     59c:	8e af       	std	Y+62, r24	; 0x3e
     59e:	9f af       	std	Y+63, r25	; 0x3f
     5a0:	eb 97       	sbiw	r28, 0x3b	; 59
     5a2:	eb 96       	adiw	r28, 0x3b	; 59
     5a4:	8c ad       	ldd	r24, Y+60	; 0x3c
     5a6:	9d ad       	ldd	r25, Y+61	; 0x3d
     5a8:	ae ad       	ldd	r26, Y+62	; 0x3e
     5aa:	bf ad       	ldd	r27, Y+63	; 0x3f
     5ac:	eb 97       	sbiw	r28, 0x3b	; 59
     5ae:	9e 01       	movw	r18, r28
     5b0:	21 5b       	subi	r18, 0xB1	; 177
     5b2:	3f 4f       	sbci	r19, 0xFF	; 255
     5b4:	f9 01       	movw	r30, r18
     5b6:	80 83       	st	Z, r24
     5b8:	91 83       	std	Z+1, r25	; 0x01
     5ba:	a2 83       	std	Z+2, r26	; 0x02
     5bc:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
     5be:	8e 01       	movw	r16, r28
     5c0:	0d 5a       	subi	r16, 0xAD	; 173
     5c2:	1f 4f       	sbci	r17, 0xFF	; 255
     5c4:	ce 01       	movw	r24, r28
     5c6:	81 5b       	subi	r24, 0xB1	; 177
     5c8:	9f 4f       	sbci	r25, 0xFF	; 255
     5ca:	20 e0       	ldi	r18, 0x00	; 0
     5cc:	30 e0       	ldi	r19, 0x00	; 0
     5ce:	4a e7       	ldi	r20, 0x7A	; 122
     5d0:	55 e4       	ldi	r21, 0x45	; 69
     5d2:	dc 01       	movw	r26, r24
     5d4:	6d 91       	ld	r22, X+
     5d6:	7d 91       	ld	r23, X+
     5d8:	8d 91       	ld	r24, X+
     5da:	9c 91       	ld	r25, X
     5dc:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     5e0:	ef 96       	adiw	r28, 0x3f	; 63
     5e2:	6c af       	std	Y+60, r22	; 0x3c
     5e4:	7d af       	std	Y+61, r23	; 0x3d
     5e6:	8e af       	std	Y+62, r24	; 0x3e
     5e8:	9f af       	std	Y+63, r25	; 0x3f
     5ea:	ef 97       	sbiw	r28, 0x3f	; 63
     5ec:	ef 96       	adiw	r28, 0x3f	; 63
     5ee:	8c ad       	ldd	r24, Y+60	; 0x3c
     5f0:	9d ad       	ldd	r25, Y+61	; 0x3d
     5f2:	ae ad       	ldd	r26, Y+62	; 0x3e
     5f4:	bf ad       	ldd	r27, Y+63	; 0x3f
     5f6:	ef 97       	sbiw	r28, 0x3f	; 63
     5f8:	f8 01       	movw	r30, r16
     5fa:	80 83       	st	Z, r24
     5fc:	91 83       	std	Z+1, r25	; 0x01
     5fe:	a2 83       	std	Z+2, r26	; 0x02
     600:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     602:	ce 01       	movw	r24, r28
     604:	8d 5a       	subi	r24, 0xAD	; 173
     606:	9f 4f       	sbci	r25, 0xFF	; 255
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	40 e8       	ldi	r20, 0x80	; 128
     60e:	5f e3       	ldi	r21, 0x3F	; 63
     610:	dc 01       	movw	r26, r24
     612:	6d 91       	ld	r22, X+
     614:	7d 91       	ld	r23, X+
     616:	8d 91       	ld	r24, X+
     618:	9c 91       	ld	r25, X
     61a:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     61e:	88 23       	and	r24, r24
     620:	4c f4       	brge	.+18     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
		__ticks = 1;
     622:	ce 01       	movw	r24, r28
     624:	89 5a       	subi	r24, 0xA9	; 169
     626:	9f 4f       	sbci	r25, 0xFF	; 255
     628:	21 e0       	ldi	r18, 0x01	; 1
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	fc 01       	movw	r30, r24
     62e:	31 83       	std	Z+1, r19	; 0x01
     630:	20 83       	st	Z, r18
     632:	9e c0       	rjmp	.+316    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
	else if (__tmp > 65535)
     634:	ce 01       	movw	r24, r28
     636:	8d 5a       	subi	r24, 0xAD	; 173
     638:	9f 4f       	sbci	r25, 0xFF	; 255
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	3f ef       	ldi	r19, 0xFF	; 255
     63e:	4f e7       	ldi	r20, 0x7F	; 127
     640:	57 e4       	ldi	r21, 0x47	; 71
     642:	dc 01       	movw	r26, r24
     644:	6d 91       	ld	r22, X+
     646:	7d 91       	ld	r23, X+
     648:	8d 91       	ld	r24, X+
     64a:	9c 91       	ld	r25, X
     64c:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     650:	18 16       	cp	r1, r24
     652:	0c f0       	brlt	.+2      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
     654:	6f c0       	rjmp	.+222    	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
		__ticks = (uint16_t) (__ms * 10.0);
     656:	ce 01       	movw	r24, r28
     658:	81 5b       	subi	r24, 0xB1	; 177
     65a:	9f 4f       	sbci	r25, 0xFF	; 255
     65c:	20 e0       	ldi	r18, 0x00	; 0
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	40 e2       	ldi	r20, 0x20	; 32
     662:	51 e4       	ldi	r21, 0x41	; 65
     664:	fc 01       	movw	r30, r24
     666:	60 81       	ld	r22, Z
     668:	71 81       	ldd	r23, Z+1	; 0x01
     66a:	82 81       	ldd	r24, Z+2	; 0x02
     66c:	93 81       	ldd	r25, Z+3	; 0x03
     66e:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     672:	c1 58       	subi	r28, 0x81	; 129
     674:	df 4f       	sbci	r29, 0xFF	; 255
     676:	68 83       	st	Y, r22
     678:	79 83       	std	Y+1, r23	; 0x01
     67a:	8a 83       	std	Y+2, r24	; 0x02
     67c:	9b 83       	std	Y+3, r25	; 0x03
     67e:	cf 57       	subi	r28, 0x7F	; 127
     680:	d0 40       	sbci	r29, 0x00	; 0
     682:	c1 58       	subi	r28, 0x81	; 129
     684:	df 4f       	sbci	r29, 0xFF	; 255
     686:	88 81       	ld	r24, Y
     688:	99 81       	ldd	r25, Y+1	; 0x01
     68a:	aa 81       	ldd	r26, Y+2	; 0x02
     68c:	bb 81       	ldd	r27, Y+3	; 0x03
     68e:	cf 57       	subi	r28, 0x7F	; 127
     690:	d0 40       	sbci	r29, 0x00	; 0
     692:	af 96       	adiw	r28, 0x2f	; 47
     694:	8c af       	std	Y+60, r24	; 0x3c
     696:	9d af       	std	Y+61, r25	; 0x3d
     698:	ae af       	std	Y+62, r26	; 0x3e
     69a:	bf af       	std	Y+63, r27	; 0x3f
     69c:	af 97       	sbiw	r28, 0x2f	; 47
     69e:	8e 01       	movw	r16, r28
     6a0:	09 5a       	subi	r16, 0xA9	; 169
     6a2:	1f 4f       	sbci	r17, 0xFF	; 255
     6a4:	af 96       	adiw	r28, 0x2f	; 47
     6a6:	6c ad       	ldd	r22, Y+60	; 0x3c
     6a8:	7d ad       	ldd	r23, Y+61	; 0x3d
     6aa:	8e ad       	ldd	r24, Y+62	; 0x3e
     6ac:	9f ad       	ldd	r25, Y+63	; 0x3f
     6ae:	af 97       	sbiw	r28, 0x2f	; 47
     6b0:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     6b4:	cd 57       	subi	r28, 0x7D	; 125
     6b6:	df 4f       	sbci	r29, 0xFF	; 255
     6b8:	68 83       	st	Y, r22
     6ba:	79 83       	std	Y+1, r23	; 0x01
     6bc:	8a 83       	std	Y+2, r24	; 0x02
     6be:	9b 83       	std	Y+3, r25	; 0x03
     6c0:	c3 58       	subi	r28, 0x83	; 131
     6c2:	d0 40       	sbci	r29, 0x00	; 0
     6c4:	cd 57       	subi	r28, 0x7D	; 125
     6c6:	df 4f       	sbci	r29, 0xFF	; 255
     6c8:	e8 81       	ld	r30, Y
     6ca:	f9 81       	ldd	r31, Y+1	; 0x01
     6cc:	c3 58       	subi	r28, 0x83	; 131
     6ce:	d0 40       	sbci	r29, 0x00	; 0
     6d0:	d8 01       	movw	r26, r16
     6d2:	ed 93       	st	X+, r30
     6d4:	fc 93       	st	X, r31
		while(__ticks)
     6d6:	25 c0       	rjmp	.+74     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
     6d8:	ce 01       	movw	r24, r28
     6da:	87 5a       	subi	r24, 0xA7	; 167
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	20 e9       	ldi	r18, 0x90	; 144
     6e0:	31 e0       	ldi	r19, 0x01	; 1
     6e2:	dc 01       	movw	r26, r24
     6e4:	2d 93       	st	X+, r18
     6e6:	3c 93       	st	X, r19
	__asm__ volatile (
     6e8:	ce 01       	movw	r24, r28
     6ea:	87 5a       	subi	r24, 0xA7	; 167
     6ec:	9f 4f       	sbci	r25, 0xFF	; 255
     6ee:	fc 01       	movw	r30, r24
     6f0:	80 81       	ld	r24, Z
     6f2:	91 81       	ldd	r25, Z+1	; 0x01
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	f1 f7       	brne	.-4      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
     6f8:	9e 01       	movw	r18, r28
     6fa:	27 5a       	subi	r18, 0xA7	; 167
     6fc:	3f 4f       	sbci	r19, 0xFF	; 255
     6fe:	d9 01       	movw	r26, r18
     700:	8d 93       	st	X+, r24
     702:	9c 93       	st	X, r25
}
     704:	00 00       	nop
			__ticks --;
     706:	ce 01       	movw	r24, r28
     708:	89 5a       	subi	r24, 0xA9	; 169
     70a:	9f 4f       	sbci	r25, 0xFF	; 255
     70c:	9e 01       	movw	r18, r28
     70e:	29 5a       	subi	r18, 0xA9	; 169
     710:	3f 4f       	sbci	r19, 0xFF	; 255
     712:	f9 01       	movw	r30, r18
     714:	20 81       	ld	r18, Z
     716:	31 81       	ldd	r19, Z+1	; 0x01
     718:	21 50       	subi	r18, 0x01	; 1
     71a:	31 09       	sbc	r19, r1
     71c:	dc 01       	movw	r26, r24
     71e:	2d 93       	st	X+, r18
     720:	3c 93       	st	X, r19
		while(__ticks)
     722:	ce 01       	movw	r24, r28
     724:	89 5a       	subi	r24, 0xA9	; 169
     726:	9f 4f       	sbci	r25, 0xFF	; 255
     728:	fc 01       	movw	r30, r24
     72a:	80 81       	ld	r24, Z
     72c:	91 81       	ldd	r25, Z+1	; 0x01
     72e:	89 2b       	or	r24, r25
     730:	99 f6       	brne	.-90     	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
		return;
     732:	9f c0       	rjmp	.+318    	; 0x872 <__LOCK_REGION_LENGTH__+0x472>
		__ticks = (uint16_t)__tmp;
     734:	8e 01       	movw	r16, r28
     736:	09 5a       	subi	r16, 0xA9	; 169
     738:	1f 4f       	sbci	r17, 0xFF	; 255
     73a:	ce 01       	movw	r24, r28
     73c:	8d 5a       	subi	r24, 0xAD	; 173
     73e:	9f 4f       	sbci	r25, 0xFF	; 255
     740:	dc 01       	movw	r26, r24
     742:	6d 91       	ld	r22, X+
     744:	7d 91       	ld	r23, X+
     746:	8d 91       	ld	r24, X+
     748:	9c 91       	ld	r25, X
     74a:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     74e:	c9 57       	subi	r28, 0x79	; 121
     750:	df 4f       	sbci	r29, 0xFF	; 255
     752:	68 83       	st	Y, r22
     754:	79 83       	std	Y+1, r23	; 0x01
     756:	8a 83       	std	Y+2, r24	; 0x02
     758:	9b 83       	std	Y+3, r25	; 0x03
     75a:	c7 58       	subi	r28, 0x87	; 135
     75c:	d0 40       	sbci	r29, 0x00	; 0
     75e:	c9 57       	subi	r28, 0x79	; 121
     760:	df 4f       	sbci	r29, 0xFF	; 255
     762:	88 81       	ld	r24, Y
     764:	99 81       	ldd	r25, Y+1	; 0x01
     766:	c7 58       	subi	r28, 0x87	; 135
     768:	d0 40       	sbci	r29, 0x00	; 0
     76a:	f8 01       	movw	r30, r16
     76c:	91 83       	std	Z+1, r25	; 0x01
     76e:	80 83       	st	Z, r24
     770:	ce 01       	movw	r24, r28
     772:	85 5a       	subi	r24, 0xA5	; 165
     774:	9f 4f       	sbci	r25, 0xFF	; 255
     776:	9e 01       	movw	r18, r28
     778:	29 5a       	subi	r18, 0xA9	; 169
     77a:	3f 4f       	sbci	r19, 0xFF	; 255
     77c:	d9 01       	movw	r26, r18
     77e:	2d 91       	ld	r18, X+
     780:	3c 91       	ld	r19, X
     782:	fc 01       	movw	r30, r24
     784:	31 83       	std	Z+1, r19	; 0x01
     786:	20 83       	st	Z, r18
	__asm__ volatile (
     788:	ce 01       	movw	r24, r28
     78a:	85 5a       	subi	r24, 0xA5	; 165
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	dc 01       	movw	r26, r24
     790:	8d 91       	ld	r24, X+
     792:	9c 91       	ld	r25, X
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	f1 f7       	brne	.-4      	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
     798:	9e 01       	movw	r18, r28
     79a:	25 5a       	subi	r18, 0xA5	; 165
     79c:	3f 4f       	sbci	r19, 0xFF	; 255
     79e:	f9 01       	movw	r30, r18
     7a0:	91 83       	std	Z+1, r25	; 0x01
     7a2:	80 83       	st	Z, r24
}
     7a4:	66 c0       	rjmp	.+204    	; 0x872 <__LOCK_REGION_LENGTH__+0x472>
	else if (__tmp > 255)
     7a6:	ce 01       	movw	r24, r28
     7a8:	8a 5b       	subi	r24, 0xBA	; 186
     7aa:	9f 4f       	sbci	r25, 0xFF	; 255
     7ac:	20 e0       	ldi	r18, 0x00	; 0
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	4f e7       	ldi	r20, 0x7F	; 127
     7b2:	53 e4       	ldi	r21, 0x43	; 67
     7b4:	dc 01       	movw	r26, r24
     7b6:	6d 91       	ld	r22, X+
     7b8:	7d 91       	ld	r23, X+
     7ba:	8d 91       	ld	r24, X+
     7bc:	9c 91       	ld	r25, X
     7be:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     7c2:	18 16       	cp	r1, r24
     7c4:	d4 f5       	brge	.+116    	; 0x83a <__LOCK_REGION_LENGTH__+0x43a>
		uint16_t __ticks=(uint16_t)__tmp2;
     7c6:	8e 01       	movw	r16, r28
     7c8:	03 5a       	subi	r16, 0xA3	; 163
     7ca:	1f 4f       	sbci	r17, 0xFF	; 255
     7cc:	ce 01       	movw	r24, r28
     7ce:	86 5b       	subi	r24, 0xB6	; 182
     7d0:	9f 4f       	sbci	r25, 0xFF	; 255
     7d2:	fc 01       	movw	r30, r24
     7d4:	60 81       	ld	r22, Z
     7d6:	71 81       	ldd	r23, Z+1	; 0x01
     7d8:	82 81       	ldd	r24, Z+2	; 0x02
     7da:	93 81       	ldd	r25, Z+3	; 0x03
     7dc:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     7e0:	c5 57       	subi	r28, 0x75	; 117
     7e2:	df 4f       	sbci	r29, 0xFF	; 255
     7e4:	68 83       	st	Y, r22
     7e6:	79 83       	std	Y+1, r23	; 0x01
     7e8:	8a 83       	std	Y+2, r24	; 0x02
     7ea:	9b 83       	std	Y+3, r25	; 0x03
     7ec:	cb 58       	subi	r28, 0x8B	; 139
     7ee:	d0 40       	sbci	r29, 0x00	; 0
     7f0:	c5 57       	subi	r28, 0x75	; 117
     7f2:	df 4f       	sbci	r29, 0xFF	; 255
     7f4:	e8 81       	ld	r30, Y
     7f6:	f9 81       	ldd	r31, Y+1	; 0x01
     7f8:	cb 58       	subi	r28, 0x8B	; 139
     7fa:	d0 40       	sbci	r29, 0x00	; 0
     7fc:	d8 01       	movw	r26, r16
     7fe:	ed 93       	st	X+, r30
     800:	fc 93       	st	X, r31
     802:	ce 01       	movw	r24, r28
     804:	81 5a       	subi	r24, 0xA1	; 161
     806:	9f 4f       	sbci	r25, 0xFF	; 255
     808:	9e 01       	movw	r18, r28
     80a:	23 5a       	subi	r18, 0xA3	; 163
     80c:	3f 4f       	sbci	r19, 0xFF	; 255
     80e:	d9 01       	movw	r26, r18
     810:	2d 91       	ld	r18, X+
     812:	3c 91       	ld	r19, X
     814:	fc 01       	movw	r30, r24
     816:	31 83       	std	Z+1, r19	; 0x01
     818:	20 83       	st	Z, r18
	__asm__ volatile (
     81a:	ce 01       	movw	r24, r28
     81c:	81 5a       	subi	r24, 0xA1	; 161
     81e:	9f 4f       	sbci	r25, 0xFF	; 255
     820:	dc 01       	movw	r26, r24
     822:	8d 91       	ld	r24, X+
     824:	9c 91       	ld	r25, X
     826:	01 97       	sbiw	r24, 0x01	; 1
     828:	f1 f7       	brne	.-4      	; 0x826 <__LOCK_REGION_LENGTH__+0x426>
     82a:	9e 01       	movw	r18, r28
     82c:	21 5a       	subi	r18, 0xA1	; 161
     82e:	3f 4f       	sbci	r19, 0xFF	; 255
     830:	f9 01       	movw	r30, r18
     832:	91 83       	std	Z+1, r25	; 0x01
     834:	80 83       	st	Z, r24
}
     836:	00 00       	nop
		return;
     838:	34 c0       	rjmp	.+104    	; 0x8a2 <__LOCK_REGION_LENGTH__+0x4a2>
		__ticks = (uint8_t)__tmp;
     83a:	8e 01       	movw	r16, r28
     83c:	02 5b       	subi	r16, 0xB2	; 178
     83e:	1f 4f       	sbci	r17, 0xFF	; 255
     840:	ce 01       	movw	r24, r28
     842:	8a 5b       	subi	r24, 0xBA	; 186
     844:	9f 4f       	sbci	r25, 0xFF	; 255
     846:	dc 01       	movw	r26, r24
     848:	6d 91       	ld	r22, X+
     84a:	7d 91       	ld	r23, X+
     84c:	8d 91       	ld	r24, X+
     84e:	9c 91       	ld	r25, X
     850:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     854:	c1 57       	subi	r28, 0x71	; 113
     856:	df 4f       	sbci	r29, 0xFF	; 255
     858:	68 83       	st	Y, r22
     85a:	79 83       	std	Y+1, r23	; 0x01
     85c:	8a 83       	std	Y+2, r24	; 0x02
     85e:	9b 83       	std	Y+3, r25	; 0x03
     860:	cf 58       	subi	r28, 0x8F	; 143
     862:	d0 40       	sbci	r29, 0x00	; 0
     864:	c1 57       	subi	r28, 0x71	; 113
     866:	df 4f       	sbci	r29, 0xFF	; 255
     868:	88 81       	ld	r24, Y
     86a:	cf 58       	subi	r28, 0x8F	; 143
     86c:	d0 40       	sbci	r29, 0x00	; 0
     86e:	f8 01       	movw	r30, r16
     870:	80 83       	st	Z, r24
     872:	ce 01       	movw	r24, r28
     874:	8f 59       	subi	r24, 0x9F	; 159
     876:	9f 4f       	sbci	r25, 0xFF	; 255
     878:	9e 01       	movw	r18, r28
     87a:	22 5b       	subi	r18, 0xB2	; 178
     87c:	3f 4f       	sbci	r19, 0xFF	; 255
     87e:	d9 01       	movw	r26, r18
     880:	2c 91       	ld	r18, X
     882:	fc 01       	movw	r30, r24
     884:	20 83       	st	Z, r18
	__asm__ volatile (
     886:	ce 01       	movw	r24, r28
     888:	8f 59       	subi	r24, 0x9F	; 159
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	dc 01       	movw	r26, r24
     88e:	8c 91       	ld	r24, X
     890:	28 2f       	mov	r18, r24
     892:	2a 95       	dec	r18
     894:	f1 f7       	brne	.-4      	; 0x892 <__LOCK_REGION_LENGTH__+0x492>
     896:	ce 01       	movw	r24, r28
     898:	8f 59       	subi	r24, 0x9F	; 159
     89a:	9f 4f       	sbci	r25, 0xFF	; 255
     89c:	fc 01       	movw	r30, r24
     89e:	20 83       	st	Z, r18
}
     8a0:	00 00       	nop
        lcd_e_delay();        
        data = PIN(LCD_DATA0_PORT) << 4;     /* read high nibble first */
     8a2:	83 e2       	ldi	r24, 0x23	; 35
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	dc 01       	movw	r26, r24
     8a8:	8c 91       	ld	r24, X
     8aa:	28 2f       	mov	r18, r24
     8ac:	22 95       	swap	r18
     8ae:	20 7f       	andi	r18, 0xF0	; 240
     8b0:	ce 01       	movw	r24, r28
     8b2:	80 5c       	subi	r24, 0xC0	; 192
     8b4:	9f 4f       	sbci	r25, 0xFF	; 255
     8b6:	fc 01       	movw	r30, r24
     8b8:	20 83       	st	Z, r18
        lcd_e_low();
     8ba:	85 e2       	ldi	r24, 0x25	; 37
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	dc 01       	movw	r26, r24
     8c0:	2c 91       	ld	r18, X
     8c2:	85 e2       	ldi	r24, 0x25	; 37
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	2f 7e       	andi	r18, 0xEF	; 239
     8c8:	fc 01       	movw	r30, r24
     8ca:	20 83       	st	Z, r18
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	a0 e8       	ldi	r26, 0x80	; 128
     8d2:	bf e3       	ldi	r27, 0x3F	; 63
     8d4:	8b 83       	std	Y+3, r24	; 0x03
     8d6:	9c 83       	std	Y+4, r25	; 0x04
     8d8:	ad 83       	std	Y+5, r26	; 0x05
     8da:	be 83       	std	Y+6, r27	; 0x06
	__tmp = ((F_CPU) / 3e6) * __us;
     8dc:	2b ea       	ldi	r18, 0xAB	; 171
     8de:	3a ea       	ldi	r19, 0xAA	; 170
     8e0:	4a ea       	ldi	r20, 0xAA	; 170
     8e2:	50 e4       	ldi	r21, 0x40	; 64
     8e4:	6b 81       	ldd	r22, Y+3	; 0x03
     8e6:	7c 81       	ldd	r23, Y+4	; 0x04
     8e8:	8d 81       	ldd	r24, Y+5	; 0x05
     8ea:	9e 81       	ldd	r25, Y+6	; 0x06
     8ec:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     8f0:	cd 56       	subi	r28, 0x6D	; 109
     8f2:	df 4f       	sbci	r29, 0xFF	; 255
     8f4:	68 83       	st	Y, r22
     8f6:	79 83       	std	Y+1, r23	; 0x01
     8f8:	8a 83       	std	Y+2, r24	; 0x02
     8fa:	9b 83       	std	Y+3, r25	; 0x03
     8fc:	c3 59       	subi	r28, 0x93	; 147
     8fe:	d0 40       	sbci	r29, 0x00	; 0
     900:	cd 56       	subi	r28, 0x6D	; 109
     902:	df 4f       	sbci	r29, 0xFF	; 255
     904:	88 81       	ld	r24, Y
     906:	99 81       	ldd	r25, Y+1	; 0x01
     908:	aa 81       	ldd	r26, Y+2	; 0x02
     90a:	bb 81       	ldd	r27, Y+3	; 0x03
     90c:	c3 59       	subi	r28, 0x93	; 147
     90e:	d0 40       	sbci	r29, 0x00	; 0
     910:	8f 83       	std	Y+7, r24	; 0x07
     912:	98 87       	std	Y+8, r25	; 0x08
     914:	a9 87       	std	Y+9, r26	; 0x09
     916:	ba 87       	std	Y+10, r27	; 0x0a
	__tmp2 = ((F_CPU) / 4e6) * __us;
     918:	20 e0       	ldi	r18, 0x00	; 0
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	40 e8       	ldi	r20, 0x80	; 128
     91e:	50 e4       	ldi	r21, 0x40	; 64
     920:	6b 81       	ldd	r22, Y+3	; 0x03
     922:	7c 81       	ldd	r23, Y+4	; 0x04
     924:	8d 81       	ldd	r24, Y+5	; 0x05
     926:	9e 81       	ldd	r25, Y+6	; 0x06
     928:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     92c:	c9 56       	subi	r28, 0x69	; 105
     92e:	df 4f       	sbci	r29, 0xFF	; 255
     930:	68 83       	st	Y, r22
     932:	79 83       	std	Y+1, r23	; 0x01
     934:	8a 83       	std	Y+2, r24	; 0x02
     936:	9b 83       	std	Y+3, r25	; 0x03
     938:	c7 59       	subi	r28, 0x97	; 151
     93a:	d0 40       	sbci	r29, 0x00	; 0
     93c:	c9 56       	subi	r28, 0x69	; 105
     93e:	df 4f       	sbci	r29, 0xFF	; 255
     940:	88 81       	ld	r24, Y
     942:	99 81       	ldd	r25, Y+1	; 0x01
     944:	aa 81       	ldd	r26, Y+2	; 0x02
     946:	bb 81       	ldd	r27, Y+3	; 0x03
     948:	c7 59       	subi	r28, 0x97	; 151
     94a:	d0 40       	sbci	r29, 0x00	; 0
     94c:	8b 87       	std	Y+11, r24	; 0x0b
     94e:	9c 87       	std	Y+12, r25	; 0x0c
     950:	ad 87       	std	Y+13, r26	; 0x0d
     952:	be 87       	std	Y+14, r27	; 0x0e
	if (__tmp < 1.0)
     954:	20 e0       	ldi	r18, 0x00	; 0
     956:	30 e0       	ldi	r19, 0x00	; 0
     958:	40 e8       	ldi	r20, 0x80	; 128
     95a:	5f e3       	ldi	r21, 0x3F	; 63
     95c:	6f 81       	ldd	r22, Y+7	; 0x07
     95e:	78 85       	ldd	r23, Y+8	; 0x08
     960:	89 85       	ldd	r24, Y+9	; 0x09
     962:	9a 85       	ldd	r25, Y+10	; 0x0a
     964:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     968:	88 23       	and	r24, r24
     96a:	1c f4       	brge	.+6      	; 0x972 <__stack+0x73>
		__ticks = 1;
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	8f 87       	std	Y+15, r24	; 0x0f
     970:	18 c1       	rjmp	.+560    	; 0xba2 <__stack+0x2a3>
	else if (__tmp2 > 65535)
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	3f ef       	ldi	r19, 0xFF	; 255
     976:	4f e7       	ldi	r20, 0x7F	; 127
     978:	57 e4       	ldi	r21, 0x47	; 71
     97a:	6b 85       	ldd	r22, Y+11	; 0x0b
     97c:	7c 85       	ldd	r23, Y+12	; 0x0c
     97e:	8d 85       	ldd	r24, Y+13	; 0x0d
     980:	9e 85       	ldd	r25, Y+14	; 0x0e
     982:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     986:	18 16       	cp	r1, r24
     988:	0c f0       	brlt	.+2      	; 0x98c <__stack+0x8d>
     98a:	c9 c0       	rjmp	.+402    	; 0xb1e <__stack+0x21f>
		_delay_ms(__us / 1000.0);
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	4a e7       	ldi	r20, 0x7A	; 122
     992:	54 e4       	ldi	r21, 0x44	; 68
     994:	6b 81       	ldd	r22, Y+3	; 0x03
     996:	7c 81       	ldd	r23, Y+4	; 0x04
     998:	8d 81       	ldd	r24, Y+5	; 0x05
     99a:	9e 81       	ldd	r25, Y+6	; 0x06
     99c:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
     9a0:	c5 56       	subi	r28, 0x65	; 101
     9a2:	df 4f       	sbci	r29, 0xFF	; 255
     9a4:	68 83       	st	Y, r22
     9a6:	79 83       	std	Y+1, r23	; 0x01
     9a8:	8a 83       	std	Y+2, r24	; 0x02
     9aa:	9b 83       	std	Y+3, r25	; 0x03
     9ac:	cb 59       	subi	r28, 0x9B	; 155
     9ae:	d0 40       	sbci	r29, 0x00	; 0
     9b0:	c5 56       	subi	r28, 0x65	; 101
     9b2:	df 4f       	sbci	r29, 0xFF	; 255
     9b4:	88 81       	ld	r24, Y
     9b6:	99 81       	ldd	r25, Y+1	; 0x01
     9b8:	aa 81       	ldd	r26, Y+2	; 0x02
     9ba:	bb 81       	ldd	r27, Y+3	; 0x03
     9bc:	cb 59       	subi	r28, 0x9B	; 155
     9be:	d0 40       	sbci	r29, 0x00	; 0
     9c0:	88 8b       	std	Y+16, r24	; 0x10
     9c2:	99 8b       	std	Y+17, r25	; 0x11
     9c4:	aa 8b       	std	Y+18, r26	; 0x12
     9c6:	bb 8b       	std	Y+19, r27	; 0x13
	__tmp = ((F_CPU) / 4e3) * __ms;
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	4a e7       	ldi	r20, 0x7A	; 122
     9ce:	55 e4       	ldi	r21, 0x45	; 69
     9d0:	68 89       	ldd	r22, Y+16	; 0x10
     9d2:	79 89       	ldd	r23, Y+17	; 0x11
     9d4:	8a 89       	ldd	r24, Y+18	; 0x12
     9d6:	9b 89       	ldd	r25, Y+19	; 0x13
     9d8:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     9dc:	c1 56       	subi	r28, 0x61	; 97
     9de:	df 4f       	sbci	r29, 0xFF	; 255
     9e0:	68 83       	st	Y, r22
     9e2:	79 83       	std	Y+1, r23	; 0x01
     9e4:	8a 83       	std	Y+2, r24	; 0x02
     9e6:	9b 83       	std	Y+3, r25	; 0x03
     9e8:	cf 59       	subi	r28, 0x9F	; 159
     9ea:	d0 40       	sbci	r29, 0x00	; 0
     9ec:	c1 56       	subi	r28, 0x61	; 97
     9ee:	df 4f       	sbci	r29, 0xFF	; 255
     9f0:	88 81       	ld	r24, Y
     9f2:	99 81       	ldd	r25, Y+1	; 0x01
     9f4:	aa 81       	ldd	r26, Y+2	; 0x02
     9f6:	bb 81       	ldd	r27, Y+3	; 0x03
     9f8:	cf 59       	subi	r28, 0x9F	; 159
     9fa:	d0 40       	sbci	r29, 0x00	; 0
     9fc:	8c 8b       	std	Y+20, r24	; 0x14
     9fe:	9d 8b       	std	Y+21, r25	; 0x15
     a00:	ae 8b       	std	Y+22, r26	; 0x16
     a02:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     a04:	20 e0       	ldi	r18, 0x00	; 0
     a06:	30 e0       	ldi	r19, 0x00	; 0
     a08:	40 e8       	ldi	r20, 0x80	; 128
     a0a:	5f e3       	ldi	r21, 0x3F	; 63
     a0c:	6c 89       	ldd	r22, Y+20	; 0x14
     a0e:	7d 89       	ldd	r23, Y+21	; 0x15
     a10:	8e 89       	ldd	r24, Y+22	; 0x16
     a12:	9f 89       	ldd	r25, Y+23	; 0x17
     a14:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     a18:	88 23       	and	r24, r24
     a1a:	2c f4       	brge	.+10     	; 0xa26 <__stack+0x127>
		__ticks = 1;
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	99 8f       	std	Y+25, r25	; 0x19
     a22:	88 8f       	std	Y+24, r24	; 0x18
     a24:	71 c0       	rjmp	.+226    	; 0xb08 <__stack+0x209>
	else if (__tmp > 65535)
     a26:	20 e0       	ldi	r18, 0x00	; 0
     a28:	3f ef       	ldi	r19, 0xFF	; 255
     a2a:	4f e7       	ldi	r20, 0x7F	; 127
     a2c:	57 e4       	ldi	r21, 0x47	; 71
     a2e:	6c 89       	ldd	r22, Y+20	; 0x14
     a30:	7d 89       	ldd	r23, Y+21	; 0x15
     a32:	8e 89       	ldd	r24, Y+22	; 0x16
     a34:	9f 89       	ldd	r25, Y+23	; 0x17
     a36:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     a3a:	18 16       	cp	r1, r24
     a3c:	0c f0       	brlt	.+2      	; 0xa40 <__stack+0x141>
     a3e:	4e c0       	rjmp	.+156    	; 0xadc <__stack+0x1dd>
		__ticks = (uint16_t) (__ms * 10.0);
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 e2       	ldi	r20, 0x20	; 32
     a46:	51 e4       	ldi	r21, 0x41	; 65
     a48:	68 89       	ldd	r22, Y+16	; 0x10
     a4a:	79 89       	ldd	r23, Y+17	; 0x11
     a4c:	8a 89       	ldd	r24, Y+18	; 0x12
     a4e:	9b 89       	ldd	r25, Y+19	; 0x13
     a50:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     a54:	cd 55       	subi	r28, 0x5D	; 93
     a56:	df 4f       	sbci	r29, 0xFF	; 255
     a58:	68 83       	st	Y, r22
     a5a:	79 83       	std	Y+1, r23	; 0x01
     a5c:	8a 83       	std	Y+2, r24	; 0x02
     a5e:	9b 83       	std	Y+3, r25	; 0x03
     a60:	c3 5a       	subi	r28, 0xA3	; 163
     a62:	d0 40       	sbci	r29, 0x00	; 0
     a64:	cd 55       	subi	r28, 0x5D	; 93
     a66:	df 4f       	sbci	r29, 0xFF	; 255
     a68:	88 81       	ld	r24, Y
     a6a:	99 81       	ldd	r25, Y+1	; 0x01
     a6c:	aa 81       	ldd	r26, Y+2	; 0x02
     a6e:	bb 81       	ldd	r27, Y+3	; 0x03
     a70:	c3 5a       	subi	r28, 0xA3	; 163
     a72:	d0 40       	sbci	r29, 0x00	; 0
     a74:	a7 96       	adiw	r28, 0x27	; 39
     a76:	8c af       	std	Y+60, r24	; 0x3c
     a78:	9d af       	std	Y+61, r25	; 0x3d
     a7a:	ae af       	std	Y+62, r26	; 0x3e
     a7c:	bf af       	std	Y+63, r27	; 0x3f
     a7e:	a7 97       	sbiw	r28, 0x27	; 39
     a80:	a7 96       	adiw	r28, 0x27	; 39
     a82:	6c ad       	ldd	r22, Y+60	; 0x3c
     a84:	7d ad       	ldd	r23, Y+61	; 0x3d
     a86:	8e ad       	ldd	r24, Y+62	; 0x3e
     a88:	9f ad       	ldd	r25, Y+63	; 0x3f
     a8a:	a7 97       	sbiw	r28, 0x27	; 39
     a8c:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     a90:	c9 55       	subi	r28, 0x59	; 89
     a92:	df 4f       	sbci	r29, 0xFF	; 255
     a94:	68 83       	st	Y, r22
     a96:	79 83       	std	Y+1, r23	; 0x01
     a98:	8a 83       	std	Y+2, r24	; 0x02
     a9a:	9b 83       	std	Y+3, r25	; 0x03
     a9c:	c7 5a       	subi	r28, 0xA7	; 167
     a9e:	d0 40       	sbci	r29, 0x00	; 0
     aa0:	c9 55       	subi	r28, 0x59	; 89
     aa2:	df 4f       	sbci	r29, 0xFF	; 255
     aa4:	a8 81       	ld	r26, Y
     aa6:	b9 81       	ldd	r27, Y+1	; 0x01
     aa8:	c7 5a       	subi	r28, 0xA7	; 167
     aaa:	d0 40       	sbci	r29, 0x00	; 0
     aac:	b9 8f       	std	Y+25, r27	; 0x19
     aae:	a8 8f       	std	Y+24, r26	; 0x18
		while(__ticks)
     ab0:	10 c0       	rjmp	.+32     	; 0xad2 <__stack+0x1d3>
     ab2:	80 e9       	ldi	r24, 0x90	; 144
     ab4:	91 e0       	ldi	r25, 0x01	; 1
     ab6:	9b 8f       	std	Y+27, r25	; 0x1b
     ab8:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
     aba:	8a 8d       	ldd	r24, Y+26	; 0x1a
     abc:	9b 8d       	ldd	r25, Y+27	; 0x1b
     abe:	01 97       	sbiw	r24, 0x01	; 1
     ac0:	f1 f7       	brne	.-4      	; 0xabe <__stack+0x1bf>
     ac2:	9b 8f       	std	Y+27, r25	; 0x1b
     ac4:	8a 8f       	std	Y+26, r24	; 0x1a
}
     ac6:	00 00       	nop
			__ticks --;
     ac8:	88 8d       	ldd	r24, Y+24	; 0x18
     aca:	99 8d       	ldd	r25, Y+25	; 0x19
     acc:	01 97       	sbiw	r24, 0x01	; 1
     ace:	99 8f       	std	Y+25, r25	; 0x19
     ad0:	88 8f       	std	Y+24, r24	; 0x18
		while(__ticks)
     ad2:	88 8d       	ldd	r24, Y+24	; 0x18
     ad4:	99 8d       	ldd	r25, Y+25	; 0x19
     ad6:	89 2b       	or	r24, r25
     ad8:	61 f7       	brne	.-40     	; 0xab2 <__stack+0x1b3>
		return;
     ada:	63 c0       	rjmp	.+198    	; 0xba2 <__stack+0x2a3>
		__ticks = (uint16_t)__tmp;
     adc:	6c 89       	ldd	r22, Y+20	; 0x14
     ade:	7d 89       	ldd	r23, Y+21	; 0x15
     ae0:	8e 89       	ldd	r24, Y+22	; 0x16
     ae2:	9f 89       	ldd	r25, Y+23	; 0x17
     ae4:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     ae8:	c5 55       	subi	r28, 0x55	; 85
     aea:	df 4f       	sbci	r29, 0xFF	; 255
     aec:	68 83       	st	Y, r22
     aee:	79 83       	std	Y+1, r23	; 0x01
     af0:	8a 83       	std	Y+2, r24	; 0x02
     af2:	9b 83       	std	Y+3, r25	; 0x03
     af4:	cb 5a       	subi	r28, 0xAB	; 171
     af6:	d0 40       	sbci	r29, 0x00	; 0
     af8:	c5 55       	subi	r28, 0x55	; 85
     afa:	df 4f       	sbci	r29, 0xFF	; 255
     afc:	e8 81       	ld	r30, Y
     afe:	f9 81       	ldd	r31, Y+1	; 0x01
     b00:	cb 5a       	subi	r28, 0xAB	; 171
     b02:	d0 40       	sbci	r29, 0x00	; 0
     b04:	f9 8f       	std	Y+25, r31	; 0x19
     b06:	e8 8f       	std	Y+24, r30	; 0x18
     b08:	88 8d       	ldd	r24, Y+24	; 0x18
     b0a:	99 8d       	ldd	r25, Y+25	; 0x19
     b0c:	9d 8f       	std	Y+29, r25	; 0x1d
     b0e:	8c 8f       	std	Y+28, r24	; 0x1c
	__asm__ volatile (
     b10:	8c 8d       	ldd	r24, Y+28	; 0x1c
     b12:	9d 8d       	ldd	r25, Y+29	; 0x1d
     b14:	01 97       	sbiw	r24, 0x01	; 1
     b16:	f1 f7       	brne	.-4      	; 0xb14 <__stack+0x215>
     b18:	9d 8f       	std	Y+29, r25	; 0x1d
     b1a:	8c 8f       	std	Y+28, r24	; 0x1c
}
     b1c:	42 c0       	rjmp	.+132    	; 0xba2 <__stack+0x2a3>
	else if (__tmp > 255)
     b1e:	20 e0       	ldi	r18, 0x00	; 0
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	4f e7       	ldi	r20, 0x7F	; 127
     b24:	53 e4       	ldi	r21, 0x43	; 67
     b26:	6f 81       	ldd	r22, Y+7	; 0x07
     b28:	78 85       	ldd	r23, Y+8	; 0x08
     b2a:	89 85       	ldd	r24, Y+9	; 0x09
     b2c:	9a 85       	ldd	r25, Y+10	; 0x0a
     b2e:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     b32:	18 16       	cp	r1, r24
     b34:	14 f5       	brge	.+68     	; 0xb7a <__stack+0x27b>
		uint16_t __ticks=(uint16_t)__tmp2;
     b36:	6b 85       	ldd	r22, Y+11	; 0x0b
     b38:	7c 85       	ldd	r23, Y+12	; 0x0c
     b3a:	8d 85       	ldd	r24, Y+13	; 0x0d
     b3c:	9e 85       	ldd	r25, Y+14	; 0x0e
     b3e:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     b42:	c1 55       	subi	r28, 0x51	; 81
     b44:	df 4f       	sbci	r29, 0xFF	; 255
     b46:	68 83       	st	Y, r22
     b48:	79 83       	std	Y+1, r23	; 0x01
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	9b 83       	std	Y+3, r25	; 0x03
     b4e:	cf 5a       	subi	r28, 0xAF	; 175
     b50:	d0 40       	sbci	r29, 0x00	; 0
     b52:	c1 55       	subi	r28, 0x51	; 81
     b54:	df 4f       	sbci	r29, 0xFF	; 255
     b56:	88 81       	ld	r24, Y
     b58:	99 81       	ldd	r25, Y+1	; 0x01
     b5a:	cf 5a       	subi	r28, 0xAF	; 175
     b5c:	d0 40       	sbci	r29, 0x00	; 0
     b5e:	9f 8f       	std	Y+31, r25	; 0x1f
     b60:	8e 8f       	std	Y+30, r24	; 0x1e
     b62:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b64:	9f 8d       	ldd	r25, Y+31	; 0x1f
     b66:	99 a3       	std	Y+33, r25	; 0x21
     b68:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
     b6a:	88 a1       	ldd	r24, Y+32	; 0x20
     b6c:	99 a1       	ldd	r25, Y+33	; 0x21
     b6e:	01 97       	sbiw	r24, 0x01	; 1
     b70:	f1 f7       	brne	.-4      	; 0xb6e <__stack+0x26f>
     b72:	99 a3       	std	Y+33, r25	; 0x21
     b74:	88 a3       	std	Y+32, r24	; 0x20
}
     b76:	00 00       	nop
		return;
     b78:	28 c0       	rjmp	.+80     	; 0xbca <__stack+0x2cb>
		__ticks = (uint8_t)__tmp;
     b7a:	6f 81       	ldd	r22, Y+7	; 0x07
     b7c:	78 85       	ldd	r23, Y+8	; 0x08
     b7e:	89 85       	ldd	r24, Y+9	; 0x09
     b80:	9a 85       	ldd	r25, Y+10	; 0x0a
     b82:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     b86:	cd 54       	subi	r28, 0x4D	; 77
     b88:	df 4f       	sbci	r29, 0xFF	; 255
     b8a:	68 83       	st	Y, r22
     b8c:	79 83       	std	Y+1, r23	; 0x01
     b8e:	8a 83       	std	Y+2, r24	; 0x02
     b90:	9b 83       	std	Y+3, r25	; 0x03
     b92:	c3 5b       	subi	r28, 0xB3	; 179
     b94:	d0 40       	sbci	r29, 0x00	; 0
     b96:	cd 54       	subi	r28, 0x4D	; 77
     b98:	df 4f       	sbci	r29, 0xFF	; 255
     b9a:	98 81       	ld	r25, Y
     b9c:	c3 5b       	subi	r28, 0xB3	; 179
     b9e:	d0 40       	sbci	r29, 0x00	; 0
     ba0:	9f 87       	std	Y+15, r25	; 0x0f
     ba2:	ce 01       	movw	r24, r28
     ba4:	8f 5b       	subi	r24, 0xBF	; 191
     ba6:	9f 4f       	sbci	r25, 0xFF	; 255
     ba8:	2f 85       	ldd	r18, Y+15	; 0x0f
     baa:	dc 01       	movw	r26, r24
     bac:	2c 93       	st	X, r18
	__asm__ volatile (
     bae:	ce 01       	movw	r24, r28
     bb0:	8f 5b       	subi	r24, 0xBF	; 191
     bb2:	9f 4f       	sbci	r25, 0xFF	; 255
     bb4:	fc 01       	movw	r30, r24
     bb6:	80 81       	ld	r24, Z
     bb8:	28 2f       	mov	r18, r24
     bba:	2a 95       	dec	r18
     bbc:	f1 f7       	brne	.-4      	; 0xbba <__stack+0x2bb>
     bbe:	ce 01       	movw	r24, r28
     bc0:	8f 5b       	subi	r24, 0xBF	; 191
     bc2:	9f 4f       	sbci	r25, 0xFF	; 255
     bc4:	dc 01       	movw	r26, r24
     bc6:	2c 93       	st	X, r18
}
     bc8:	00 00       	nop
        
        lcd_e_delay();                       /* Enable 500ns low       */
        
        lcd_e_high();
     bca:	85 e2       	ldi	r24, 0x25	; 37
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	fc 01       	movw	r30, r24
     bd0:	20 81       	ld	r18, Z
     bd2:	85 e2       	ldi	r24, 0x25	; 37
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	20 61       	ori	r18, 0x10	; 16
     bd8:	dc 01       	movw	r26, r24
     bda:	2c 93       	st	X, r18
     bdc:	80 e0       	ldi	r24, 0x00	; 0
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	a0 e8       	ldi	r26, 0x80	; 128
     be2:	bf e3       	ldi	r27, 0x3F	; 63
     be4:	8c a7       	std	Y+44, r24	; 0x2c
     be6:	9d a7       	std	Y+45, r25	; 0x2d
     be8:	ae a7       	std	Y+46, r26	; 0x2e
     bea:	bf a7       	std	Y+47, r27	; 0x2f
	__tmp = ((F_CPU) / 3e6) * __us;
     bec:	2b ea       	ldi	r18, 0xAB	; 171
     bee:	3a ea       	ldi	r19, 0xAA	; 170
     bf0:	4a ea       	ldi	r20, 0xAA	; 170
     bf2:	50 e4       	ldi	r21, 0x40	; 64
     bf4:	6c a5       	ldd	r22, Y+44	; 0x2c
     bf6:	7d a5       	ldd	r23, Y+45	; 0x2d
     bf8:	8e a5       	ldd	r24, Y+46	; 0x2e
     bfa:	9f a5       	ldd	r25, Y+47	; 0x2f
     bfc:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     c00:	c9 54       	subi	r28, 0x49	; 73
     c02:	df 4f       	sbci	r29, 0xFF	; 255
     c04:	68 83       	st	Y, r22
     c06:	79 83       	std	Y+1, r23	; 0x01
     c08:	8a 83       	std	Y+2, r24	; 0x02
     c0a:	9b 83       	std	Y+3, r25	; 0x03
     c0c:	c7 5b       	subi	r28, 0xB7	; 183
     c0e:	d0 40       	sbci	r29, 0x00	; 0
     c10:	c9 54       	subi	r28, 0x49	; 73
     c12:	df 4f       	sbci	r29, 0xFF	; 255
     c14:	88 81       	ld	r24, Y
     c16:	99 81       	ldd	r25, Y+1	; 0x01
     c18:	aa 81       	ldd	r26, Y+2	; 0x02
     c1a:	bb 81       	ldd	r27, Y+3	; 0x03
     c1c:	c7 5b       	subi	r28, 0xB7	; 183
     c1e:	d0 40       	sbci	r29, 0x00	; 0
     c20:	88 ab       	std	Y+48, r24	; 0x30
     c22:	99 ab       	std	Y+49, r25	; 0x31
     c24:	aa ab       	std	Y+50, r26	; 0x32
     c26:	bb ab       	std	Y+51, r27	; 0x33
	__tmp2 = ((F_CPU) / 4e6) * __us;
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	40 e8       	ldi	r20, 0x80	; 128
     c2e:	50 e4       	ldi	r21, 0x40	; 64
     c30:	6c a5       	ldd	r22, Y+44	; 0x2c
     c32:	7d a5       	ldd	r23, Y+45	; 0x2d
     c34:	8e a5       	ldd	r24, Y+46	; 0x2e
     c36:	9f a5       	ldd	r25, Y+47	; 0x2f
     c38:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     c3c:	c5 54       	subi	r28, 0x45	; 69
     c3e:	df 4f       	sbci	r29, 0xFF	; 255
     c40:	68 83       	st	Y, r22
     c42:	79 83       	std	Y+1, r23	; 0x01
     c44:	8a 83       	std	Y+2, r24	; 0x02
     c46:	9b 83       	std	Y+3, r25	; 0x03
     c48:	cb 5b       	subi	r28, 0xBB	; 187
     c4a:	d0 40       	sbci	r29, 0x00	; 0
     c4c:	c5 54       	subi	r28, 0x45	; 69
     c4e:	df 4f       	sbci	r29, 0xFF	; 255
     c50:	88 81       	ld	r24, Y
     c52:	99 81       	ldd	r25, Y+1	; 0x01
     c54:	aa 81       	ldd	r26, Y+2	; 0x02
     c56:	bb 81       	ldd	r27, Y+3	; 0x03
     c58:	cb 5b       	subi	r28, 0xBB	; 187
     c5a:	d0 40       	sbci	r29, 0x00	; 0
     c5c:	8c ab       	std	Y+52, r24	; 0x34
     c5e:	9d ab       	std	Y+53, r25	; 0x35
     c60:	ae ab       	std	Y+54, r26	; 0x36
     c62:	bf ab       	std	Y+55, r27	; 0x37
	if (__tmp < 1.0)
     c64:	20 e0       	ldi	r18, 0x00	; 0
     c66:	30 e0       	ldi	r19, 0x00	; 0
     c68:	40 e8       	ldi	r20, 0x80	; 128
     c6a:	5f e3       	ldi	r21, 0x3F	; 63
     c6c:	68 a9       	ldd	r22, Y+48	; 0x30
     c6e:	79 a9       	ldd	r23, Y+49	; 0x31
     c70:	8a a9       	ldd	r24, Y+50	; 0x32
     c72:	9b a9       	ldd	r25, Y+51	; 0x33
     c74:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     c78:	88 23       	and	r24, r24
     c7a:	1c f4       	brge	.+6      	; 0xc82 <__stack+0x383>
		__ticks = 1;
     c7c:	81 e0       	ldi	r24, 0x01	; 1
     c7e:	89 83       	std	Y+1, r24	; 0x01
     c80:	18 c1       	rjmp	.+560    	; 0xeb2 <__stack+0x5b3>
	else if (__tmp2 > 65535)
     c82:	20 e0       	ldi	r18, 0x00	; 0
     c84:	3f ef       	ldi	r19, 0xFF	; 255
     c86:	4f e7       	ldi	r20, 0x7F	; 127
     c88:	57 e4       	ldi	r21, 0x47	; 71
     c8a:	6c a9       	ldd	r22, Y+52	; 0x34
     c8c:	7d a9       	ldd	r23, Y+53	; 0x35
     c8e:	8e a9       	ldd	r24, Y+54	; 0x36
     c90:	9f a9       	ldd	r25, Y+55	; 0x37
     c92:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     c96:	18 16       	cp	r1, r24
     c98:	0c f0       	brlt	.+2      	; 0xc9c <__stack+0x39d>
     c9a:	c9 c0       	rjmp	.+402    	; 0xe2e <__stack+0x52f>
		_delay_ms(__us / 1000.0);
     c9c:	20 e0       	ldi	r18, 0x00	; 0
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	4a e7       	ldi	r20, 0x7A	; 122
     ca2:	54 e4       	ldi	r21, 0x44	; 68
     ca4:	6c a5       	ldd	r22, Y+44	; 0x2c
     ca6:	7d a5       	ldd	r23, Y+45	; 0x2d
     ca8:	8e a5       	ldd	r24, Y+46	; 0x2e
     caa:	9f a5       	ldd	r25, Y+47	; 0x2f
     cac:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
     cb0:	c1 54       	subi	r28, 0x41	; 65
     cb2:	df 4f       	sbci	r29, 0xFF	; 255
     cb4:	68 83       	st	Y, r22
     cb6:	79 83       	std	Y+1, r23	; 0x01
     cb8:	8a 83       	std	Y+2, r24	; 0x02
     cba:	9b 83       	std	Y+3, r25	; 0x03
     cbc:	cf 5b       	subi	r28, 0xBF	; 191
     cbe:	d0 40       	sbci	r29, 0x00	; 0
     cc0:	c1 54       	subi	r28, 0x41	; 65
     cc2:	df 4f       	sbci	r29, 0xFF	; 255
     cc4:	88 81       	ld	r24, Y
     cc6:	99 81       	ldd	r25, Y+1	; 0x01
     cc8:	aa 81       	ldd	r26, Y+2	; 0x02
     cca:	bb 81       	ldd	r27, Y+3	; 0x03
     ccc:	cf 5b       	subi	r28, 0xBF	; 191
     cce:	d0 40       	sbci	r29, 0x00	; 0
     cd0:	88 af       	std	Y+56, r24	; 0x38
     cd2:	99 af       	std	Y+57, r25	; 0x39
     cd4:	aa af       	std	Y+58, r26	; 0x3a
     cd6:	bb af       	std	Y+59, r27	; 0x3b
	__tmp = ((F_CPU) / 4e3) * __ms;
     cd8:	20 e0       	ldi	r18, 0x00	; 0
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	4a e7       	ldi	r20, 0x7A	; 122
     cde:	55 e4       	ldi	r21, 0x45	; 69
     ce0:	68 ad       	ldd	r22, Y+56	; 0x38
     ce2:	79 ad       	ldd	r23, Y+57	; 0x39
     ce4:	8a ad       	ldd	r24, Y+58	; 0x3a
     ce6:	9b ad       	ldd	r25, Y+59	; 0x3b
     ce8:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     cec:	cd 53       	subi	r28, 0x3D	; 61
     cee:	df 4f       	sbci	r29, 0xFF	; 255
     cf0:	68 83       	st	Y, r22
     cf2:	79 83       	std	Y+1, r23	; 0x01
     cf4:	8a 83       	std	Y+2, r24	; 0x02
     cf6:	9b 83       	std	Y+3, r25	; 0x03
     cf8:	c3 5c       	subi	r28, 0xC3	; 195
     cfa:	d0 40       	sbci	r29, 0x00	; 0
     cfc:	cd 53       	subi	r28, 0x3D	; 61
     cfe:	df 4f       	sbci	r29, 0xFF	; 255
     d00:	88 81       	ld	r24, Y
     d02:	99 81       	ldd	r25, Y+1	; 0x01
     d04:	aa 81       	ldd	r26, Y+2	; 0x02
     d06:	bb 81       	ldd	r27, Y+3	; 0x03
     d08:	c3 5c       	subi	r28, 0xC3	; 195
     d0a:	d0 40       	sbci	r29, 0x00	; 0
     d0c:	8c af       	std	Y+60, r24	; 0x3c
     d0e:	9d af       	std	Y+61, r25	; 0x3d
     d10:	ae af       	std	Y+62, r26	; 0x3e
     d12:	bf af       	std	Y+63, r27	; 0x3f
	if (__tmp < 1.0)
     d14:	20 e0       	ldi	r18, 0x00	; 0
     d16:	30 e0       	ldi	r19, 0x00	; 0
     d18:	40 e8       	ldi	r20, 0x80	; 128
     d1a:	5f e3       	ldi	r21, 0x3F	; 63
     d1c:	6c ad       	ldd	r22, Y+60	; 0x3c
     d1e:	7d ad       	ldd	r23, Y+61	; 0x3d
     d20:	8e ad       	ldd	r24, Y+62	; 0x3e
     d22:	9f ad       	ldd	r25, Y+63	; 0x3f
     d24:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     d28:	88 23       	and	r24, r24
     d2a:	2c f4       	brge	.+10     	; 0xd36 <__stack+0x437>
		__ticks = 1;
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	9f a3       	std	Y+39, r25	; 0x27
     d32:	8e a3       	std	Y+38, r24	; 0x26
     d34:	71 c0       	rjmp	.+226    	; 0xe18 <__stack+0x519>
	else if (__tmp > 65535)
     d36:	20 e0       	ldi	r18, 0x00	; 0
     d38:	3f ef       	ldi	r19, 0xFF	; 255
     d3a:	4f e7       	ldi	r20, 0x7F	; 127
     d3c:	57 e4       	ldi	r21, 0x47	; 71
     d3e:	6c ad       	ldd	r22, Y+60	; 0x3c
     d40:	7d ad       	ldd	r23, Y+61	; 0x3d
     d42:	8e ad       	ldd	r24, Y+62	; 0x3e
     d44:	9f ad       	ldd	r25, Y+63	; 0x3f
     d46:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     d4a:	18 16       	cp	r1, r24
     d4c:	0c f0       	brlt	.+2      	; 0xd50 <__stack+0x451>
     d4e:	4e c0       	rjmp	.+156    	; 0xdec <__stack+0x4ed>
		__ticks = (uint16_t) (__ms * 10.0);
     d50:	20 e0       	ldi	r18, 0x00	; 0
     d52:	30 e0       	ldi	r19, 0x00	; 0
     d54:	40 e2       	ldi	r20, 0x20	; 32
     d56:	51 e4       	ldi	r21, 0x41	; 65
     d58:	68 ad       	ldd	r22, Y+56	; 0x38
     d5a:	79 ad       	ldd	r23, Y+57	; 0x39
     d5c:	8a ad       	ldd	r24, Y+58	; 0x3a
     d5e:	9b ad       	ldd	r25, Y+59	; 0x3b
     d60:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     d64:	c9 53       	subi	r28, 0x39	; 57
     d66:	df 4f       	sbci	r29, 0xFF	; 255
     d68:	68 83       	st	Y, r22
     d6a:	79 83       	std	Y+1, r23	; 0x01
     d6c:	8a 83       	std	Y+2, r24	; 0x02
     d6e:	9b 83       	std	Y+3, r25	; 0x03
     d70:	c7 5c       	subi	r28, 0xC7	; 199
     d72:	d0 40       	sbci	r29, 0x00	; 0
     d74:	c9 53       	subi	r28, 0x39	; 57
     d76:	df 4f       	sbci	r29, 0xFF	; 255
     d78:	88 81       	ld	r24, Y
     d7a:	99 81       	ldd	r25, Y+1	; 0x01
     d7c:	aa 81       	ldd	r26, Y+2	; 0x02
     d7e:	bb 81       	ldd	r27, Y+3	; 0x03
     d80:	c7 5c       	subi	r28, 0xC7	; 199
     d82:	d0 40       	sbci	r29, 0x00	; 0
     d84:	ab 96       	adiw	r28, 0x2b	; 43
     d86:	8c af       	std	Y+60, r24	; 0x3c
     d88:	9d af       	std	Y+61, r25	; 0x3d
     d8a:	ae af       	std	Y+62, r26	; 0x3e
     d8c:	bf af       	std	Y+63, r27	; 0x3f
     d8e:	ab 97       	sbiw	r28, 0x2b	; 43
     d90:	ab 96       	adiw	r28, 0x2b	; 43
     d92:	6c ad       	ldd	r22, Y+60	; 0x3c
     d94:	7d ad       	ldd	r23, Y+61	; 0x3d
     d96:	8e ad       	ldd	r24, Y+62	; 0x3e
     d98:	9f ad       	ldd	r25, Y+63	; 0x3f
     d9a:	ab 97       	sbiw	r28, 0x2b	; 43
     d9c:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     da0:	c5 53       	subi	r28, 0x35	; 53
     da2:	df 4f       	sbci	r29, 0xFF	; 255
     da4:	68 83       	st	Y, r22
     da6:	79 83       	std	Y+1, r23	; 0x01
     da8:	8a 83       	std	Y+2, r24	; 0x02
     daa:	9b 83       	std	Y+3, r25	; 0x03
     dac:	cb 5c       	subi	r28, 0xCB	; 203
     dae:	d0 40       	sbci	r29, 0x00	; 0
     db0:	c5 53       	subi	r28, 0x35	; 53
     db2:	df 4f       	sbci	r29, 0xFF	; 255
     db4:	a8 81       	ld	r26, Y
     db6:	b9 81       	ldd	r27, Y+1	; 0x01
     db8:	cb 5c       	subi	r28, 0xCB	; 203
     dba:	d0 40       	sbci	r29, 0x00	; 0
     dbc:	bf a3       	std	Y+39, r27	; 0x27
     dbe:	ae a3       	std	Y+38, r26	; 0x26
		while(__ticks)
     dc0:	10 c0       	rjmp	.+32     	; 0xde2 <__stack+0x4e3>
     dc2:	80 e9       	ldi	r24, 0x90	; 144
     dc4:	91 e0       	ldi	r25, 0x01	; 1
     dc6:	9b a7       	std	Y+43, r25	; 0x2b
     dc8:	8a a7       	std	Y+42, r24	; 0x2a
	__asm__ volatile (
     dca:	8a a5       	ldd	r24, Y+42	; 0x2a
     dcc:	9b a5       	ldd	r25, Y+43	; 0x2b
     dce:	01 97       	sbiw	r24, 0x01	; 1
     dd0:	f1 f7       	brne	.-4      	; 0xdce <__stack+0x4cf>
     dd2:	9b a7       	std	Y+43, r25	; 0x2b
     dd4:	8a a7       	std	Y+42, r24	; 0x2a
}
     dd6:	00 00       	nop
			__ticks --;
     dd8:	8e a1       	ldd	r24, Y+38	; 0x26
     dda:	9f a1       	ldd	r25, Y+39	; 0x27
     ddc:	01 97       	sbiw	r24, 0x01	; 1
     dde:	9f a3       	std	Y+39, r25	; 0x27
     de0:	8e a3       	std	Y+38, r24	; 0x26
		while(__ticks)
     de2:	8e a1       	ldd	r24, Y+38	; 0x26
     de4:	9f a1       	ldd	r25, Y+39	; 0x27
     de6:	89 2b       	or	r24, r25
     de8:	61 f7       	brne	.-40     	; 0xdc2 <__stack+0x4c3>
		return;
     dea:	63 c0       	rjmp	.+198    	; 0xeb2 <__stack+0x5b3>
		__ticks = (uint16_t)__tmp;
     dec:	6c ad       	ldd	r22, Y+60	; 0x3c
     dee:	7d ad       	ldd	r23, Y+61	; 0x3d
     df0:	8e ad       	ldd	r24, Y+62	; 0x3e
     df2:	9f ad       	ldd	r25, Y+63	; 0x3f
     df4:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     df8:	c1 53       	subi	r28, 0x31	; 49
     dfa:	df 4f       	sbci	r29, 0xFF	; 255
     dfc:	68 83       	st	Y, r22
     dfe:	79 83       	std	Y+1, r23	; 0x01
     e00:	8a 83       	std	Y+2, r24	; 0x02
     e02:	9b 83       	std	Y+3, r25	; 0x03
     e04:	cf 5c       	subi	r28, 0xCF	; 207
     e06:	d0 40       	sbci	r29, 0x00	; 0
     e08:	c1 53       	subi	r28, 0x31	; 49
     e0a:	df 4f       	sbci	r29, 0xFF	; 255
     e0c:	e8 81       	ld	r30, Y
     e0e:	f9 81       	ldd	r31, Y+1	; 0x01
     e10:	cf 5c       	subi	r28, 0xCF	; 207
     e12:	d0 40       	sbci	r29, 0x00	; 0
     e14:	ff a3       	std	Y+39, r31	; 0x27
     e16:	ee a3       	std	Y+38, r30	; 0x26
     e18:	8e a1       	ldd	r24, Y+38	; 0x26
     e1a:	9f a1       	ldd	r25, Y+39	; 0x27
     e1c:	99 a7       	std	Y+41, r25	; 0x29
     e1e:	88 a7       	std	Y+40, r24	; 0x28
	__asm__ volatile (
     e20:	88 a5       	ldd	r24, Y+40	; 0x28
     e22:	99 a5       	ldd	r25, Y+41	; 0x29
     e24:	01 97       	sbiw	r24, 0x01	; 1
     e26:	f1 f7       	brne	.-4      	; 0xe24 <__stack+0x525>
     e28:	99 a7       	std	Y+41, r25	; 0x29
     e2a:	88 a7       	std	Y+40, r24	; 0x28
}
     e2c:	42 c0       	rjmp	.+132    	; 0xeb2 <__stack+0x5b3>
	else if (__tmp > 255)
     e2e:	20 e0       	ldi	r18, 0x00	; 0
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	4f e7       	ldi	r20, 0x7F	; 127
     e34:	53 e4       	ldi	r21, 0x43	; 67
     e36:	68 a9       	ldd	r22, Y+48	; 0x30
     e38:	79 a9       	ldd	r23, Y+49	; 0x31
     e3a:	8a a9       	ldd	r24, Y+50	; 0x32
     e3c:	9b a9       	ldd	r25, Y+51	; 0x33
     e3e:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     e42:	18 16       	cp	r1, r24
     e44:	14 f5       	brge	.+68     	; 0xe8a <__stack+0x58b>
		uint16_t __ticks=(uint16_t)__tmp2;
     e46:	6c a9       	ldd	r22, Y+52	; 0x34
     e48:	7d a9       	ldd	r23, Y+53	; 0x35
     e4a:	8e a9       	ldd	r24, Y+54	; 0x36
     e4c:	9f a9       	ldd	r25, Y+55	; 0x37
     e4e:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     e52:	cd 52       	subi	r28, 0x2D	; 45
     e54:	df 4f       	sbci	r29, 0xFF	; 255
     e56:	68 83       	st	Y, r22
     e58:	79 83       	std	Y+1, r23	; 0x01
     e5a:	8a 83       	std	Y+2, r24	; 0x02
     e5c:	9b 83       	std	Y+3, r25	; 0x03
     e5e:	c3 5d       	subi	r28, 0xD3	; 211
     e60:	d0 40       	sbci	r29, 0x00	; 0
     e62:	cd 52       	subi	r28, 0x2D	; 45
     e64:	df 4f       	sbci	r29, 0xFF	; 255
     e66:	88 81       	ld	r24, Y
     e68:	99 81       	ldd	r25, Y+1	; 0x01
     e6a:	c3 5d       	subi	r28, 0xD3	; 211
     e6c:	d0 40       	sbci	r29, 0x00	; 0
     e6e:	9b a3       	std	Y+35, r25	; 0x23
     e70:	8a a3       	std	Y+34, r24	; 0x22
     e72:	8a a1       	ldd	r24, Y+34	; 0x22
     e74:	9b a1       	ldd	r25, Y+35	; 0x23
     e76:	9d a3       	std	Y+37, r25	; 0x25
     e78:	8c a3       	std	Y+36, r24	; 0x24
	__asm__ volatile (
     e7a:	8c a1       	ldd	r24, Y+36	; 0x24
     e7c:	9d a1       	ldd	r25, Y+37	; 0x25
     e7e:	01 97       	sbiw	r24, 0x01	; 1
     e80:	f1 f7       	brne	.-4      	; 0xe7e <__stack+0x57f>
     e82:	9d a3       	std	Y+37, r25	; 0x25
     e84:	8c a3       	std	Y+36, r24	; 0x24
}
     e86:	00 00       	nop
		return;
     e88:	1b c0       	rjmp	.+54     	; 0xec0 <__stack+0x5c1>
		__ticks = (uint8_t)__tmp;
     e8a:	68 a9       	ldd	r22, Y+48	; 0x30
     e8c:	79 a9       	ldd	r23, Y+49	; 0x31
     e8e:	8a a9       	ldd	r24, Y+50	; 0x32
     e90:	9b a9       	ldd	r25, Y+51	; 0x33
     e92:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
     e96:	c9 52       	subi	r28, 0x29	; 41
     e98:	df 4f       	sbci	r29, 0xFF	; 255
     e9a:	68 83       	st	Y, r22
     e9c:	79 83       	std	Y+1, r23	; 0x01
     e9e:	8a 83       	std	Y+2, r24	; 0x02
     ea0:	9b 83       	std	Y+3, r25	; 0x03
     ea2:	c7 5d       	subi	r28, 0xD7	; 215
     ea4:	d0 40       	sbci	r29, 0x00	; 0
     ea6:	c9 52       	subi	r28, 0x29	; 41
     ea8:	df 4f       	sbci	r29, 0xFF	; 255
     eaa:	98 81       	ld	r25, Y
     eac:	c7 5d       	subi	r28, 0xD7	; 215
     eae:	d0 40       	sbci	r29, 0x00	; 0
     eb0:	99 83       	std	Y+1, r25	; 0x01
     eb2:	89 81       	ldd	r24, Y+1	; 0x01
     eb4:	8a 83       	std	Y+2, r24	; 0x02
	__asm__ volatile (
     eb6:	8a 81       	ldd	r24, Y+2	; 0x02
     eb8:	8a 95       	dec	r24
     eba:	f1 f7       	brne	.-4      	; 0xeb8 <__stack+0x5b9>
     ebc:	8a 83       	std	Y+2, r24	; 0x02
}
     ebe:	00 00       	nop
        lcd_e_delay();
        data |= PIN(LCD_DATA0_PORT)&0x0F;    /* read low nibble        */
     ec0:	83 e2       	ldi	r24, 0x23	; 35
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	dc 01       	movw	r26, r24
     ec6:	8c 91       	ld	r24, X
     ec8:	88 2f       	mov	r24, r24
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	8f 70       	andi	r24, 0x0F	; 15
     ece:	99 27       	eor	r25, r25
     ed0:	28 2f       	mov	r18, r24
     ed2:	ce 01       	movw	r24, r28
     ed4:	80 5c       	subi	r24, 0xC0	; 192
     ed6:	9f 4f       	sbci	r25, 0xFF	; 255
     ed8:	fc 01       	movw	r30, r24
     eda:	80 81       	ld	r24, Z
     edc:	28 2b       	or	r18, r24
     ede:	ce 01       	movw	r24, r28
     ee0:	80 5c       	subi	r24, 0xC0	; 192
     ee2:	9f 4f       	sbci	r25, 0xFF	; 255
     ee4:	dc 01       	movw	r26, r24
     ee6:	2c 93       	st	X, r18
        lcd_e_low();
     ee8:	85 e2       	ldi	r24, 0x25	; 37
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	fc 01       	movw	r30, r24
     eee:	20 81       	ld	r18, Z
     ef0:	85 e2       	ldi	r24, 0x25	; 37
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	2f 7e       	andi	r18, 0xEF	; 239
     ef6:	dc 01       	movw	r26, r24
     ef8:	2c 93       	st	X, r18
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x02;
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
        lcd_e_low();
    }
    return data;
     efa:	ce 01       	movw	r24, r28
     efc:	80 5c       	subi	r24, 0xC0	; 192
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	fc 01       	movw	r30, r24
     f02:	80 81       	ld	r24, Z
}
     f04:	c6 52       	subi	r28, 0x26	; 38
     f06:	df 4f       	sbci	r29, 0xFF	; 255
     f08:	0f b6       	in	r0, 0x3f	; 63
     f0a:	f8 94       	cli
     f0c:	de bf       	out	0x3e, r29	; 62
     f0e:	0f be       	out	0x3f, r0	; 63
     f10:	cd bf       	out	0x3d, r28	; 61
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	1f 91       	pop	r17
     f18:	0f 91       	pop	r16
     f1a:	08 95       	ret

00000f1c <lcd_waitbusy>:
/*************************************************************************
loops while lcd is busy, returns address counter
*************************************************************************/
static uint8_t lcd_waitbusy(void)

{
     f1c:	1f 93       	push	r17
     f1e:	cf 93       	push	r28
     f20:	df 93       	push	r29
     f22:	cd b7       	in	r28, 0x3d	; 61
     f24:	de b7       	in	r29, 0x3e	; 62
     f26:	c8 54       	subi	r28, 0x48	; 72
     f28:	d1 09       	sbc	r29, r1
     f2a:	0f b6       	in	r0, 0x3f	; 63
     f2c:	f8 94       	cli
     f2e:	de bf       	out	0x3e, r29	; 62
     f30:	0f be       	out	0x3f, r0	; 63
     f32:	cd bf       	out	0x3d, r28	; 61
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
     f34:	00 00       	nop
     f36:	80 e0       	ldi	r24, 0x00	; 0
     f38:	0e 94 fe 01 	call	0x3fc	; 0x3fc <lcd_read>
     f3c:	18 2f       	mov	r17, r24
     f3e:	81 2f       	mov	r24, r17
     f40:	88 23       	and	r24, r24
     f42:	cc f3       	brlt	.-14     	; 0xf36 <lcd_waitbusy+0x1a>
     f44:	80 e0       	ldi	r24, 0x00	; 0
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	a0 e8       	ldi	r26, 0x80	; 128
     f4a:	b0 e4       	ldi	r27, 0x40	; 64
     f4c:	89 83       	std	Y+1, r24	; 0x01
     f4e:	9a 83       	std	Y+2, r25	; 0x02
     f50:	ab 83       	std	Y+3, r26	; 0x03
     f52:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 3e6) * __us;
     f54:	2b ea       	ldi	r18, 0xAB	; 171
     f56:	3a ea       	ldi	r19, 0xAA	; 170
     f58:	4a ea       	ldi	r20, 0xAA	; 170
     f5a:	50 e4       	ldi	r21, 0x40	; 64
     f5c:	69 81       	ldd	r22, Y+1	; 0x01
     f5e:	7a 81       	ldd	r23, Y+2	; 0x02
     f60:	8b 81       	ldd	r24, Y+3	; 0x03
     f62:	9c 81       	ldd	r25, Y+4	; 0x04
     f64:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     f68:	6d a3       	std	Y+37, r22	; 0x25
     f6a:	7e a3       	std	Y+38, r23	; 0x26
     f6c:	8f a3       	std	Y+39, r24	; 0x27
     f6e:	98 a7       	std	Y+40, r25	; 0x28
     f70:	8d a1       	ldd	r24, Y+37	; 0x25
     f72:	9e a1       	ldd	r25, Y+38	; 0x26
     f74:	af a1       	ldd	r26, Y+39	; 0x27
     f76:	b8 a5       	ldd	r27, Y+40	; 0x28
     f78:	8d 83       	std	Y+5, r24	; 0x05
     f7a:	9e 83       	std	Y+6, r25	; 0x06
     f7c:	af 83       	std	Y+7, r26	; 0x07
     f7e:	b8 87       	std	Y+8, r27	; 0x08
	__tmp2 = ((F_CPU) / 4e6) * __us;
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	40 e8       	ldi	r20, 0x80	; 128
     f86:	50 e4       	ldi	r21, 0x40	; 64
     f88:	69 81       	ldd	r22, Y+1	; 0x01
     f8a:	7a 81       	ldd	r23, Y+2	; 0x02
     f8c:	8b 81       	ldd	r24, Y+3	; 0x03
     f8e:	9c 81       	ldd	r25, Y+4	; 0x04
     f90:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
     f94:	69 a7       	std	Y+41, r22	; 0x29
     f96:	7a a7       	std	Y+42, r23	; 0x2a
     f98:	8b a7       	std	Y+43, r24	; 0x2b
     f9a:	9c a7       	std	Y+44, r25	; 0x2c
     f9c:	89 a5       	ldd	r24, Y+41	; 0x29
     f9e:	9a a5       	ldd	r25, Y+42	; 0x2a
     fa0:	ab a5       	ldd	r26, Y+43	; 0x2b
     fa2:	bc a5       	ldd	r27, Y+44	; 0x2c
     fa4:	89 87       	std	Y+9, r24	; 0x09
     fa6:	9a 87       	std	Y+10, r25	; 0x0a
     fa8:	ab 87       	std	Y+11, r26	; 0x0b
     faa:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     fac:	20 e0       	ldi	r18, 0x00	; 0
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	40 e8       	ldi	r20, 0x80	; 128
     fb2:	5f e3       	ldi	r21, 0x3F	; 63
     fb4:	6d 81       	ldd	r22, Y+5	; 0x05
     fb6:	7e 81       	ldd	r23, Y+6	; 0x06
     fb8:	8f 81       	ldd	r24, Y+7	; 0x07
     fba:	98 85       	ldd	r25, Y+8	; 0x08
     fbc:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
     fc0:	88 23       	and	r24, r24
     fc2:	1c f4       	brge	.+6      	; 0xfca <lcd_waitbusy+0xae>
		__ticks = 1;
     fc4:	81 e0       	ldi	r24, 0x01	; 1
     fc6:	8d 87       	std	Y+13, r24	; 0x0d
     fc8:	e5 c0       	rjmp	.+458    	; 0x1194 <lcd_waitbusy+0x278>
	else if (__tmp2 > 65535)
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	3f ef       	ldi	r19, 0xFF	; 255
     fce:	4f e7       	ldi	r20, 0x7F	; 127
     fd0:	57 e4       	ldi	r21, 0x47	; 71
     fd2:	69 85       	ldd	r22, Y+9	; 0x09
     fd4:	7a 85       	ldd	r23, Y+10	; 0x0a
     fd6:	8b 85       	ldd	r24, Y+11	; 0x0b
     fd8:	9c 85       	ldd	r25, Y+12	; 0x0c
     fda:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
     fde:	18 16       	cp	r1, r24
     fe0:	0c f0       	brlt	.+2      	; 0xfe4 <lcd_waitbusy+0xc8>
     fe2:	9e c0       	rjmp	.+316    	; 0x1120 <lcd_waitbusy+0x204>
		_delay_ms(__us / 1000.0);
     fe4:	20 e0       	ldi	r18, 0x00	; 0
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	4a e7       	ldi	r20, 0x7A	; 122
     fea:	54 e4       	ldi	r21, 0x44	; 68
     fec:	69 81       	ldd	r22, Y+1	; 0x01
     fee:	7a 81       	ldd	r23, Y+2	; 0x02
     ff0:	8b 81       	ldd	r24, Y+3	; 0x03
     ff2:	9c 81       	ldd	r25, Y+4	; 0x04
     ff4:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
     ff8:	6d a7       	std	Y+45, r22	; 0x2d
     ffa:	7e a7       	std	Y+46, r23	; 0x2e
     ffc:	8f a7       	std	Y+47, r24	; 0x2f
     ffe:	98 ab       	std	Y+48, r25	; 0x30
    1000:	8d a5       	ldd	r24, Y+45	; 0x2d
    1002:	9e a5       	ldd	r25, Y+46	; 0x2e
    1004:	af a5       	ldd	r26, Y+47	; 0x2f
    1006:	b8 a9       	ldd	r27, Y+48	; 0x30
    1008:	8e 87       	std	Y+14, r24	; 0x0e
    100a:	9f 87       	std	Y+15, r25	; 0x0f
    100c:	a8 8b       	std	Y+16, r26	; 0x10
    100e:	b9 8b       	std	Y+17, r27	; 0x11
	__tmp = ((F_CPU) / 4e3) * __ms;
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	4a e7       	ldi	r20, 0x7A	; 122
    1016:	55 e4       	ldi	r21, 0x45	; 69
    1018:	6e 85       	ldd	r22, Y+14	; 0x0e
    101a:	7f 85       	ldd	r23, Y+15	; 0x0f
    101c:	88 89       	ldd	r24, Y+16	; 0x10
    101e:	99 89       	ldd	r25, Y+17	; 0x11
    1020:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1024:	69 ab       	std	Y+49, r22	; 0x31
    1026:	7a ab       	std	Y+50, r23	; 0x32
    1028:	8b ab       	std	Y+51, r24	; 0x33
    102a:	9c ab       	std	Y+52, r25	; 0x34
    102c:	89 a9       	ldd	r24, Y+49	; 0x31
    102e:	9a a9       	ldd	r25, Y+50	; 0x32
    1030:	ab a9       	ldd	r26, Y+51	; 0x33
    1032:	bc a9       	ldd	r27, Y+52	; 0x34
    1034:	8a 8b       	std	Y+18, r24	; 0x12
    1036:	9b 8b       	std	Y+19, r25	; 0x13
    1038:	ac 8b       	std	Y+20, r26	; 0x14
    103a:	bd 8b       	std	Y+21, r27	; 0x15
	if (__tmp < 1.0)
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e8       	ldi	r20, 0x80	; 128
    1042:	5f e3       	ldi	r21, 0x3F	; 63
    1044:	6a 89       	ldd	r22, Y+18	; 0x12
    1046:	7b 89       	ldd	r23, Y+19	; 0x13
    1048:	8c 89       	ldd	r24, Y+20	; 0x14
    104a:	9d 89       	ldd	r25, Y+21	; 0x15
    104c:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    1050:	88 23       	and	r24, r24
    1052:	2c f4       	brge	.+10     	; 0x105e <lcd_waitbusy+0x142>
		__ticks = 1;
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	9f 8b       	std	Y+23, r25	; 0x17
    105a:	8e 8b       	std	Y+22, r24	; 0x16
    105c:	56 c0       	rjmp	.+172    	; 0x110a <lcd_waitbusy+0x1ee>
	else if (__tmp > 65535)
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	3f ef       	ldi	r19, 0xFF	; 255
    1062:	4f e7       	ldi	r20, 0x7F	; 127
    1064:	57 e4       	ldi	r21, 0x47	; 71
    1066:	6a 89       	ldd	r22, Y+18	; 0x12
    1068:	7b 89       	ldd	r23, Y+19	; 0x13
    106a:	8c 89       	ldd	r24, Y+20	; 0x14
    106c:	9d 89       	ldd	r25, Y+21	; 0x15
    106e:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1072:	18 16       	cp	r1, r24
    1074:	d4 f5       	brge	.+116    	; 0x10ea <lcd_waitbusy+0x1ce>
		__ticks = (uint16_t) (__ms * 10.0);
    1076:	20 e0       	ldi	r18, 0x00	; 0
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	40 e2       	ldi	r20, 0x20	; 32
    107c:	51 e4       	ldi	r21, 0x41	; 65
    107e:	6e 85       	ldd	r22, Y+14	; 0x0e
    1080:	7f 85       	ldd	r23, Y+15	; 0x0f
    1082:	88 89       	ldd	r24, Y+16	; 0x10
    1084:	99 89       	ldd	r25, Y+17	; 0x11
    1086:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    108a:	6d ab       	std	Y+53, r22	; 0x35
    108c:	7e ab       	std	Y+54, r23	; 0x36
    108e:	8f ab       	std	Y+55, r24	; 0x37
    1090:	98 af       	std	Y+56, r25	; 0x38
    1092:	8d a9       	ldd	r24, Y+53	; 0x35
    1094:	9e a9       	ldd	r25, Y+54	; 0x36
    1096:	af a9       	ldd	r26, Y+55	; 0x37
    1098:	b8 ad       	ldd	r27, Y+56	; 0x38
    109a:	89 a3       	std	Y+33, r24	; 0x21
    109c:	9a a3       	std	Y+34, r25	; 0x22
    109e:	ab a3       	std	Y+35, r26	; 0x23
    10a0:	bc a3       	std	Y+36, r27	; 0x24
    10a2:	69 a1       	ldd	r22, Y+33	; 0x21
    10a4:	7a a1       	ldd	r23, Y+34	; 0x22
    10a6:	8b a1       	ldd	r24, Y+35	; 0x23
    10a8:	9c a1       	ldd	r25, Y+36	; 0x24
    10aa:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    10ae:	69 af       	std	Y+57, r22	; 0x39
    10b0:	7a af       	std	Y+58, r23	; 0x3a
    10b2:	8b af       	std	Y+59, r24	; 0x3b
    10b4:	9c af       	std	Y+60, r25	; 0x3c
    10b6:	a9 ad       	ldd	r26, Y+57	; 0x39
    10b8:	ba ad       	ldd	r27, Y+58	; 0x3a
    10ba:	bf 8b       	std	Y+23, r27	; 0x17
    10bc:	ae 8b       	std	Y+22, r26	; 0x16
		while(__ticks)
    10be:	10 c0       	rjmp	.+32     	; 0x10e0 <lcd_waitbusy+0x1c4>
    10c0:	80 e9       	ldi	r24, 0x90	; 144
    10c2:	91 e0       	ldi	r25, 0x01	; 1
    10c4:	99 8f       	std	Y+25, r25	; 0x19
    10c6:	88 8f       	std	Y+24, r24	; 0x18
	__asm__ volatile (
    10c8:	88 8d       	ldd	r24, Y+24	; 0x18
    10ca:	99 8d       	ldd	r25, Y+25	; 0x19
    10cc:	01 97       	sbiw	r24, 0x01	; 1
    10ce:	f1 f7       	brne	.-4      	; 0x10cc <lcd_waitbusy+0x1b0>
    10d0:	99 8f       	std	Y+25, r25	; 0x19
    10d2:	88 8f       	std	Y+24, r24	; 0x18
}
    10d4:	00 00       	nop
			__ticks --;
    10d6:	8e 89       	ldd	r24, Y+22	; 0x16
    10d8:	9f 89       	ldd	r25, Y+23	; 0x17
    10da:	01 97       	sbiw	r24, 0x01	; 1
    10dc:	9f 8b       	std	Y+23, r25	; 0x17
    10de:	8e 8b       	std	Y+22, r24	; 0x16
		while(__ticks)
    10e0:	8e 89       	ldd	r24, Y+22	; 0x16
    10e2:	9f 89       	ldd	r25, Y+23	; 0x17
    10e4:	89 2b       	or	r24, r25
    10e6:	61 f7       	brne	.-40     	; 0x10c0 <lcd_waitbusy+0x1a4>
		return;
    10e8:	55 c0       	rjmp	.+170    	; 0x1194 <lcd_waitbusy+0x278>
		__ticks = (uint16_t)__tmp;
    10ea:	6a 89       	ldd	r22, Y+18	; 0x12
    10ec:	7b 89       	ldd	r23, Y+19	; 0x13
    10ee:	8c 89       	ldd	r24, Y+20	; 0x14
    10f0:	9d 89       	ldd	r25, Y+21	; 0x15
    10f2:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    10f6:	21 96       	adiw	r28, 0x01	; 1
    10f8:	6c af       	std	Y+60, r22	; 0x3c
    10fa:	7d af       	std	Y+61, r23	; 0x3d
    10fc:	8e af       	std	Y+62, r24	; 0x3e
    10fe:	9f af       	std	Y+63, r25	; 0x3f
    1100:	21 97       	sbiw	r28, 0x01	; 1
    1102:	8d ad       	ldd	r24, Y+61	; 0x3d
    1104:	9e ad       	ldd	r25, Y+62	; 0x3e
    1106:	9f 8b       	std	Y+23, r25	; 0x17
    1108:	8e 8b       	std	Y+22, r24	; 0x16
    110a:	8e 89       	ldd	r24, Y+22	; 0x16
    110c:	9f 89       	ldd	r25, Y+23	; 0x17
    110e:	9b 8f       	std	Y+27, r25	; 0x1b
    1110:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
    1112:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1114:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1116:	01 97       	sbiw	r24, 0x01	; 1
    1118:	f1 f7       	brne	.-4      	; 0x1116 <lcd_waitbusy+0x1fa>
    111a:	9b 8f       	std	Y+27, r25	; 0x1b
    111c:	8a 8f       	std	Y+26, r24	; 0x1a
}
    111e:	3a c0       	rjmp	.+116    	; 0x1194 <lcd_waitbusy+0x278>
	else if (__tmp > 255)
    1120:	20 e0       	ldi	r18, 0x00	; 0
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	4f e7       	ldi	r20, 0x7F	; 127
    1126:	53 e4       	ldi	r21, 0x43	; 67
    1128:	6d 81       	ldd	r22, Y+5	; 0x05
    112a:	7e 81       	ldd	r23, Y+6	; 0x06
    112c:	8f 81       	ldd	r24, Y+7	; 0x07
    112e:	98 85       	ldd	r25, Y+8	; 0x08
    1130:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1134:	18 16       	cp	r1, r24
    1136:	f4 f4       	brge	.+60     	; 0x1174 <lcd_waitbusy+0x258>
		uint16_t __ticks=(uint16_t)__tmp2;
    1138:	69 85       	ldd	r22, Y+9	; 0x09
    113a:	7a 85       	ldd	r23, Y+10	; 0x0a
    113c:	8b 85       	ldd	r24, Y+11	; 0x0b
    113e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1140:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1144:	25 96       	adiw	r28, 0x05	; 5
    1146:	6c af       	std	Y+60, r22	; 0x3c
    1148:	7d af       	std	Y+61, r23	; 0x3d
    114a:	8e af       	std	Y+62, r24	; 0x3e
    114c:	9f af       	std	Y+63, r25	; 0x3f
    114e:	25 97       	sbiw	r28, 0x05	; 5
    1150:	23 96       	adiw	r28, 0x03	; 3
    1152:	ae ad       	ldd	r26, Y+62	; 0x3e
    1154:	bf ad       	ldd	r27, Y+63	; 0x3f
    1156:	23 97       	sbiw	r28, 0x03	; 3
    1158:	bd 8f       	std	Y+29, r27	; 0x1d
    115a:	ac 8f       	std	Y+28, r26	; 0x1c
    115c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    115e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1160:	9f 8f       	std	Y+31, r25	; 0x1f
    1162:	8e 8f       	std	Y+30, r24	; 0x1e
	__asm__ volatile (
    1164:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1166:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1168:	01 97       	sbiw	r24, 0x01	; 1
    116a:	f1 f7       	brne	.-4      	; 0x1168 <lcd_waitbusy+0x24c>
    116c:	9f 8f       	std	Y+31, r25	; 0x1f
    116e:	8e 8f       	std	Y+30, r24	; 0x1e
}
    1170:	00 00       	nop
		return;
    1172:	17 c0       	rjmp	.+46     	; 0x11a2 <lcd_waitbusy+0x286>
		__ticks = (uint8_t)__tmp;
    1174:	6d 81       	ldd	r22, Y+5	; 0x05
    1176:	7e 81       	ldd	r23, Y+6	; 0x06
    1178:	8f 81       	ldd	r24, Y+7	; 0x07
    117a:	98 85       	ldd	r25, Y+8	; 0x08
    117c:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1180:	29 96       	adiw	r28, 0x09	; 9
    1182:	6c af       	std	Y+60, r22	; 0x3c
    1184:	7d af       	std	Y+61, r23	; 0x3d
    1186:	8e af       	std	Y+62, r24	; 0x3e
    1188:	9f af       	std	Y+63, r25	; 0x3f
    118a:	29 97       	sbiw	r28, 0x09	; 9
    118c:	26 96       	adiw	r28, 0x06	; 6
    118e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1190:	26 97       	sbiw	r28, 0x06	; 6
    1192:	bd 87       	std	Y+13, r27	; 0x0d
    1194:	8d 85       	ldd	r24, Y+13	; 0x0d
    1196:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
    1198:	88 a1       	ldd	r24, Y+32	; 0x20
    119a:	8a 95       	dec	r24
    119c:	f1 f7       	brne	.-4      	; 0x119a <lcd_waitbusy+0x27e>
    119e:	88 a3       	std	Y+32, r24	; 0x20
}
    11a0:	00 00       	nop
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(LCD_DELAY_BUSY_FLAG);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	0e 94 fe 01 	call	0x3fc	; 0x3fc <lcd_read>
    
}/* lcd_waitbusy */
    11a8:	c8 5b       	subi	r28, 0xB8	; 184
    11aa:	df 4f       	sbci	r29, 0xFF	; 255
    11ac:	0f b6       	in	r0, 0x3f	; 63
    11ae:	f8 94       	cli
    11b0:	de bf       	out	0x3e, r29	; 62
    11b2:	0f be       	out	0x3f, r0	; 63
    11b4:	cd bf       	out	0x3d, r28	; 61
    11b6:	df 91       	pop	r29
    11b8:	cf 91       	pop	r28
    11ba:	1f 91       	pop	r17
    11bc:	08 95       	ret

000011be <lcd_newline>:
/*************************************************************************
Move cursor to the start of next line or to the first line if the cursor 
is already on the last line.
*************************************************************************/
static inline void lcd_newline(uint8_t pos)
{
    11be:	1f 93       	push	r17
    11c0:	cf 93       	push	r28
    11c2:	df 93       	push	r29
    11c4:	0f 92       	push	r0
    11c6:	cd b7       	in	r28, 0x3d	; 61
    11c8:	de b7       	in	r29, 0x3e	; 62
    11ca:	89 83       	std	Y+1, r24	; 0x01

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
    11ce:	80 34       	cpi	r24, 0x40	; 64
    11d0:	10 f4       	brcc	.+4      	; 0x11d6 <lcd_newline+0x18>
        addressCounter = LCD_START_LINE2;
    11d2:	10 e4       	ldi	r17, 0x40	; 64
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <lcd_newline+0x1a>
    else
        addressCounter = LCD_START_LINE1;
    11d6:	10 e0       	ldi	r17, 0x00	; 0
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
    11d8:	80 e8       	ldi	r24, 0x80	; 128
    11da:	81 0f       	add	r24, r17
    11dc:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>

}/* lcd_newline */
    11e0:	00 00       	nop
    11e2:	0f 90       	pop	r0
    11e4:	df 91       	pop	r29
    11e6:	cf 91       	pop	r28
    11e8:	1f 91       	pop	r17
    11ea:	08 95       	ret

000011ec <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    11ec:	cf 93       	push	r28
    11ee:	df 93       	push	r29
    11f0:	0f 92       	push	r0
    11f2:	cd b7       	in	r28, 0x3d	; 61
    11f4:	de b7       	in	r29, 0x3e	; 62
    11f6:	89 83       	std	Y+1, r24	; 0x01
    lcd_waitbusy();
    11f8:	0e 94 8e 07 	call	0xf1c	; 0xf1c <lcd_waitbusy>
    lcd_write(cmd,0);
    11fc:	60 e0       	ldi	r22, 0x00	; 0
    11fe:	89 81       	ldd	r24, Y+1	; 0x01
    1200:	0e 94 a2 01 	call	0x344	; 0x344 <lcd_write>
}
    1204:	00 00       	nop
    1206:	0f 90       	pop	r0
    1208:	df 91       	pop	r29
    120a:	cf 91       	pop	r28
    120c:	08 95       	ret

0000120e <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
    120e:	cf 93       	push	r28
    1210:	df 93       	push	r29
    1212:	0f 92       	push	r0
    1214:	cd b7       	in	r28, 0x3d	; 61
    1216:	de b7       	in	r29, 0x3e	; 62
    1218:	89 83       	std	Y+1, r24	; 0x01
    lcd_waitbusy();
    121a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <lcd_waitbusy>
    lcd_write(data,1);
    121e:	61 e0       	ldi	r22, 0x01	; 1
    1220:	89 81       	ldd	r24, Y+1	; 0x01
    1222:	0e 94 a2 01 	call	0x344	; 0x344 <lcd_write>
}
    1226:	00 00       	nop
    1228:	0f 90       	pop	r0
    122a:	df 91       	pop	r29
    122c:	cf 91       	pop	r28
    122e:	08 95       	ret

00001230 <lcd_gotoxy>:
Input:    x  horizontal position  (0: left most position)
          y  vertical position    (0: first line)
Returns:  none
*************************************************************************/
void lcd_gotoxy(uint8_t x, uint8_t y)
{
    1230:	cf 93       	push	r28
    1232:	df 93       	push	r29
    1234:	00 d0       	rcall	.+0      	; 0x1236 <lcd_gotoxy+0x6>
    1236:	cd b7       	in	r28, 0x3d	; 61
    1238:	de b7       	in	r29, 0x3e	; 62
    123a:	89 83       	std	Y+1, r24	; 0x01
    123c:	6a 83       	std	Y+2, r22	; 0x02
#if LCD_LINES==1
    lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#endif
#if LCD_LINES==2
    if ( y==0 ) 
    123e:	8a 81       	ldd	r24, Y+2	; 0x02
    1240:	88 23       	and	r24, r24
    1242:	29 f4       	brne	.+10     	; 0x124e <lcd_gotoxy+0x1e>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
    1244:	89 81       	ldd	r24, Y+1	; 0x01
    1246:	80 58       	subi	r24, 0x80	; 128
    1248:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE3+x);
    else /* y==3 */
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE4+x);
#endif

}/* lcd_gotoxy */
    124c:	04 c0       	rjmp	.+8      	; 0x1256 <lcd_gotoxy+0x26>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
    124e:	89 81       	ldd	r24, Y+1	; 0x01
    1250:	80 54       	subi	r24, 0x40	; 64
    1252:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>
}/* lcd_gotoxy */
    1256:	00 00       	nop
    1258:	0f 90       	pop	r0
    125a:	0f 90       	pop	r0
    125c:	df 91       	pop	r29
    125e:	cf 91       	pop	r28
    1260:	08 95       	ret

00001262 <lcd_getxy>:


/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    1262:	cf 93       	push	r28
    1264:	df 93       	push	r29
    1266:	cd b7       	in	r28, 0x3d	; 61
    1268:	de b7       	in	r29, 0x3e	; 62
    return lcd_waitbusy();
    126a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <lcd_waitbusy>
    126e:	88 2f       	mov	r24, r24
    1270:	90 e0       	ldi	r25, 0x00	; 0
}
    1272:	df 91       	pop	r29
    1274:	cf 91       	pop	r28
    1276:	08 95       	ret

00001278 <lcd_clrscr>:

/*************************************************************************
Clear display and set cursor to home position
*************************************************************************/
void lcd_clrscr(void)
{
    1278:	cf 93       	push	r28
    127a:	df 93       	push	r29
    127c:	cd b7       	in	r28, 0x3d	; 61
    127e:	de b7       	in	r29, 0x3e	; 62
    lcd_command(1<<LCD_CLR);
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>
}
    1286:	00 00       	nop
    1288:	df 91       	pop	r29
    128a:	cf 91       	pop	r28
    128c:	08 95       	ret

0000128e <lcd_home>:

/*************************************************************************
Set cursor to home position
*************************************************************************/
void lcd_home(void)
{
    128e:	cf 93       	push	r28
    1290:	df 93       	push	r29
    1292:	cd b7       	in	r28, 0x3d	; 61
    1294:	de b7       	in	r29, 0x3e	; 62
    lcd_command(1<<LCD_HOME);
    1296:	82 e0       	ldi	r24, 0x02	; 2
    1298:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>
}
    129c:	00 00       	nop
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	08 95       	ret

000012a4 <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
    12a4:	cf 93       	push	r28
    12a6:	df 93       	push	r29
    12a8:	00 d0       	rcall	.+0      	; 0x12aa <lcd_putc+0x6>
    12aa:	cd b7       	in	r28, 0x3d	; 61
    12ac:	de b7       	in	r29, 0x3e	; 62
    12ae:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
    12b0:	0e 94 8e 07 	call	0xf1c	; 0xf1c <lcd_waitbusy>
    12b4:	89 83       	std	Y+1, r24	; 0x01
    if (c=='\n')
    12b6:	8a 81       	ldd	r24, Y+2	; 0x02
    12b8:	8a 30       	cpi	r24, 0x0A	; 10
    12ba:	21 f4       	brne	.+8      	; 0x12c4 <lcd_putc+0x20>
    {
        lcd_newline(pos);
    12bc:	89 81       	ldd	r24, Y+1	; 0x01
    12be:	0e 94 df 08 	call	0x11be	; 0x11be <lcd_newline>
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
    }

}/* lcd_putc */
    12c2:	04 c0       	rjmp	.+8      	; 0x12cc <lcd_putc+0x28>
        lcd_write(c, 1);
    12c4:	8a 81       	ldd	r24, Y+2	; 0x02
    12c6:	61 e0       	ldi	r22, 0x01	; 1
    12c8:	0e 94 a2 01 	call	0x344	; 0x344 <lcd_write>
}/* lcd_putc */
    12cc:	00 00       	nop
    12ce:	0f 90       	pop	r0
    12d0:	0f 90       	pop	r0
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	08 95       	ret

000012d8 <lcd_puts>:
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
    12d8:	1f 93       	push	r17
    12da:	cf 93       	push	r28
    12dc:	df 93       	push	r29
    12de:	00 d0       	rcall	.+0      	; 0x12e0 <lcd_puts+0x8>
    12e0:	cd b7       	in	r28, 0x3d	; 61
    12e2:	de b7       	in	r29, 0x3e	; 62
    12e4:	9a 83       	std	Y+2, r25	; 0x02
    12e6:	89 83       	std	Y+1, r24	; 0x01
    register char c;

    while ( (c = *s++) ) {
    12e8:	03 c0       	rjmp	.+6      	; 0x12f0 <lcd_puts+0x18>
        lcd_putc(c);
    12ea:	81 2f       	mov	r24, r17
    12ec:	0e 94 52 09 	call	0x12a4	; 0x12a4 <lcd_putc>
    while ( (c = *s++) ) {
    12f0:	89 81       	ldd	r24, Y+1	; 0x01
    12f2:	9a 81       	ldd	r25, Y+2	; 0x02
    12f4:	9c 01       	movw	r18, r24
    12f6:	2f 5f       	subi	r18, 0xFF	; 255
    12f8:	3f 4f       	sbci	r19, 0xFF	; 255
    12fa:	3a 83       	std	Y+2, r19	; 0x02
    12fc:	29 83       	std	Y+1, r18	; 0x01
    12fe:	fc 01       	movw	r30, r24
    1300:	10 81       	ld	r17, Z
    1302:	11 23       	and	r17, r17
    1304:	91 f7       	brne	.-28     	; 0x12ea <lcd_puts+0x12>
    }

}/* lcd_puts */
    1306:	00 00       	nop
    1308:	00 00       	nop
    130a:	0f 90       	pop	r0
    130c:	0f 90       	pop	r0
    130e:	df 91       	pop	r29
    1310:	cf 91       	pop	r28
    1312:	1f 91       	pop	r17
    1314:	08 95       	ret

00001316 <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
    1316:	1f 93       	push	r17
    1318:	cf 93       	push	r28
    131a:	df 93       	push	r29
    131c:	00 d0       	rcall	.+0      	; 0x131e <lcd_puts_p+0x8>
    131e:	00 d0       	rcall	.+0      	; 0x1320 <lcd_puts_p+0xa>
    1320:	0f 92       	push	r0
    1322:	cd b7       	in	r28, 0x3d	; 61
    1324:	de b7       	in	r29, 0x3e	; 62
    1326:	9d 83       	std	Y+5, r25	; 0x05
    1328:	8c 83       	std	Y+4, r24	; 0x04
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
    132a:	03 c0       	rjmp	.+6      	; 0x1332 <lcd_puts_p+0x1c>
        lcd_putc(c);
    132c:	81 2f       	mov	r24, r17
    132e:	0e 94 52 09 	call	0x12a4	; 0x12a4 <lcd_putc>
    while ( (c = pgm_read_byte(progmem_s++)) ) {
    1332:	8c 81       	ldd	r24, Y+4	; 0x04
    1334:	9d 81       	ldd	r25, Y+5	; 0x05
    1336:	9c 01       	movw	r18, r24
    1338:	2f 5f       	subi	r18, 0xFF	; 255
    133a:	3f 4f       	sbci	r19, 0xFF	; 255
    133c:	3d 83       	std	Y+5, r19	; 0x05
    133e:	2c 83       	std	Y+4, r18	; 0x04
    1340:	9a 83       	std	Y+2, r25	; 0x02
    1342:	89 83       	std	Y+1, r24	; 0x01
    1344:	89 81       	ldd	r24, Y+1	; 0x01
    1346:	9a 81       	ldd	r25, Y+2	; 0x02
    1348:	fc 01       	movw	r30, r24
    134a:	84 91       	lpm	r24, Z
    134c:	8b 83       	std	Y+3, r24	; 0x03
    134e:	8b 81       	ldd	r24, Y+3	; 0x03
    1350:	18 2f       	mov	r17, r24
    1352:	11 23       	and	r17, r17
    1354:	59 f7       	brne	.-42     	; 0x132c <lcd_puts_p+0x16>
    }

}/* lcd_puts_p */
    1356:	00 00       	nop
    1358:	00 00       	nop
    135a:	0f 90       	pop	r0
    135c:	0f 90       	pop	r0
    135e:	0f 90       	pop	r0
    1360:	0f 90       	pop	r0
    1362:	0f 90       	pop	r0
    1364:	df 91       	pop	r29
    1366:	cf 91       	pop	r28
    1368:	1f 91       	pop	r17
    136a:	08 95       	ret

0000136c <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	cf 93       	push	r28
    1372:	df 93       	push	r29
    1374:	cd b7       	in	r28, 0x3d	; 61
    1376:	de b7       	in	r29, 0x3e	; 62
    1378:	c9 56       	subi	r28, 0x69	; 105
    137a:	d1 40       	sbci	r29, 0x01	; 1
    137c:	0f b6       	in	r0, 0x3f	; 63
    137e:	f8 94       	cli
    1380:	de bf       	out	0x3e, r29	; 62
    1382:	0f be       	out	0x3f, r0	; 63
    1384:	cd bf       	out	0x3d, r28	; 61
    1386:	9e 01       	movw	r18, r28
    1388:	2f 55       	subi	r18, 0x5F	; 95
    138a:	3f 4f       	sbci	r19, 0xFF	; 255
    138c:	d9 01       	movw	r26, r18
    138e:	8c 93       	st	X, r24
    }
    else if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
           && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure all port bits as output (all LCD data lines on same port, but control lines on different ports) */
        DDR(LCD_DATA0_PORT) |= 0x0F;
    1390:	84 e2       	ldi	r24, 0x24	; 36
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	fc 01       	movw	r30, r24
    1396:	20 81       	ld	r18, Z
    1398:	84 e2       	ldi	r24, 0x24	; 36
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	2f 60       	ori	r18, 0x0F	; 15
    139e:	dc 01       	movw	r26, r24
    13a0:	2c 93       	st	X, r18
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
    13a2:	8a e2       	ldi	r24, 0x2A	; 42
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	fc 01       	movw	r30, r24
    13a8:	20 81       	ld	r18, Z
    13aa:	8a e2       	ldi	r24, 0x2A	; 42
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	24 60       	ori	r18, 0x04	; 4
    13b0:	dc 01       	movw	r26, r24
    13b2:	2c 93       	st	X, r18
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
    13b4:	8a e2       	ldi	r24, 0x2A	; 42
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	fc 01       	movw	r30, r24
    13ba:	20 81       	ld	r18, Z
    13bc:	8a e2       	ldi	r24, 0x2A	; 42
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	28 60       	ori	r18, 0x08	; 8
    13c2:	dc 01       	movw	r26, r24
    13c4:	2c 93       	st	X, r18
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    13c6:	84 e2       	ldi	r24, 0x24	; 36
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	fc 01       	movw	r30, r24
    13cc:	20 81       	ld	r18, Z
    13ce:	84 e2       	ldi	r24, 0x24	; 36
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	20 61       	ori	r18, 0x10	; 16
    13d4:	dc 01       	movw	r26, r24
    13d6:	2c 93       	st	X, r18
    13d8:	9e 01       	movw	r18, r28
    13da:	2f 57       	subi	r18, 0x7F	; 127
    13dc:	3f 4f       	sbci	r19, 0xFF	; 255
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	aa e7       	ldi	r26, 0x7A	; 122
    13e4:	b6 e4       	ldi	r27, 0x46	; 70
    13e6:	f9 01       	movw	r30, r18
    13e8:	80 83       	st	Z, r24
    13ea:	91 83       	std	Z+1, r25	; 0x01
    13ec:	a2 83       	std	Z+2, r26	; 0x02
    13ee:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
    13f0:	8e 01       	movw	r16, r28
    13f2:	0b 57       	subi	r16, 0x7B	; 123
    13f4:	1f 4f       	sbci	r17, 0xFF	; 255
    13f6:	ce 01       	movw	r24, r28
    13f8:	8f 57       	subi	r24, 0x7F	; 127
    13fa:	9f 4f       	sbci	r25, 0xFF	; 255
    13fc:	2b ea       	ldi	r18, 0xAB	; 171
    13fe:	3a ea       	ldi	r19, 0xAA	; 170
    1400:	4a ea       	ldi	r20, 0xAA	; 170
    1402:	50 e4       	ldi	r21, 0x40	; 64
    1404:	dc 01       	movw	r26, r24
    1406:	6d 91       	ld	r22, X+
    1408:	7d 91       	ld	r23, X+
    140a:	8d 91       	ld	r24, X+
    140c:	9c 91       	ld	r25, X
    140e:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1412:	ca 54       	subi	r28, 0x4A	; 74
    1414:	df 4f       	sbci	r29, 0xFF	; 255
    1416:	68 83       	st	Y, r22
    1418:	79 83       	std	Y+1, r23	; 0x01
    141a:	8a 83       	std	Y+2, r24	; 0x02
    141c:	9b 83       	std	Y+3, r25	; 0x03
    141e:	c6 5b       	subi	r28, 0xB6	; 182
    1420:	d0 40       	sbci	r29, 0x00	; 0
    1422:	ca 54       	subi	r28, 0x4A	; 74
    1424:	df 4f       	sbci	r29, 0xFF	; 255
    1426:	88 81       	ld	r24, Y
    1428:	99 81       	ldd	r25, Y+1	; 0x01
    142a:	aa 81       	ldd	r26, Y+2	; 0x02
    142c:	bb 81       	ldd	r27, Y+3	; 0x03
    142e:	c6 5b       	subi	r28, 0xB6	; 182
    1430:	d0 40       	sbci	r29, 0x00	; 0
    1432:	f8 01       	movw	r30, r16
    1434:	80 83       	st	Z, r24
    1436:	91 83       	std	Z+1, r25	; 0x01
    1438:	a2 83       	std	Z+2, r26	; 0x02
    143a:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    143c:	8e 01       	movw	r16, r28
    143e:	07 57       	subi	r16, 0x77	; 119
    1440:	1f 4f       	sbci	r17, 0xFF	; 255
    1442:	ce 01       	movw	r24, r28
    1444:	8f 57       	subi	r24, 0x7F	; 127
    1446:	9f 4f       	sbci	r25, 0xFF	; 255
    1448:	20 e0       	ldi	r18, 0x00	; 0
    144a:	30 e0       	ldi	r19, 0x00	; 0
    144c:	40 e8       	ldi	r20, 0x80	; 128
    144e:	50 e4       	ldi	r21, 0x40	; 64
    1450:	dc 01       	movw	r26, r24
    1452:	6d 91       	ld	r22, X+
    1454:	7d 91       	ld	r23, X+
    1456:	8d 91       	ld	r24, X+
    1458:	9c 91       	ld	r25, X
    145a:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    145e:	c6 54       	subi	r28, 0x46	; 70
    1460:	df 4f       	sbci	r29, 0xFF	; 255
    1462:	68 83       	st	Y, r22
    1464:	79 83       	std	Y+1, r23	; 0x01
    1466:	8a 83       	std	Y+2, r24	; 0x02
    1468:	9b 83       	std	Y+3, r25	; 0x03
    146a:	ca 5b       	subi	r28, 0xBA	; 186
    146c:	d0 40       	sbci	r29, 0x00	; 0
    146e:	c6 54       	subi	r28, 0x46	; 70
    1470:	df 4f       	sbci	r29, 0xFF	; 255
    1472:	88 81       	ld	r24, Y
    1474:	99 81       	ldd	r25, Y+1	; 0x01
    1476:	aa 81       	ldd	r26, Y+2	; 0x02
    1478:	bb 81       	ldd	r27, Y+3	; 0x03
    147a:	ca 5b       	subi	r28, 0xBA	; 186
    147c:	d0 40       	sbci	r29, 0x00	; 0
    147e:	f8 01       	movw	r30, r16
    1480:	80 83       	st	Z, r24
    1482:	91 83       	std	Z+1, r25	; 0x01
    1484:	a2 83       	std	Z+2, r26	; 0x02
    1486:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1488:	ce 01       	movw	r24, r28
    148a:	8b 57       	subi	r24, 0x7B	; 123
    148c:	9f 4f       	sbci	r25, 0xFF	; 255
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	40 e8       	ldi	r20, 0x80	; 128
    1494:	5f e3       	ldi	r21, 0x3F	; 63
    1496:	dc 01       	movw	r26, r24
    1498:	6d 91       	ld	r22, X+
    149a:	7d 91       	ld	r23, X+
    149c:	8d 91       	ld	r24, X+
    149e:	9c 91       	ld	r25, X
    14a0:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    14a4:	88 23       	and	r24, r24
    14a6:	3c f4       	brge	.+14     	; 0x14b6 <lcd_init+0x14a>
		__ticks = 1;
    14a8:	ce 01       	movw	r24, r28
    14aa:	83 57       	subi	r24, 0x73	; 115
    14ac:	9f 4f       	sbci	r25, 0xFF	; 255
    14ae:	21 e0       	ldi	r18, 0x01	; 1
    14b0:	fc 01       	movw	r30, r24
    14b2:	20 83       	st	Z, r18
    14b4:	99 c1       	rjmp	.+818    	; 0x17e8 <lcd_init+0x47c>
	else if (__tmp2 > 65535)
    14b6:	ce 01       	movw	r24, r28
    14b8:	87 57       	subi	r24, 0x77	; 119
    14ba:	9f 4f       	sbci	r25, 0xFF	; 255
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	3f ef       	ldi	r19, 0xFF	; 255
    14c0:	4f e7       	ldi	r20, 0x7F	; 127
    14c2:	57 e4       	ldi	r21, 0x47	; 71
    14c4:	dc 01       	movw	r26, r24
    14c6:	6d 91       	ld	r22, X+
    14c8:	7d 91       	ld	r23, X+
    14ca:	8d 91       	ld	r24, X+
    14cc:	9c 91       	ld	r25, X
    14ce:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    14d2:	18 16       	cp	r1, r24
    14d4:	0c f0       	brlt	.+2      	; 0x14d8 <lcd_init+0x16c>
    14d6:	22 c1       	rjmp	.+580    	; 0x171c <lcd_init+0x3b0>
		_delay_ms(__us / 1000.0);
    14d8:	ce 01       	movw	r24, r28
    14da:	8f 57       	subi	r24, 0x7F	; 127
    14dc:	9f 4f       	sbci	r25, 0xFF	; 255
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	4a e7       	ldi	r20, 0x7A	; 122
    14e4:	54 e4       	ldi	r21, 0x44	; 68
    14e6:	fc 01       	movw	r30, r24
    14e8:	60 81       	ld	r22, Z
    14ea:	71 81       	ldd	r23, Z+1	; 0x01
    14ec:	82 81       	ldd	r24, Z+2	; 0x02
    14ee:	93 81       	ldd	r25, Z+3	; 0x03
    14f0:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
    14f4:	c2 54       	subi	r28, 0x42	; 66
    14f6:	df 4f       	sbci	r29, 0xFF	; 255
    14f8:	68 83       	st	Y, r22
    14fa:	79 83       	std	Y+1, r23	; 0x01
    14fc:	8a 83       	std	Y+2, r24	; 0x02
    14fe:	9b 83       	std	Y+3, r25	; 0x03
    1500:	ce 5b       	subi	r28, 0xBE	; 190
    1502:	d0 40       	sbci	r29, 0x00	; 0
    1504:	c2 54       	subi	r28, 0x42	; 66
    1506:	df 4f       	sbci	r29, 0xFF	; 255
    1508:	88 81       	ld	r24, Y
    150a:	99 81       	ldd	r25, Y+1	; 0x01
    150c:	aa 81       	ldd	r26, Y+2	; 0x02
    150e:	bb 81       	ldd	r27, Y+3	; 0x03
    1510:	ce 5b       	subi	r28, 0xBE	; 190
    1512:	d0 40       	sbci	r29, 0x00	; 0
    1514:	9e 01       	movw	r18, r28
    1516:	22 57       	subi	r18, 0x72	; 114
    1518:	3f 4f       	sbci	r19, 0xFF	; 255
    151a:	f9 01       	movw	r30, r18
    151c:	80 83       	st	Z, r24
    151e:	91 83       	std	Z+1, r25	; 0x01
    1520:	a2 83       	std	Z+2, r26	; 0x02
    1522:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
    1524:	8e 01       	movw	r16, r28
    1526:	0e 56       	subi	r16, 0x6E	; 110
    1528:	1f 4f       	sbci	r17, 0xFF	; 255
    152a:	ce 01       	movw	r24, r28
    152c:	82 57       	subi	r24, 0x72	; 114
    152e:	9f 4f       	sbci	r25, 0xFF	; 255
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	4a e7       	ldi	r20, 0x7A	; 122
    1536:	55 e4       	ldi	r21, 0x45	; 69
    1538:	dc 01       	movw	r26, r24
    153a:	6d 91       	ld	r22, X+
    153c:	7d 91       	ld	r23, X+
    153e:	8d 91       	ld	r24, X+
    1540:	9c 91       	ld	r25, X
    1542:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1546:	ce 53       	subi	r28, 0x3E	; 62
    1548:	df 4f       	sbci	r29, 0xFF	; 255
    154a:	68 83       	st	Y, r22
    154c:	79 83       	std	Y+1, r23	; 0x01
    154e:	8a 83       	std	Y+2, r24	; 0x02
    1550:	9b 83       	std	Y+3, r25	; 0x03
    1552:	c2 5c       	subi	r28, 0xC2	; 194
    1554:	d0 40       	sbci	r29, 0x00	; 0
    1556:	ce 53       	subi	r28, 0x3E	; 62
    1558:	df 4f       	sbci	r29, 0xFF	; 255
    155a:	88 81       	ld	r24, Y
    155c:	99 81       	ldd	r25, Y+1	; 0x01
    155e:	aa 81       	ldd	r26, Y+2	; 0x02
    1560:	bb 81       	ldd	r27, Y+3	; 0x03
    1562:	c2 5c       	subi	r28, 0xC2	; 194
    1564:	d0 40       	sbci	r29, 0x00	; 0
    1566:	f8 01       	movw	r30, r16
    1568:	80 83       	st	Z, r24
    156a:	91 83       	std	Z+1, r25	; 0x01
    156c:	a2 83       	std	Z+2, r26	; 0x02
    156e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1570:	ce 01       	movw	r24, r28
    1572:	8e 56       	subi	r24, 0x6E	; 110
    1574:	9f 4f       	sbci	r25, 0xFF	; 255
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	40 e8       	ldi	r20, 0x80	; 128
    157c:	5f e3       	ldi	r21, 0x3F	; 63
    157e:	dc 01       	movw	r26, r24
    1580:	6d 91       	ld	r22, X+
    1582:	7d 91       	ld	r23, X+
    1584:	8d 91       	ld	r24, X+
    1586:	9c 91       	ld	r25, X
    1588:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    158c:	88 23       	and	r24, r24
    158e:	4c f4       	brge	.+18     	; 0x15a2 <lcd_init+0x236>
		__ticks = 1;
    1590:	ce 01       	movw	r24, r28
    1592:	8a 56       	subi	r24, 0x6A	; 106
    1594:	9f 4f       	sbci	r25, 0xFF	; 255
    1596:	21 e0       	ldi	r18, 0x01	; 1
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	fc 01       	movw	r30, r24
    159c:	31 83       	std	Z+1, r19	; 0x01
    159e:	20 83       	st	Z, r18
    15a0:	a2 c0       	rjmp	.+324    	; 0x16e6 <lcd_init+0x37a>
	else if (__tmp > 65535)
    15a2:	ce 01       	movw	r24, r28
    15a4:	8e 56       	subi	r24, 0x6E	; 110
    15a6:	9f 4f       	sbci	r25, 0xFF	; 255
    15a8:	20 e0       	ldi	r18, 0x00	; 0
    15aa:	3f ef       	ldi	r19, 0xFF	; 255
    15ac:	4f e7       	ldi	r20, 0x7F	; 127
    15ae:	57 e4       	ldi	r21, 0x47	; 71
    15b0:	dc 01       	movw	r26, r24
    15b2:	6d 91       	ld	r22, X+
    15b4:	7d 91       	ld	r23, X+
    15b6:	8d 91       	ld	r24, X+
    15b8:	9c 91       	ld	r25, X
    15ba:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    15be:	18 16       	cp	r1, r24
    15c0:	0c f0       	brlt	.+2      	; 0x15c4 <lcd_init+0x258>
    15c2:	73 c0       	rjmp	.+230    	; 0x16aa <lcd_init+0x33e>
		__ticks = (uint16_t) (__ms * 10.0);
    15c4:	ce 01       	movw	r24, r28
    15c6:	82 57       	subi	r24, 0x72	; 114
    15c8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ca:	20 e0       	ldi	r18, 0x00	; 0
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	40 e2       	ldi	r20, 0x20	; 32
    15d0:	51 e4       	ldi	r21, 0x41	; 65
    15d2:	fc 01       	movw	r30, r24
    15d4:	60 81       	ld	r22, Z
    15d6:	71 81       	ldd	r23, Z+1	; 0x01
    15d8:	82 81       	ldd	r24, Z+2	; 0x02
    15da:	93 81       	ldd	r25, Z+3	; 0x03
    15dc:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    15e0:	ca 53       	subi	r28, 0x3A	; 58
    15e2:	df 4f       	sbci	r29, 0xFF	; 255
    15e4:	68 83       	st	Y, r22
    15e6:	79 83       	std	Y+1, r23	; 0x01
    15e8:	8a 83       	std	Y+2, r24	; 0x02
    15ea:	9b 83       	std	Y+3, r25	; 0x03
    15ec:	c6 5c       	subi	r28, 0xC6	; 198
    15ee:	d0 40       	sbci	r29, 0x00	; 0
    15f0:	ca 53       	subi	r28, 0x3A	; 58
    15f2:	df 4f       	sbci	r29, 0xFF	; 255
    15f4:	88 81       	ld	r24, Y
    15f6:	99 81       	ldd	r25, Y+1	; 0x01
    15f8:	aa 81       	ldd	r26, Y+2	; 0x02
    15fa:	bb 81       	ldd	r27, Y+3	; 0x03
    15fc:	c6 5c       	subi	r28, 0xC6	; 198
    15fe:	d0 40       	sbci	r29, 0x00	; 0
    1600:	ce 54       	subi	r28, 0x4E	; 78
    1602:	df 4f       	sbci	r29, 0xFF	; 255
    1604:	88 83       	st	Y, r24
    1606:	99 83       	std	Y+1, r25	; 0x01
    1608:	aa 83       	std	Y+2, r26	; 0x02
    160a:	bb 83       	std	Y+3, r27	; 0x03
    160c:	c2 5b       	subi	r28, 0xB2	; 178
    160e:	d0 40       	sbci	r29, 0x00	; 0
    1610:	8e 01       	movw	r16, r28
    1612:	0a 56       	subi	r16, 0x6A	; 106
    1614:	1f 4f       	sbci	r17, 0xFF	; 255
    1616:	ce 54       	subi	r28, 0x4E	; 78
    1618:	df 4f       	sbci	r29, 0xFF	; 255
    161a:	68 81       	ld	r22, Y
    161c:	79 81       	ldd	r23, Y+1	; 0x01
    161e:	8a 81       	ldd	r24, Y+2	; 0x02
    1620:	9b 81       	ldd	r25, Y+3	; 0x03
    1622:	c2 5b       	subi	r28, 0xB2	; 178
    1624:	d0 40       	sbci	r29, 0x00	; 0
    1626:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    162a:	c6 53       	subi	r28, 0x36	; 54
    162c:	df 4f       	sbci	r29, 0xFF	; 255
    162e:	68 83       	st	Y, r22
    1630:	79 83       	std	Y+1, r23	; 0x01
    1632:	8a 83       	std	Y+2, r24	; 0x02
    1634:	9b 83       	std	Y+3, r25	; 0x03
    1636:	ca 5c       	subi	r28, 0xCA	; 202
    1638:	d0 40       	sbci	r29, 0x00	; 0
    163a:	c6 53       	subi	r28, 0x36	; 54
    163c:	df 4f       	sbci	r29, 0xFF	; 255
    163e:	e8 81       	ld	r30, Y
    1640:	f9 81       	ldd	r31, Y+1	; 0x01
    1642:	ca 5c       	subi	r28, 0xCA	; 202
    1644:	d0 40       	sbci	r29, 0x00	; 0
    1646:	d8 01       	movw	r26, r16
    1648:	ed 93       	st	X+, r30
    164a:	fc 93       	st	X, r31
		while(__ticks)
    164c:	25 c0       	rjmp	.+74     	; 0x1698 <lcd_init+0x32c>
    164e:	ce 01       	movw	r24, r28
    1650:	88 56       	subi	r24, 0x68	; 104
    1652:	9f 4f       	sbci	r25, 0xFF	; 255
    1654:	20 e9       	ldi	r18, 0x90	; 144
    1656:	31 e0       	ldi	r19, 0x01	; 1
    1658:	dc 01       	movw	r26, r24
    165a:	2d 93       	st	X+, r18
    165c:	3c 93       	st	X, r19
	__asm__ volatile (
    165e:	ce 01       	movw	r24, r28
    1660:	88 56       	subi	r24, 0x68	; 104
    1662:	9f 4f       	sbci	r25, 0xFF	; 255
    1664:	fc 01       	movw	r30, r24
    1666:	80 81       	ld	r24, Z
    1668:	91 81       	ldd	r25, Z+1	; 0x01
    166a:	01 97       	sbiw	r24, 0x01	; 1
    166c:	f1 f7       	brne	.-4      	; 0x166a <lcd_init+0x2fe>
    166e:	9e 01       	movw	r18, r28
    1670:	28 56       	subi	r18, 0x68	; 104
    1672:	3f 4f       	sbci	r19, 0xFF	; 255
    1674:	d9 01       	movw	r26, r18
    1676:	8d 93       	st	X+, r24
    1678:	9c 93       	st	X, r25
}
    167a:	00 00       	nop
			__ticks --;
    167c:	ce 01       	movw	r24, r28
    167e:	8a 56       	subi	r24, 0x6A	; 106
    1680:	9f 4f       	sbci	r25, 0xFF	; 255
    1682:	9e 01       	movw	r18, r28
    1684:	2a 56       	subi	r18, 0x6A	; 106
    1686:	3f 4f       	sbci	r19, 0xFF	; 255
    1688:	f9 01       	movw	r30, r18
    168a:	20 81       	ld	r18, Z
    168c:	31 81       	ldd	r19, Z+1	; 0x01
    168e:	21 50       	subi	r18, 0x01	; 1
    1690:	31 09       	sbc	r19, r1
    1692:	dc 01       	movw	r26, r24
    1694:	2d 93       	st	X+, r18
    1696:	3c 93       	st	X, r19
		while(__ticks)
    1698:	ce 01       	movw	r24, r28
    169a:	8a 56       	subi	r24, 0x6A	; 106
    169c:	9f 4f       	sbci	r25, 0xFF	; 255
    169e:	fc 01       	movw	r30, r24
    16a0:	80 81       	ld	r24, Z
    16a2:	91 81       	ldd	r25, Z+1	; 0x01
    16a4:	89 2b       	or	r24, r25
    16a6:	99 f6       	brne	.-90     	; 0x164e <lcd_init+0x2e2>
		return;
    16a8:	9f c0       	rjmp	.+318    	; 0x17e8 <lcd_init+0x47c>
		__ticks = (uint16_t)__tmp;
    16aa:	8e 01       	movw	r16, r28
    16ac:	0a 56       	subi	r16, 0x6A	; 106
    16ae:	1f 4f       	sbci	r17, 0xFF	; 255
    16b0:	ce 01       	movw	r24, r28
    16b2:	8e 56       	subi	r24, 0x6E	; 110
    16b4:	9f 4f       	sbci	r25, 0xFF	; 255
    16b6:	dc 01       	movw	r26, r24
    16b8:	6d 91       	ld	r22, X+
    16ba:	7d 91       	ld	r23, X+
    16bc:	8d 91       	ld	r24, X+
    16be:	9c 91       	ld	r25, X
    16c0:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    16c4:	c2 53       	subi	r28, 0x32	; 50
    16c6:	df 4f       	sbci	r29, 0xFF	; 255
    16c8:	68 83       	st	Y, r22
    16ca:	79 83       	std	Y+1, r23	; 0x01
    16cc:	8a 83       	std	Y+2, r24	; 0x02
    16ce:	9b 83       	std	Y+3, r25	; 0x03
    16d0:	ce 5c       	subi	r28, 0xCE	; 206
    16d2:	d0 40       	sbci	r29, 0x00	; 0
    16d4:	c2 53       	subi	r28, 0x32	; 50
    16d6:	df 4f       	sbci	r29, 0xFF	; 255
    16d8:	88 81       	ld	r24, Y
    16da:	99 81       	ldd	r25, Y+1	; 0x01
    16dc:	ce 5c       	subi	r28, 0xCE	; 206
    16de:	d0 40       	sbci	r29, 0x00	; 0
    16e0:	f8 01       	movw	r30, r16
    16e2:	91 83       	std	Z+1, r25	; 0x01
    16e4:	80 83       	st	Z, r24
    16e6:	ce 01       	movw	r24, r28
    16e8:	86 56       	subi	r24, 0x66	; 102
    16ea:	9f 4f       	sbci	r25, 0xFF	; 255
    16ec:	9e 01       	movw	r18, r28
    16ee:	2a 56       	subi	r18, 0x6A	; 106
    16f0:	3f 4f       	sbci	r19, 0xFF	; 255
    16f2:	d9 01       	movw	r26, r18
    16f4:	2d 91       	ld	r18, X+
    16f6:	3c 91       	ld	r19, X
    16f8:	fc 01       	movw	r30, r24
    16fa:	31 83       	std	Z+1, r19	; 0x01
    16fc:	20 83       	st	Z, r18
	__asm__ volatile (
    16fe:	ce 01       	movw	r24, r28
    1700:	86 56       	subi	r24, 0x66	; 102
    1702:	9f 4f       	sbci	r25, 0xFF	; 255
    1704:	dc 01       	movw	r26, r24
    1706:	8d 91       	ld	r24, X+
    1708:	9c 91       	ld	r25, X
    170a:	01 97       	sbiw	r24, 0x01	; 1
    170c:	f1 f7       	brne	.-4      	; 0x170a <lcd_init+0x39e>
    170e:	9e 01       	movw	r18, r28
    1710:	26 56       	subi	r18, 0x66	; 102
    1712:	3f 4f       	sbci	r19, 0xFF	; 255
    1714:	f9 01       	movw	r30, r18
    1716:	91 83       	std	Z+1, r25	; 0x01
    1718:	80 83       	st	Z, r24
}
    171a:	66 c0       	rjmp	.+204    	; 0x17e8 <lcd_init+0x47c>
	else if (__tmp > 255)
    171c:	ce 01       	movw	r24, r28
    171e:	8b 57       	subi	r24, 0x7B	; 123
    1720:	9f 4f       	sbci	r25, 0xFF	; 255
    1722:	20 e0       	ldi	r18, 0x00	; 0
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	4f e7       	ldi	r20, 0x7F	; 127
    1728:	53 e4       	ldi	r21, 0x43	; 67
    172a:	dc 01       	movw	r26, r24
    172c:	6d 91       	ld	r22, X+
    172e:	7d 91       	ld	r23, X+
    1730:	8d 91       	ld	r24, X+
    1732:	9c 91       	ld	r25, X
    1734:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1738:	18 16       	cp	r1, r24
    173a:	d4 f5       	brge	.+116    	; 0x17b0 <lcd_init+0x444>
		uint16_t __ticks=(uint16_t)__tmp2;
    173c:	8e 01       	movw	r16, r28
    173e:	04 56       	subi	r16, 0x64	; 100
    1740:	1f 4f       	sbci	r17, 0xFF	; 255
    1742:	ce 01       	movw	r24, r28
    1744:	87 57       	subi	r24, 0x77	; 119
    1746:	9f 4f       	sbci	r25, 0xFF	; 255
    1748:	fc 01       	movw	r30, r24
    174a:	60 81       	ld	r22, Z
    174c:	71 81       	ldd	r23, Z+1	; 0x01
    174e:	82 81       	ldd	r24, Z+2	; 0x02
    1750:	93 81       	ldd	r25, Z+3	; 0x03
    1752:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1756:	ce 52       	subi	r28, 0x2E	; 46
    1758:	df 4f       	sbci	r29, 0xFF	; 255
    175a:	68 83       	st	Y, r22
    175c:	79 83       	std	Y+1, r23	; 0x01
    175e:	8a 83       	std	Y+2, r24	; 0x02
    1760:	9b 83       	std	Y+3, r25	; 0x03
    1762:	c2 5d       	subi	r28, 0xD2	; 210
    1764:	d0 40       	sbci	r29, 0x00	; 0
    1766:	ce 52       	subi	r28, 0x2E	; 46
    1768:	df 4f       	sbci	r29, 0xFF	; 255
    176a:	e8 81       	ld	r30, Y
    176c:	f9 81       	ldd	r31, Y+1	; 0x01
    176e:	c2 5d       	subi	r28, 0xD2	; 210
    1770:	d0 40       	sbci	r29, 0x00	; 0
    1772:	d8 01       	movw	r26, r16
    1774:	ed 93       	st	X+, r30
    1776:	fc 93       	st	X, r31
    1778:	ce 01       	movw	r24, r28
    177a:	82 56       	subi	r24, 0x62	; 98
    177c:	9f 4f       	sbci	r25, 0xFF	; 255
    177e:	9e 01       	movw	r18, r28
    1780:	24 56       	subi	r18, 0x64	; 100
    1782:	3f 4f       	sbci	r19, 0xFF	; 255
    1784:	d9 01       	movw	r26, r18
    1786:	2d 91       	ld	r18, X+
    1788:	3c 91       	ld	r19, X
    178a:	fc 01       	movw	r30, r24
    178c:	31 83       	std	Z+1, r19	; 0x01
    178e:	20 83       	st	Z, r18
	__asm__ volatile (
    1790:	ce 01       	movw	r24, r28
    1792:	82 56       	subi	r24, 0x62	; 98
    1794:	9f 4f       	sbci	r25, 0xFF	; 255
    1796:	dc 01       	movw	r26, r24
    1798:	8d 91       	ld	r24, X+
    179a:	9c 91       	ld	r25, X
    179c:	01 97       	sbiw	r24, 0x01	; 1
    179e:	f1 f7       	brne	.-4      	; 0x179c <lcd_init+0x430>
    17a0:	9e 01       	movw	r18, r28
    17a2:	22 56       	subi	r18, 0x62	; 98
    17a4:	3f 4f       	sbci	r19, 0xFF	; 255
    17a6:	f9 01       	movw	r30, r18
    17a8:	91 83       	std	Z+1, r25	; 0x01
    17aa:	80 83       	st	Z, r24
}
    17ac:	00 00       	nop
		return;
    17ae:	34 c0       	rjmp	.+104    	; 0x1818 <lcd_init+0x4ac>
		__ticks = (uint8_t)__tmp;
    17b0:	8e 01       	movw	r16, r28
    17b2:	03 57       	subi	r16, 0x73	; 115
    17b4:	1f 4f       	sbci	r17, 0xFF	; 255
    17b6:	ce 01       	movw	r24, r28
    17b8:	8b 57       	subi	r24, 0x7B	; 123
    17ba:	9f 4f       	sbci	r25, 0xFF	; 255
    17bc:	dc 01       	movw	r26, r24
    17be:	6d 91       	ld	r22, X+
    17c0:	7d 91       	ld	r23, X+
    17c2:	8d 91       	ld	r24, X+
    17c4:	9c 91       	ld	r25, X
    17c6:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    17ca:	ca 52       	subi	r28, 0x2A	; 42
    17cc:	df 4f       	sbci	r29, 0xFF	; 255
    17ce:	68 83       	st	Y, r22
    17d0:	79 83       	std	Y+1, r23	; 0x01
    17d2:	8a 83       	std	Y+2, r24	; 0x02
    17d4:	9b 83       	std	Y+3, r25	; 0x03
    17d6:	c6 5d       	subi	r28, 0xD6	; 214
    17d8:	d0 40       	sbci	r29, 0x00	; 0
    17da:	ca 52       	subi	r28, 0x2A	; 42
    17dc:	df 4f       	sbci	r29, 0xFF	; 255
    17de:	88 81       	ld	r24, Y
    17e0:	c6 5d       	subi	r28, 0xD6	; 214
    17e2:	d0 40       	sbci	r29, 0x00	; 0
    17e4:	f8 01       	movw	r30, r16
    17e6:	80 83       	st	Z, r24
    17e8:	ce 01       	movw	r24, r28
    17ea:	80 56       	subi	r24, 0x60	; 96
    17ec:	9f 4f       	sbci	r25, 0xFF	; 255
    17ee:	9e 01       	movw	r18, r28
    17f0:	23 57       	subi	r18, 0x73	; 115
    17f2:	3f 4f       	sbci	r19, 0xFF	; 255
    17f4:	d9 01       	movw	r26, r18
    17f6:	2c 91       	ld	r18, X
    17f8:	fc 01       	movw	r30, r24
    17fa:	20 83       	st	Z, r18
	__asm__ volatile (
    17fc:	ce 01       	movw	r24, r28
    17fe:	80 56       	subi	r24, 0x60	; 96
    1800:	9f 4f       	sbci	r25, 0xFF	; 255
    1802:	dc 01       	movw	r26, r24
    1804:	8c 91       	ld	r24, X
    1806:	28 2f       	mov	r18, r24
    1808:	2a 95       	dec	r18
    180a:	f1 f7       	brne	.-4      	; 0x1808 <lcd_init+0x49c>
    180c:	ce 01       	movw	r24, r28
    180e:	80 56       	subi	r24, 0x60	; 96
    1810:	9f 4f       	sbci	r25, 0xFF	; 255
    1812:	fc 01       	movw	r30, r24
    1814:	20 83       	st	Z, r18
}
    1816:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
    1818:	85 e2       	ldi	r24, 0x25	; 37
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	dc 01       	movw	r26, r24
    181e:	2c 91       	ld	r18, X
    1820:	85 e2       	ldi	r24, 0x25	; 37
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	22 60       	ori	r18, 0x02	; 2
    1826:	fc 01       	movw	r30, r24
    1828:	20 83       	st	Z, r18
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
    182a:	85 e2       	ldi	r24, 0x25	; 37
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	dc 01       	movw	r26, r24
    1830:	2c 91       	ld	r18, X
    1832:	85 e2       	ldi	r24, 0x25	; 37
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	21 60       	ori	r18, 0x01	; 1
    1838:	fc 01       	movw	r30, r24
    183a:	20 83       	st	Z, r18
    lcd_e_toggle();
    183c:	0e 94 4b 00 	call	0x96	; 0x96 <toggle_e>
    1840:	9e 01       	movw	r18, r28
    1842:	2f 59       	subi	r18, 0x9F	; 159
    1844:	3f 4f       	sbci	r19, 0xFF	; 255
    1846:	80 e0       	ldi	r24, 0x00	; 0
    1848:	90 e4       	ldi	r25, 0x40	; 64
    184a:	ac e9       	ldi	r26, 0x9C	; 156
    184c:	b5 e4       	ldi	r27, 0x45	; 69
    184e:	f9 01       	movw	r30, r18
    1850:	80 83       	st	Z, r24
    1852:	91 83       	std	Z+1, r25	; 0x01
    1854:	a2 83       	std	Z+2, r26	; 0x02
    1856:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
    1858:	8e 01       	movw	r16, r28
    185a:	0b 59       	subi	r16, 0x9B	; 155
    185c:	1f 4f       	sbci	r17, 0xFF	; 255
    185e:	ce 01       	movw	r24, r28
    1860:	8f 59       	subi	r24, 0x9F	; 159
    1862:	9f 4f       	sbci	r25, 0xFF	; 255
    1864:	2b ea       	ldi	r18, 0xAB	; 171
    1866:	3a ea       	ldi	r19, 0xAA	; 170
    1868:	4a ea       	ldi	r20, 0xAA	; 170
    186a:	50 e4       	ldi	r21, 0x40	; 64
    186c:	dc 01       	movw	r26, r24
    186e:	6d 91       	ld	r22, X+
    1870:	7d 91       	ld	r23, X+
    1872:	8d 91       	ld	r24, X+
    1874:	9c 91       	ld	r25, X
    1876:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    187a:	c6 52       	subi	r28, 0x26	; 38
    187c:	df 4f       	sbci	r29, 0xFF	; 255
    187e:	68 83       	st	Y, r22
    1880:	79 83       	std	Y+1, r23	; 0x01
    1882:	8a 83       	std	Y+2, r24	; 0x02
    1884:	9b 83       	std	Y+3, r25	; 0x03
    1886:	ca 5d       	subi	r28, 0xDA	; 218
    1888:	d0 40       	sbci	r29, 0x00	; 0
    188a:	c6 52       	subi	r28, 0x26	; 38
    188c:	df 4f       	sbci	r29, 0xFF	; 255
    188e:	88 81       	ld	r24, Y
    1890:	99 81       	ldd	r25, Y+1	; 0x01
    1892:	aa 81       	ldd	r26, Y+2	; 0x02
    1894:	bb 81       	ldd	r27, Y+3	; 0x03
    1896:	ca 5d       	subi	r28, 0xDA	; 218
    1898:	d0 40       	sbci	r29, 0x00	; 0
    189a:	f8 01       	movw	r30, r16
    189c:	80 83       	st	Z, r24
    189e:	91 83       	std	Z+1, r25	; 0x01
    18a0:	a2 83       	std	Z+2, r26	; 0x02
    18a2:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    18a4:	8e 01       	movw	r16, r28
    18a6:	07 59       	subi	r16, 0x97	; 151
    18a8:	1f 4f       	sbci	r17, 0xFF	; 255
    18aa:	ce 01       	movw	r24, r28
    18ac:	8f 59       	subi	r24, 0x9F	; 159
    18ae:	9f 4f       	sbci	r25, 0xFF	; 255
    18b0:	20 e0       	ldi	r18, 0x00	; 0
    18b2:	30 e0       	ldi	r19, 0x00	; 0
    18b4:	40 e8       	ldi	r20, 0x80	; 128
    18b6:	50 e4       	ldi	r21, 0x40	; 64
    18b8:	dc 01       	movw	r26, r24
    18ba:	6d 91       	ld	r22, X+
    18bc:	7d 91       	ld	r23, X+
    18be:	8d 91       	ld	r24, X+
    18c0:	9c 91       	ld	r25, X
    18c2:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    18c6:	c2 52       	subi	r28, 0x22	; 34
    18c8:	df 4f       	sbci	r29, 0xFF	; 255
    18ca:	68 83       	st	Y, r22
    18cc:	79 83       	std	Y+1, r23	; 0x01
    18ce:	8a 83       	std	Y+2, r24	; 0x02
    18d0:	9b 83       	std	Y+3, r25	; 0x03
    18d2:	ce 5d       	subi	r28, 0xDE	; 222
    18d4:	d0 40       	sbci	r29, 0x00	; 0
    18d6:	c2 52       	subi	r28, 0x22	; 34
    18d8:	df 4f       	sbci	r29, 0xFF	; 255
    18da:	88 81       	ld	r24, Y
    18dc:	99 81       	ldd	r25, Y+1	; 0x01
    18de:	aa 81       	ldd	r26, Y+2	; 0x02
    18e0:	bb 81       	ldd	r27, Y+3	; 0x03
    18e2:	ce 5d       	subi	r28, 0xDE	; 222
    18e4:	d0 40       	sbci	r29, 0x00	; 0
    18e6:	f8 01       	movw	r30, r16
    18e8:	80 83       	st	Z, r24
    18ea:	91 83       	std	Z+1, r25	; 0x01
    18ec:	a2 83       	std	Z+2, r26	; 0x02
    18ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18f0:	ce 01       	movw	r24, r28
    18f2:	8b 59       	subi	r24, 0x9B	; 155
    18f4:	9f 4f       	sbci	r25, 0xFF	; 255
    18f6:	20 e0       	ldi	r18, 0x00	; 0
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	40 e8       	ldi	r20, 0x80	; 128
    18fc:	5f e3       	ldi	r21, 0x3F	; 63
    18fe:	dc 01       	movw	r26, r24
    1900:	6d 91       	ld	r22, X+
    1902:	7d 91       	ld	r23, X+
    1904:	8d 91       	ld	r24, X+
    1906:	9c 91       	ld	r25, X
    1908:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    190c:	88 23       	and	r24, r24
    190e:	3c f4       	brge	.+14     	; 0x191e <lcd_init+0x5b2>
		__ticks = 1;
    1910:	ce 01       	movw	r24, r28
    1912:	83 59       	subi	r24, 0x93	; 147
    1914:	9f 4f       	sbci	r25, 0xFF	; 255
    1916:	21 e0       	ldi	r18, 0x01	; 1
    1918:	fc 01       	movw	r30, r24
    191a:	20 83       	st	Z, r18
    191c:	99 c1       	rjmp	.+818    	; 0x1c50 <lcd_init+0x8e4>
	else if (__tmp2 > 65535)
    191e:	ce 01       	movw	r24, r28
    1920:	87 59       	subi	r24, 0x97	; 151
    1922:	9f 4f       	sbci	r25, 0xFF	; 255
    1924:	20 e0       	ldi	r18, 0x00	; 0
    1926:	3f ef       	ldi	r19, 0xFF	; 255
    1928:	4f e7       	ldi	r20, 0x7F	; 127
    192a:	57 e4       	ldi	r21, 0x47	; 71
    192c:	dc 01       	movw	r26, r24
    192e:	6d 91       	ld	r22, X+
    1930:	7d 91       	ld	r23, X+
    1932:	8d 91       	ld	r24, X+
    1934:	9c 91       	ld	r25, X
    1936:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    193a:	18 16       	cp	r1, r24
    193c:	0c f0       	brlt	.+2      	; 0x1940 <lcd_init+0x5d4>
    193e:	22 c1       	rjmp	.+580    	; 0x1b84 <lcd_init+0x818>
		_delay_ms(__us / 1000.0);
    1940:	ce 01       	movw	r24, r28
    1942:	8f 59       	subi	r24, 0x9F	; 159
    1944:	9f 4f       	sbci	r25, 0xFF	; 255
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	4a e7       	ldi	r20, 0x7A	; 122
    194c:	54 e4       	ldi	r21, 0x44	; 68
    194e:	fc 01       	movw	r30, r24
    1950:	60 81       	ld	r22, Z
    1952:	71 81       	ldd	r23, Z+1	; 0x01
    1954:	82 81       	ldd	r24, Z+2	; 0x02
    1956:	93 81       	ldd	r25, Z+3	; 0x03
    1958:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
    195c:	ce 51       	subi	r28, 0x1E	; 30
    195e:	df 4f       	sbci	r29, 0xFF	; 255
    1960:	68 83       	st	Y, r22
    1962:	79 83       	std	Y+1, r23	; 0x01
    1964:	8a 83       	std	Y+2, r24	; 0x02
    1966:	9b 83       	std	Y+3, r25	; 0x03
    1968:	c2 5e       	subi	r28, 0xE2	; 226
    196a:	d0 40       	sbci	r29, 0x00	; 0
    196c:	ce 51       	subi	r28, 0x1E	; 30
    196e:	df 4f       	sbci	r29, 0xFF	; 255
    1970:	88 81       	ld	r24, Y
    1972:	99 81       	ldd	r25, Y+1	; 0x01
    1974:	aa 81       	ldd	r26, Y+2	; 0x02
    1976:	bb 81       	ldd	r27, Y+3	; 0x03
    1978:	c2 5e       	subi	r28, 0xE2	; 226
    197a:	d0 40       	sbci	r29, 0x00	; 0
    197c:	9e 01       	movw	r18, r28
    197e:	22 59       	subi	r18, 0x92	; 146
    1980:	3f 4f       	sbci	r19, 0xFF	; 255
    1982:	f9 01       	movw	r30, r18
    1984:	80 83       	st	Z, r24
    1986:	91 83       	std	Z+1, r25	; 0x01
    1988:	a2 83       	std	Z+2, r26	; 0x02
    198a:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
    198c:	8e 01       	movw	r16, r28
    198e:	0e 58       	subi	r16, 0x8E	; 142
    1990:	1f 4f       	sbci	r17, 0xFF	; 255
    1992:	ce 01       	movw	r24, r28
    1994:	82 59       	subi	r24, 0x92	; 146
    1996:	9f 4f       	sbci	r25, 0xFF	; 255
    1998:	20 e0       	ldi	r18, 0x00	; 0
    199a:	30 e0       	ldi	r19, 0x00	; 0
    199c:	4a e7       	ldi	r20, 0x7A	; 122
    199e:	55 e4       	ldi	r21, 0x45	; 69
    19a0:	dc 01       	movw	r26, r24
    19a2:	6d 91       	ld	r22, X+
    19a4:	7d 91       	ld	r23, X+
    19a6:	8d 91       	ld	r24, X+
    19a8:	9c 91       	ld	r25, X
    19aa:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    19ae:	ca 51       	subi	r28, 0x1A	; 26
    19b0:	df 4f       	sbci	r29, 0xFF	; 255
    19b2:	68 83       	st	Y, r22
    19b4:	79 83       	std	Y+1, r23	; 0x01
    19b6:	8a 83       	std	Y+2, r24	; 0x02
    19b8:	9b 83       	std	Y+3, r25	; 0x03
    19ba:	c6 5e       	subi	r28, 0xE6	; 230
    19bc:	d0 40       	sbci	r29, 0x00	; 0
    19be:	ca 51       	subi	r28, 0x1A	; 26
    19c0:	df 4f       	sbci	r29, 0xFF	; 255
    19c2:	88 81       	ld	r24, Y
    19c4:	99 81       	ldd	r25, Y+1	; 0x01
    19c6:	aa 81       	ldd	r26, Y+2	; 0x02
    19c8:	bb 81       	ldd	r27, Y+3	; 0x03
    19ca:	c6 5e       	subi	r28, 0xE6	; 230
    19cc:	d0 40       	sbci	r29, 0x00	; 0
    19ce:	f8 01       	movw	r30, r16
    19d0:	80 83       	st	Z, r24
    19d2:	91 83       	std	Z+1, r25	; 0x01
    19d4:	a2 83       	std	Z+2, r26	; 0x02
    19d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19d8:	ce 01       	movw	r24, r28
    19da:	8e 58       	subi	r24, 0x8E	; 142
    19dc:	9f 4f       	sbci	r25, 0xFF	; 255
    19de:	20 e0       	ldi	r18, 0x00	; 0
    19e0:	30 e0       	ldi	r19, 0x00	; 0
    19e2:	40 e8       	ldi	r20, 0x80	; 128
    19e4:	5f e3       	ldi	r21, 0x3F	; 63
    19e6:	dc 01       	movw	r26, r24
    19e8:	6d 91       	ld	r22, X+
    19ea:	7d 91       	ld	r23, X+
    19ec:	8d 91       	ld	r24, X+
    19ee:	9c 91       	ld	r25, X
    19f0:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    19f4:	88 23       	and	r24, r24
    19f6:	4c f4       	brge	.+18     	; 0x1a0a <lcd_init+0x69e>
		__ticks = 1;
    19f8:	ce 01       	movw	r24, r28
    19fa:	8a 58       	subi	r24, 0x8A	; 138
    19fc:	9f 4f       	sbci	r25, 0xFF	; 255
    19fe:	21 e0       	ldi	r18, 0x01	; 1
    1a00:	30 e0       	ldi	r19, 0x00	; 0
    1a02:	fc 01       	movw	r30, r24
    1a04:	31 83       	std	Z+1, r19	; 0x01
    1a06:	20 83       	st	Z, r18
    1a08:	a2 c0       	rjmp	.+324    	; 0x1b4e <lcd_init+0x7e2>
	else if (__tmp > 65535)
    1a0a:	ce 01       	movw	r24, r28
    1a0c:	8e 58       	subi	r24, 0x8E	; 142
    1a0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a10:	20 e0       	ldi	r18, 0x00	; 0
    1a12:	3f ef       	ldi	r19, 0xFF	; 255
    1a14:	4f e7       	ldi	r20, 0x7F	; 127
    1a16:	57 e4       	ldi	r21, 0x47	; 71
    1a18:	dc 01       	movw	r26, r24
    1a1a:	6d 91       	ld	r22, X+
    1a1c:	7d 91       	ld	r23, X+
    1a1e:	8d 91       	ld	r24, X+
    1a20:	9c 91       	ld	r25, X
    1a22:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1a26:	18 16       	cp	r1, r24
    1a28:	0c f0       	brlt	.+2      	; 0x1a2c <lcd_init+0x6c0>
    1a2a:	73 c0       	rjmp	.+230    	; 0x1b12 <lcd_init+0x7a6>
		__ticks = (uint16_t) (__ms * 10.0);
    1a2c:	ce 01       	movw	r24, r28
    1a2e:	82 59       	subi	r24, 0x92	; 146
    1a30:	9f 4f       	sbci	r25, 0xFF	; 255
    1a32:	20 e0       	ldi	r18, 0x00	; 0
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	40 e2       	ldi	r20, 0x20	; 32
    1a38:	51 e4       	ldi	r21, 0x41	; 65
    1a3a:	fc 01       	movw	r30, r24
    1a3c:	60 81       	ld	r22, Z
    1a3e:	71 81       	ldd	r23, Z+1	; 0x01
    1a40:	82 81       	ldd	r24, Z+2	; 0x02
    1a42:	93 81       	ldd	r25, Z+3	; 0x03
    1a44:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1a48:	c6 51       	subi	r28, 0x16	; 22
    1a4a:	df 4f       	sbci	r29, 0xFF	; 255
    1a4c:	68 83       	st	Y, r22
    1a4e:	79 83       	std	Y+1, r23	; 0x01
    1a50:	8a 83       	std	Y+2, r24	; 0x02
    1a52:	9b 83       	std	Y+3, r25	; 0x03
    1a54:	ca 5e       	subi	r28, 0xEA	; 234
    1a56:	d0 40       	sbci	r29, 0x00	; 0
    1a58:	c6 51       	subi	r28, 0x16	; 22
    1a5a:	df 4f       	sbci	r29, 0xFF	; 255
    1a5c:	88 81       	ld	r24, Y
    1a5e:	99 81       	ldd	r25, Y+1	; 0x01
    1a60:	aa 81       	ldd	r26, Y+2	; 0x02
    1a62:	bb 81       	ldd	r27, Y+3	; 0x03
    1a64:	ca 5e       	subi	r28, 0xEA	; 234
    1a66:	d0 40       	sbci	r29, 0x00	; 0
    1a68:	c2 55       	subi	r28, 0x52	; 82
    1a6a:	df 4f       	sbci	r29, 0xFF	; 255
    1a6c:	88 83       	st	Y, r24
    1a6e:	99 83       	std	Y+1, r25	; 0x01
    1a70:	aa 83       	std	Y+2, r26	; 0x02
    1a72:	bb 83       	std	Y+3, r27	; 0x03
    1a74:	ce 5a       	subi	r28, 0xAE	; 174
    1a76:	d0 40       	sbci	r29, 0x00	; 0
    1a78:	8e 01       	movw	r16, r28
    1a7a:	0a 58       	subi	r16, 0x8A	; 138
    1a7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a7e:	c2 55       	subi	r28, 0x52	; 82
    1a80:	df 4f       	sbci	r29, 0xFF	; 255
    1a82:	68 81       	ld	r22, Y
    1a84:	79 81       	ldd	r23, Y+1	; 0x01
    1a86:	8a 81       	ldd	r24, Y+2	; 0x02
    1a88:	9b 81       	ldd	r25, Y+3	; 0x03
    1a8a:	ce 5a       	subi	r28, 0xAE	; 174
    1a8c:	d0 40       	sbci	r29, 0x00	; 0
    1a8e:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1a92:	c2 51       	subi	r28, 0x12	; 18
    1a94:	df 4f       	sbci	r29, 0xFF	; 255
    1a96:	68 83       	st	Y, r22
    1a98:	79 83       	std	Y+1, r23	; 0x01
    1a9a:	8a 83       	std	Y+2, r24	; 0x02
    1a9c:	9b 83       	std	Y+3, r25	; 0x03
    1a9e:	ce 5e       	subi	r28, 0xEE	; 238
    1aa0:	d0 40       	sbci	r29, 0x00	; 0
    1aa2:	c2 51       	subi	r28, 0x12	; 18
    1aa4:	df 4f       	sbci	r29, 0xFF	; 255
    1aa6:	e8 81       	ld	r30, Y
    1aa8:	f9 81       	ldd	r31, Y+1	; 0x01
    1aaa:	ce 5e       	subi	r28, 0xEE	; 238
    1aac:	d0 40       	sbci	r29, 0x00	; 0
    1aae:	d8 01       	movw	r26, r16
    1ab0:	ed 93       	st	X+, r30
    1ab2:	fc 93       	st	X, r31
		while(__ticks)
    1ab4:	25 c0       	rjmp	.+74     	; 0x1b00 <lcd_init+0x794>
    1ab6:	ce 01       	movw	r24, r28
    1ab8:	88 58       	subi	r24, 0x88	; 136
    1aba:	9f 4f       	sbci	r25, 0xFF	; 255
    1abc:	20 e9       	ldi	r18, 0x90	; 144
    1abe:	31 e0       	ldi	r19, 0x01	; 1
    1ac0:	dc 01       	movw	r26, r24
    1ac2:	2d 93       	st	X+, r18
    1ac4:	3c 93       	st	X, r19
	__asm__ volatile (
    1ac6:	ce 01       	movw	r24, r28
    1ac8:	88 58       	subi	r24, 0x88	; 136
    1aca:	9f 4f       	sbci	r25, 0xFF	; 255
    1acc:	fc 01       	movw	r30, r24
    1ace:	80 81       	ld	r24, Z
    1ad0:	91 81       	ldd	r25, Z+1	; 0x01
    1ad2:	01 97       	sbiw	r24, 0x01	; 1
    1ad4:	f1 f7       	brne	.-4      	; 0x1ad2 <lcd_init+0x766>
    1ad6:	9e 01       	movw	r18, r28
    1ad8:	28 58       	subi	r18, 0x88	; 136
    1ada:	3f 4f       	sbci	r19, 0xFF	; 255
    1adc:	d9 01       	movw	r26, r18
    1ade:	8d 93       	st	X+, r24
    1ae0:	9c 93       	st	X, r25
}
    1ae2:	00 00       	nop
			__ticks --;
    1ae4:	ce 01       	movw	r24, r28
    1ae6:	8a 58       	subi	r24, 0x8A	; 138
    1ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aea:	9e 01       	movw	r18, r28
    1aec:	2a 58       	subi	r18, 0x8A	; 138
    1aee:	3f 4f       	sbci	r19, 0xFF	; 255
    1af0:	f9 01       	movw	r30, r18
    1af2:	20 81       	ld	r18, Z
    1af4:	31 81       	ldd	r19, Z+1	; 0x01
    1af6:	21 50       	subi	r18, 0x01	; 1
    1af8:	31 09       	sbc	r19, r1
    1afa:	dc 01       	movw	r26, r24
    1afc:	2d 93       	st	X+, r18
    1afe:	3c 93       	st	X, r19
		while(__ticks)
    1b00:	ce 01       	movw	r24, r28
    1b02:	8a 58       	subi	r24, 0x8A	; 138
    1b04:	9f 4f       	sbci	r25, 0xFF	; 255
    1b06:	fc 01       	movw	r30, r24
    1b08:	80 81       	ld	r24, Z
    1b0a:	91 81       	ldd	r25, Z+1	; 0x01
    1b0c:	89 2b       	or	r24, r25
    1b0e:	99 f6       	brne	.-90     	; 0x1ab6 <lcd_init+0x74a>
		return;
    1b10:	9f c0       	rjmp	.+318    	; 0x1c50 <lcd_init+0x8e4>
		__ticks = (uint16_t)__tmp;
    1b12:	8e 01       	movw	r16, r28
    1b14:	0a 58       	subi	r16, 0x8A	; 138
    1b16:	1f 4f       	sbci	r17, 0xFF	; 255
    1b18:	ce 01       	movw	r24, r28
    1b1a:	8e 58       	subi	r24, 0x8E	; 142
    1b1c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b1e:	dc 01       	movw	r26, r24
    1b20:	6d 91       	ld	r22, X+
    1b22:	7d 91       	ld	r23, X+
    1b24:	8d 91       	ld	r24, X+
    1b26:	9c 91       	ld	r25, X
    1b28:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1b2c:	ce 50       	subi	r28, 0x0E	; 14
    1b2e:	df 4f       	sbci	r29, 0xFF	; 255
    1b30:	68 83       	st	Y, r22
    1b32:	79 83       	std	Y+1, r23	; 0x01
    1b34:	8a 83       	std	Y+2, r24	; 0x02
    1b36:	9b 83       	std	Y+3, r25	; 0x03
    1b38:	c2 5f       	subi	r28, 0xF2	; 242
    1b3a:	d0 40       	sbci	r29, 0x00	; 0
    1b3c:	ce 50       	subi	r28, 0x0E	; 14
    1b3e:	df 4f       	sbci	r29, 0xFF	; 255
    1b40:	88 81       	ld	r24, Y
    1b42:	99 81       	ldd	r25, Y+1	; 0x01
    1b44:	c2 5f       	subi	r28, 0xF2	; 242
    1b46:	d0 40       	sbci	r29, 0x00	; 0
    1b48:	f8 01       	movw	r30, r16
    1b4a:	91 83       	std	Z+1, r25	; 0x01
    1b4c:	80 83       	st	Z, r24
    1b4e:	ce 01       	movw	r24, r28
    1b50:	86 58       	subi	r24, 0x86	; 134
    1b52:	9f 4f       	sbci	r25, 0xFF	; 255
    1b54:	9e 01       	movw	r18, r28
    1b56:	2a 58       	subi	r18, 0x8A	; 138
    1b58:	3f 4f       	sbci	r19, 0xFF	; 255
    1b5a:	d9 01       	movw	r26, r18
    1b5c:	2d 91       	ld	r18, X+
    1b5e:	3c 91       	ld	r19, X
    1b60:	fc 01       	movw	r30, r24
    1b62:	31 83       	std	Z+1, r19	; 0x01
    1b64:	20 83       	st	Z, r18
	__asm__ volatile (
    1b66:	ce 01       	movw	r24, r28
    1b68:	86 58       	subi	r24, 0x86	; 134
    1b6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b6c:	dc 01       	movw	r26, r24
    1b6e:	8d 91       	ld	r24, X+
    1b70:	9c 91       	ld	r25, X
    1b72:	01 97       	sbiw	r24, 0x01	; 1
    1b74:	f1 f7       	brne	.-4      	; 0x1b72 <lcd_init+0x806>
    1b76:	9e 01       	movw	r18, r28
    1b78:	26 58       	subi	r18, 0x86	; 134
    1b7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b7c:	f9 01       	movw	r30, r18
    1b7e:	91 83       	std	Z+1, r25	; 0x01
    1b80:	80 83       	st	Z, r24
}
    1b82:	66 c0       	rjmp	.+204    	; 0x1c50 <lcd_init+0x8e4>
	else if (__tmp > 255)
    1b84:	ce 01       	movw	r24, r28
    1b86:	8b 59       	subi	r24, 0x9B	; 155
    1b88:	9f 4f       	sbci	r25, 0xFF	; 255
    1b8a:	20 e0       	ldi	r18, 0x00	; 0
    1b8c:	30 e0       	ldi	r19, 0x00	; 0
    1b8e:	4f e7       	ldi	r20, 0x7F	; 127
    1b90:	53 e4       	ldi	r21, 0x43	; 67
    1b92:	dc 01       	movw	r26, r24
    1b94:	6d 91       	ld	r22, X+
    1b96:	7d 91       	ld	r23, X+
    1b98:	8d 91       	ld	r24, X+
    1b9a:	9c 91       	ld	r25, X
    1b9c:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1ba0:	18 16       	cp	r1, r24
    1ba2:	d4 f5       	brge	.+116    	; 0x1c18 <lcd_init+0x8ac>
		uint16_t __ticks=(uint16_t)__tmp2;
    1ba4:	8e 01       	movw	r16, r28
    1ba6:	04 58       	subi	r16, 0x84	; 132
    1ba8:	1f 4f       	sbci	r17, 0xFF	; 255
    1baa:	ce 01       	movw	r24, r28
    1bac:	87 59       	subi	r24, 0x97	; 151
    1bae:	9f 4f       	sbci	r25, 0xFF	; 255
    1bb0:	fc 01       	movw	r30, r24
    1bb2:	60 81       	ld	r22, Z
    1bb4:	71 81       	ldd	r23, Z+1	; 0x01
    1bb6:	82 81       	ldd	r24, Z+2	; 0x02
    1bb8:	93 81       	ldd	r25, Z+3	; 0x03
    1bba:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1bbe:	ca 50       	subi	r28, 0x0A	; 10
    1bc0:	df 4f       	sbci	r29, 0xFF	; 255
    1bc2:	68 83       	st	Y, r22
    1bc4:	79 83       	std	Y+1, r23	; 0x01
    1bc6:	8a 83       	std	Y+2, r24	; 0x02
    1bc8:	9b 83       	std	Y+3, r25	; 0x03
    1bca:	c6 5f       	subi	r28, 0xF6	; 246
    1bcc:	d0 40       	sbci	r29, 0x00	; 0
    1bce:	ca 50       	subi	r28, 0x0A	; 10
    1bd0:	df 4f       	sbci	r29, 0xFF	; 255
    1bd2:	e8 81       	ld	r30, Y
    1bd4:	f9 81       	ldd	r31, Y+1	; 0x01
    1bd6:	c6 5f       	subi	r28, 0xF6	; 246
    1bd8:	d0 40       	sbci	r29, 0x00	; 0
    1bda:	d8 01       	movw	r26, r16
    1bdc:	ed 93       	st	X+, r30
    1bde:	fc 93       	st	X, r31
    1be0:	ce 01       	movw	r24, r28
    1be2:	82 58       	subi	r24, 0x82	; 130
    1be4:	9f 4f       	sbci	r25, 0xFF	; 255
    1be6:	9e 01       	movw	r18, r28
    1be8:	24 58       	subi	r18, 0x84	; 132
    1bea:	3f 4f       	sbci	r19, 0xFF	; 255
    1bec:	d9 01       	movw	r26, r18
    1bee:	2d 91       	ld	r18, X+
    1bf0:	3c 91       	ld	r19, X
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	31 83       	std	Z+1, r19	; 0x01
    1bf6:	20 83       	st	Z, r18
	__asm__ volatile (
    1bf8:	ce 01       	movw	r24, r28
    1bfa:	82 58       	subi	r24, 0x82	; 130
    1bfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1bfe:	dc 01       	movw	r26, r24
    1c00:	8d 91       	ld	r24, X+
    1c02:	9c 91       	ld	r25, X
    1c04:	01 97       	sbiw	r24, 0x01	; 1
    1c06:	f1 f7       	brne	.-4      	; 0x1c04 <lcd_init+0x898>
    1c08:	9e 01       	movw	r18, r28
    1c0a:	22 58       	subi	r18, 0x82	; 130
    1c0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c0e:	f9 01       	movw	r30, r18
    1c10:	91 83       	std	Z+1, r25	; 0x01
    1c12:	80 83       	st	Z, r24
}
    1c14:	00 00       	nop
		return;
    1c16:	34 c0       	rjmp	.+104    	; 0x1c80 <lcd_init+0x914>
		__ticks = (uint8_t)__tmp;
    1c18:	8e 01       	movw	r16, r28
    1c1a:	03 59       	subi	r16, 0x93	; 147
    1c1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c1e:	ce 01       	movw	r24, r28
    1c20:	8b 59       	subi	r24, 0x9B	; 155
    1c22:	9f 4f       	sbci	r25, 0xFF	; 255
    1c24:	dc 01       	movw	r26, r24
    1c26:	6d 91       	ld	r22, X+
    1c28:	7d 91       	ld	r23, X+
    1c2a:	8d 91       	ld	r24, X+
    1c2c:	9c 91       	ld	r25, X
    1c2e:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1c32:	c6 50       	subi	r28, 0x06	; 6
    1c34:	df 4f       	sbci	r29, 0xFF	; 255
    1c36:	68 83       	st	Y, r22
    1c38:	79 83       	std	Y+1, r23	; 0x01
    1c3a:	8a 83       	std	Y+2, r24	; 0x02
    1c3c:	9b 83       	std	Y+3, r25	; 0x03
    1c3e:	ca 5f       	subi	r28, 0xFA	; 250
    1c40:	d0 40       	sbci	r29, 0x00	; 0
    1c42:	c6 50       	subi	r28, 0x06	; 6
    1c44:	df 4f       	sbci	r29, 0xFF	; 255
    1c46:	88 81       	ld	r24, Y
    1c48:	ca 5f       	subi	r28, 0xFA	; 250
    1c4a:	d0 40       	sbci	r29, 0x00	; 0
    1c4c:	f8 01       	movw	r30, r16
    1c4e:	80 83       	st	Z, r24
    1c50:	ce 01       	movw	r24, r28
    1c52:	80 58       	subi	r24, 0x80	; 128
    1c54:	9f 4f       	sbci	r25, 0xFF	; 255
    1c56:	9e 01       	movw	r18, r28
    1c58:	23 59       	subi	r18, 0x93	; 147
    1c5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c5c:	d9 01       	movw	r26, r18
    1c5e:	2c 91       	ld	r18, X
    1c60:	fc 01       	movw	r30, r24
    1c62:	20 83       	st	Z, r18
	__asm__ volatile (
    1c64:	ce 01       	movw	r24, r28
    1c66:	80 58       	subi	r24, 0x80	; 128
    1c68:	9f 4f       	sbci	r25, 0xFF	; 255
    1c6a:	dc 01       	movw	r26, r24
    1c6c:	8c 91       	ld	r24, X
    1c6e:	28 2f       	mov	r18, r24
    1c70:	2a 95       	dec	r18
    1c72:	f1 f7       	brne	.-4      	; 0x1c70 <lcd_init+0x904>
    1c74:	ce 01       	movw	r24, r28
    1c76:	80 58       	subi	r24, 0x80	; 128
    1c78:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7a:	fc 01       	movw	r30, r24
    1c7c:	20 83       	st	Z, r18
}
    1c7e:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
    1c80:	0e 94 4b 00 	call	0x96	; 0x96 <toggle_e>
    1c84:	9e 01       	movw	r18, r28
    1c86:	2f 5b       	subi	r18, 0xBF	; 191
    1c88:	3f 4f       	sbci	r19, 0xFF	; 255
    1c8a:	80 e0       	ldi	r24, 0x00	; 0
    1c8c:	90 e0       	ldi	r25, 0x00	; 0
    1c8e:	a0 e8       	ldi	r26, 0x80	; 128
    1c90:	b2 e4       	ldi	r27, 0x42	; 66
    1c92:	f9 01       	movw	r30, r18
    1c94:	80 83       	st	Z, r24
    1c96:	91 83       	std	Z+1, r25	; 0x01
    1c98:	a2 83       	std	Z+2, r26	; 0x02
    1c9a:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
    1c9c:	8e 01       	movw	r16, r28
    1c9e:	0b 5b       	subi	r16, 0xBB	; 187
    1ca0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ca2:	ce 01       	movw	r24, r28
    1ca4:	8f 5b       	subi	r24, 0xBF	; 191
    1ca6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca8:	2b ea       	ldi	r18, 0xAB	; 171
    1caa:	3a ea       	ldi	r19, 0xAA	; 170
    1cac:	4a ea       	ldi	r20, 0xAA	; 170
    1cae:	50 e4       	ldi	r21, 0x40	; 64
    1cb0:	dc 01       	movw	r26, r24
    1cb2:	6d 91       	ld	r22, X+
    1cb4:	7d 91       	ld	r23, X+
    1cb6:	8d 91       	ld	r24, X+
    1cb8:	9c 91       	ld	r25, X
    1cba:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1cbe:	c2 50       	subi	r28, 0x02	; 2
    1cc0:	df 4f       	sbci	r29, 0xFF	; 255
    1cc2:	68 83       	st	Y, r22
    1cc4:	79 83       	std	Y+1, r23	; 0x01
    1cc6:	8a 83       	std	Y+2, r24	; 0x02
    1cc8:	9b 83       	std	Y+3, r25	; 0x03
    1cca:	ce 5f       	subi	r28, 0xFE	; 254
    1ccc:	d0 40       	sbci	r29, 0x00	; 0
    1cce:	c2 50       	subi	r28, 0x02	; 2
    1cd0:	df 4f       	sbci	r29, 0xFF	; 255
    1cd2:	88 81       	ld	r24, Y
    1cd4:	99 81       	ldd	r25, Y+1	; 0x01
    1cd6:	aa 81       	ldd	r26, Y+2	; 0x02
    1cd8:	bb 81       	ldd	r27, Y+3	; 0x03
    1cda:	ce 5f       	subi	r28, 0xFE	; 254
    1cdc:	d0 40       	sbci	r29, 0x00	; 0
    1cde:	f8 01       	movw	r30, r16
    1ce0:	80 83       	st	Z, r24
    1ce2:	91 83       	std	Z+1, r25	; 0x01
    1ce4:	a2 83       	std	Z+2, r26	; 0x02
    1ce6:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1ce8:	8e 01       	movw	r16, r28
    1cea:	07 5b       	subi	r16, 0xB7	; 183
    1cec:	1f 4f       	sbci	r17, 0xFF	; 255
    1cee:	ce 01       	movw	r24, r28
    1cf0:	8f 5b       	subi	r24, 0xBF	; 191
    1cf2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cf4:	20 e0       	ldi	r18, 0x00	; 0
    1cf6:	30 e0       	ldi	r19, 0x00	; 0
    1cf8:	40 e8       	ldi	r20, 0x80	; 128
    1cfa:	50 e4       	ldi	r21, 0x40	; 64
    1cfc:	dc 01       	movw	r26, r24
    1cfe:	6d 91       	ld	r22, X+
    1d00:	7d 91       	ld	r23, X+
    1d02:	8d 91       	ld	r24, X+
    1d04:	9c 91       	ld	r25, X
    1d06:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1d0a:	ce 5f       	subi	r28, 0xFE	; 254
    1d0c:	de 4f       	sbci	r29, 0xFE	; 254
    1d0e:	68 83       	st	Y, r22
    1d10:	79 83       	std	Y+1, r23	; 0x01
    1d12:	8a 83       	std	Y+2, r24	; 0x02
    1d14:	9b 83       	std	Y+3, r25	; 0x03
    1d16:	c2 50       	subi	r28, 0x02	; 2
    1d18:	d1 40       	sbci	r29, 0x01	; 1
    1d1a:	ce 5f       	subi	r28, 0xFE	; 254
    1d1c:	de 4f       	sbci	r29, 0xFE	; 254
    1d1e:	88 81       	ld	r24, Y
    1d20:	99 81       	ldd	r25, Y+1	; 0x01
    1d22:	aa 81       	ldd	r26, Y+2	; 0x02
    1d24:	bb 81       	ldd	r27, Y+3	; 0x03
    1d26:	c2 50       	subi	r28, 0x02	; 2
    1d28:	d1 40       	sbci	r29, 0x01	; 1
    1d2a:	f8 01       	movw	r30, r16
    1d2c:	80 83       	st	Z, r24
    1d2e:	91 83       	std	Z+1, r25	; 0x01
    1d30:	a2 83       	std	Z+2, r26	; 0x02
    1d32:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d34:	ce 01       	movw	r24, r28
    1d36:	8b 5b       	subi	r24, 0xBB	; 187
    1d38:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3a:	20 e0       	ldi	r18, 0x00	; 0
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	40 e8       	ldi	r20, 0x80	; 128
    1d40:	5f e3       	ldi	r21, 0x3F	; 63
    1d42:	dc 01       	movw	r26, r24
    1d44:	6d 91       	ld	r22, X+
    1d46:	7d 91       	ld	r23, X+
    1d48:	8d 91       	ld	r24, X+
    1d4a:	9c 91       	ld	r25, X
    1d4c:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    1d50:	88 23       	and	r24, r24
    1d52:	3c f4       	brge	.+14     	; 0x1d62 <lcd_init+0x9f6>
		__ticks = 1;
    1d54:	ce 01       	movw	r24, r28
    1d56:	83 5b       	subi	r24, 0xB3	; 179
    1d58:	9f 4f       	sbci	r25, 0xFF	; 255
    1d5a:	21 e0       	ldi	r18, 0x01	; 1
    1d5c:	fc 01       	movw	r30, r24
    1d5e:	20 83       	st	Z, r18
    1d60:	99 c1       	rjmp	.+818    	; 0x2094 <lcd_init+0xd28>
	else if (__tmp2 > 65535)
    1d62:	ce 01       	movw	r24, r28
    1d64:	87 5b       	subi	r24, 0xB7	; 183
    1d66:	9f 4f       	sbci	r25, 0xFF	; 255
    1d68:	20 e0       	ldi	r18, 0x00	; 0
    1d6a:	3f ef       	ldi	r19, 0xFF	; 255
    1d6c:	4f e7       	ldi	r20, 0x7F	; 127
    1d6e:	57 e4       	ldi	r21, 0x47	; 71
    1d70:	dc 01       	movw	r26, r24
    1d72:	6d 91       	ld	r22, X+
    1d74:	7d 91       	ld	r23, X+
    1d76:	8d 91       	ld	r24, X+
    1d78:	9c 91       	ld	r25, X
    1d7a:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1d7e:	18 16       	cp	r1, r24
    1d80:	0c f0       	brlt	.+2      	; 0x1d84 <lcd_init+0xa18>
    1d82:	22 c1       	rjmp	.+580    	; 0x1fc8 <lcd_init+0xc5c>
		_delay_ms(__us / 1000.0);
    1d84:	ce 01       	movw	r24, r28
    1d86:	8f 5b       	subi	r24, 0xBF	; 191
    1d88:	9f 4f       	sbci	r25, 0xFF	; 255
    1d8a:	20 e0       	ldi	r18, 0x00	; 0
    1d8c:	30 e0       	ldi	r19, 0x00	; 0
    1d8e:	4a e7       	ldi	r20, 0x7A	; 122
    1d90:	54 e4       	ldi	r21, 0x44	; 68
    1d92:	fc 01       	movw	r30, r24
    1d94:	60 81       	ld	r22, Z
    1d96:	71 81       	ldd	r23, Z+1	; 0x01
    1d98:	82 81       	ldd	r24, Z+2	; 0x02
    1d9a:	93 81       	ldd	r25, Z+3	; 0x03
    1d9c:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
    1da0:	ca 5f       	subi	r28, 0xFA	; 250
    1da2:	de 4f       	sbci	r29, 0xFE	; 254
    1da4:	68 83       	st	Y, r22
    1da6:	79 83       	std	Y+1, r23	; 0x01
    1da8:	8a 83       	std	Y+2, r24	; 0x02
    1daa:	9b 83       	std	Y+3, r25	; 0x03
    1dac:	c6 50       	subi	r28, 0x06	; 6
    1dae:	d1 40       	sbci	r29, 0x01	; 1
    1db0:	ca 5f       	subi	r28, 0xFA	; 250
    1db2:	de 4f       	sbci	r29, 0xFE	; 254
    1db4:	88 81       	ld	r24, Y
    1db6:	99 81       	ldd	r25, Y+1	; 0x01
    1db8:	aa 81       	ldd	r26, Y+2	; 0x02
    1dba:	bb 81       	ldd	r27, Y+3	; 0x03
    1dbc:	c6 50       	subi	r28, 0x06	; 6
    1dbe:	d1 40       	sbci	r29, 0x01	; 1
    1dc0:	9e 01       	movw	r18, r28
    1dc2:	22 5b       	subi	r18, 0xB2	; 178
    1dc4:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc6:	f9 01       	movw	r30, r18
    1dc8:	80 83       	st	Z, r24
    1dca:	91 83       	std	Z+1, r25	; 0x01
    1dcc:	a2 83       	std	Z+2, r26	; 0x02
    1dce:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
    1dd0:	8e 01       	movw	r16, r28
    1dd2:	0e 5a       	subi	r16, 0xAE	; 174
    1dd4:	1f 4f       	sbci	r17, 0xFF	; 255
    1dd6:	ce 01       	movw	r24, r28
    1dd8:	82 5b       	subi	r24, 0xB2	; 178
    1dda:	9f 4f       	sbci	r25, 0xFF	; 255
    1ddc:	20 e0       	ldi	r18, 0x00	; 0
    1dde:	30 e0       	ldi	r19, 0x00	; 0
    1de0:	4a e7       	ldi	r20, 0x7A	; 122
    1de2:	55 e4       	ldi	r21, 0x45	; 69
    1de4:	dc 01       	movw	r26, r24
    1de6:	6d 91       	ld	r22, X+
    1de8:	7d 91       	ld	r23, X+
    1dea:	8d 91       	ld	r24, X+
    1dec:	9c 91       	ld	r25, X
    1dee:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1df2:	c6 5f       	subi	r28, 0xF6	; 246
    1df4:	de 4f       	sbci	r29, 0xFE	; 254
    1df6:	68 83       	st	Y, r22
    1df8:	79 83       	std	Y+1, r23	; 0x01
    1dfa:	8a 83       	std	Y+2, r24	; 0x02
    1dfc:	9b 83       	std	Y+3, r25	; 0x03
    1dfe:	ca 50       	subi	r28, 0x0A	; 10
    1e00:	d1 40       	sbci	r29, 0x01	; 1
    1e02:	c6 5f       	subi	r28, 0xF6	; 246
    1e04:	de 4f       	sbci	r29, 0xFE	; 254
    1e06:	88 81       	ld	r24, Y
    1e08:	99 81       	ldd	r25, Y+1	; 0x01
    1e0a:	aa 81       	ldd	r26, Y+2	; 0x02
    1e0c:	bb 81       	ldd	r27, Y+3	; 0x03
    1e0e:	ca 50       	subi	r28, 0x0A	; 10
    1e10:	d1 40       	sbci	r29, 0x01	; 1
    1e12:	f8 01       	movw	r30, r16
    1e14:	80 83       	st	Z, r24
    1e16:	91 83       	std	Z+1, r25	; 0x01
    1e18:	a2 83       	std	Z+2, r26	; 0x02
    1e1a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e1c:	ce 01       	movw	r24, r28
    1e1e:	8e 5a       	subi	r24, 0xAE	; 174
    1e20:	9f 4f       	sbci	r25, 0xFF	; 255
    1e22:	20 e0       	ldi	r18, 0x00	; 0
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	40 e8       	ldi	r20, 0x80	; 128
    1e28:	5f e3       	ldi	r21, 0x3F	; 63
    1e2a:	dc 01       	movw	r26, r24
    1e2c:	6d 91       	ld	r22, X+
    1e2e:	7d 91       	ld	r23, X+
    1e30:	8d 91       	ld	r24, X+
    1e32:	9c 91       	ld	r25, X
    1e34:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    1e38:	88 23       	and	r24, r24
    1e3a:	4c f4       	brge	.+18     	; 0x1e4e <lcd_init+0xae2>
		__ticks = 1;
    1e3c:	ce 01       	movw	r24, r28
    1e3e:	8a 5a       	subi	r24, 0xAA	; 170
    1e40:	9f 4f       	sbci	r25, 0xFF	; 255
    1e42:	21 e0       	ldi	r18, 0x01	; 1
    1e44:	30 e0       	ldi	r19, 0x00	; 0
    1e46:	fc 01       	movw	r30, r24
    1e48:	31 83       	std	Z+1, r19	; 0x01
    1e4a:	20 83       	st	Z, r18
    1e4c:	a2 c0       	rjmp	.+324    	; 0x1f92 <lcd_init+0xc26>
	else if (__tmp > 65535)
    1e4e:	ce 01       	movw	r24, r28
    1e50:	8e 5a       	subi	r24, 0xAE	; 174
    1e52:	9f 4f       	sbci	r25, 0xFF	; 255
    1e54:	20 e0       	ldi	r18, 0x00	; 0
    1e56:	3f ef       	ldi	r19, 0xFF	; 255
    1e58:	4f e7       	ldi	r20, 0x7F	; 127
    1e5a:	57 e4       	ldi	r21, 0x47	; 71
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	6d 91       	ld	r22, X+
    1e60:	7d 91       	ld	r23, X+
    1e62:	8d 91       	ld	r24, X+
    1e64:	9c 91       	ld	r25, X
    1e66:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1e6a:	18 16       	cp	r1, r24
    1e6c:	0c f0       	brlt	.+2      	; 0x1e70 <lcd_init+0xb04>
    1e6e:	73 c0       	rjmp	.+230    	; 0x1f56 <lcd_init+0xbea>
		__ticks = (uint16_t) (__ms * 10.0);
    1e70:	ce 01       	movw	r24, r28
    1e72:	82 5b       	subi	r24, 0xB2	; 178
    1e74:	9f 4f       	sbci	r25, 0xFF	; 255
    1e76:	20 e0       	ldi	r18, 0x00	; 0
    1e78:	30 e0       	ldi	r19, 0x00	; 0
    1e7a:	40 e2       	ldi	r20, 0x20	; 32
    1e7c:	51 e4       	ldi	r21, 0x41	; 65
    1e7e:	fc 01       	movw	r30, r24
    1e80:	60 81       	ld	r22, Z
    1e82:	71 81       	ldd	r23, Z+1	; 0x01
    1e84:	82 81       	ldd	r24, Z+2	; 0x02
    1e86:	93 81       	ldd	r25, Z+3	; 0x03
    1e88:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    1e8c:	c2 5f       	subi	r28, 0xF2	; 242
    1e8e:	de 4f       	sbci	r29, 0xFE	; 254
    1e90:	68 83       	st	Y, r22
    1e92:	79 83       	std	Y+1, r23	; 0x01
    1e94:	8a 83       	std	Y+2, r24	; 0x02
    1e96:	9b 83       	std	Y+3, r25	; 0x03
    1e98:	ce 50       	subi	r28, 0x0E	; 14
    1e9a:	d1 40       	sbci	r29, 0x01	; 1
    1e9c:	c2 5f       	subi	r28, 0xF2	; 242
    1e9e:	de 4f       	sbci	r29, 0xFE	; 254
    1ea0:	88 81       	ld	r24, Y
    1ea2:	99 81       	ldd	r25, Y+1	; 0x01
    1ea4:	aa 81       	ldd	r26, Y+2	; 0x02
    1ea6:	bb 81       	ldd	r27, Y+3	; 0x03
    1ea8:	ce 50       	subi	r28, 0x0E	; 14
    1eaa:	d1 40       	sbci	r29, 0x01	; 1
    1eac:	c6 55       	subi	r28, 0x56	; 86
    1eae:	df 4f       	sbci	r29, 0xFF	; 255
    1eb0:	88 83       	st	Y, r24
    1eb2:	99 83       	std	Y+1, r25	; 0x01
    1eb4:	aa 83       	std	Y+2, r26	; 0x02
    1eb6:	bb 83       	std	Y+3, r27	; 0x03
    1eb8:	ca 5a       	subi	r28, 0xAA	; 170
    1eba:	d0 40       	sbci	r29, 0x00	; 0
    1ebc:	8e 01       	movw	r16, r28
    1ebe:	0a 5a       	subi	r16, 0xAA	; 170
    1ec0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ec2:	c6 55       	subi	r28, 0x56	; 86
    1ec4:	df 4f       	sbci	r29, 0xFF	; 255
    1ec6:	68 81       	ld	r22, Y
    1ec8:	79 81       	ldd	r23, Y+1	; 0x01
    1eca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ecc:	9b 81       	ldd	r25, Y+3	; 0x03
    1ece:	ca 5a       	subi	r28, 0xAA	; 170
    1ed0:	d0 40       	sbci	r29, 0x00	; 0
    1ed2:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1ed6:	ce 5e       	subi	r28, 0xEE	; 238
    1ed8:	de 4f       	sbci	r29, 0xFE	; 254
    1eda:	68 83       	st	Y, r22
    1edc:	79 83       	std	Y+1, r23	; 0x01
    1ede:	8a 83       	std	Y+2, r24	; 0x02
    1ee0:	9b 83       	std	Y+3, r25	; 0x03
    1ee2:	c2 51       	subi	r28, 0x12	; 18
    1ee4:	d1 40       	sbci	r29, 0x01	; 1
    1ee6:	ce 5e       	subi	r28, 0xEE	; 238
    1ee8:	de 4f       	sbci	r29, 0xFE	; 254
    1eea:	e8 81       	ld	r30, Y
    1eec:	f9 81       	ldd	r31, Y+1	; 0x01
    1eee:	c2 51       	subi	r28, 0x12	; 18
    1ef0:	d1 40       	sbci	r29, 0x01	; 1
    1ef2:	d8 01       	movw	r26, r16
    1ef4:	ed 93       	st	X+, r30
    1ef6:	fc 93       	st	X, r31
		while(__ticks)
    1ef8:	25 c0       	rjmp	.+74     	; 0x1f44 <lcd_init+0xbd8>
    1efa:	ce 01       	movw	r24, r28
    1efc:	88 5a       	subi	r24, 0xA8	; 168
    1efe:	9f 4f       	sbci	r25, 0xFF	; 255
    1f00:	20 e9       	ldi	r18, 0x90	; 144
    1f02:	31 e0       	ldi	r19, 0x01	; 1
    1f04:	dc 01       	movw	r26, r24
    1f06:	2d 93       	st	X+, r18
    1f08:	3c 93       	st	X, r19
	__asm__ volatile (
    1f0a:	ce 01       	movw	r24, r28
    1f0c:	88 5a       	subi	r24, 0xA8	; 168
    1f0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f10:	fc 01       	movw	r30, r24
    1f12:	80 81       	ld	r24, Z
    1f14:	91 81       	ldd	r25, Z+1	; 0x01
    1f16:	01 97       	sbiw	r24, 0x01	; 1
    1f18:	f1 f7       	brne	.-4      	; 0x1f16 <lcd_init+0xbaa>
    1f1a:	9e 01       	movw	r18, r28
    1f1c:	28 5a       	subi	r18, 0xA8	; 168
    1f1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f20:	d9 01       	movw	r26, r18
    1f22:	8d 93       	st	X+, r24
    1f24:	9c 93       	st	X, r25
}
    1f26:	00 00       	nop
			__ticks --;
    1f28:	ce 01       	movw	r24, r28
    1f2a:	8a 5a       	subi	r24, 0xAA	; 170
    1f2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f2e:	9e 01       	movw	r18, r28
    1f30:	2a 5a       	subi	r18, 0xAA	; 170
    1f32:	3f 4f       	sbci	r19, 0xFF	; 255
    1f34:	f9 01       	movw	r30, r18
    1f36:	20 81       	ld	r18, Z
    1f38:	31 81       	ldd	r19, Z+1	; 0x01
    1f3a:	21 50       	subi	r18, 0x01	; 1
    1f3c:	31 09       	sbc	r19, r1
    1f3e:	dc 01       	movw	r26, r24
    1f40:	2d 93       	st	X+, r18
    1f42:	3c 93       	st	X, r19
		while(__ticks)
    1f44:	ce 01       	movw	r24, r28
    1f46:	8a 5a       	subi	r24, 0xAA	; 170
    1f48:	9f 4f       	sbci	r25, 0xFF	; 255
    1f4a:	fc 01       	movw	r30, r24
    1f4c:	80 81       	ld	r24, Z
    1f4e:	91 81       	ldd	r25, Z+1	; 0x01
    1f50:	89 2b       	or	r24, r25
    1f52:	99 f6       	brne	.-90     	; 0x1efa <lcd_init+0xb8e>
		return;
    1f54:	9f c0       	rjmp	.+318    	; 0x2094 <lcd_init+0xd28>
		__ticks = (uint16_t)__tmp;
    1f56:	8e 01       	movw	r16, r28
    1f58:	0a 5a       	subi	r16, 0xAA	; 170
    1f5a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f5c:	ce 01       	movw	r24, r28
    1f5e:	8e 5a       	subi	r24, 0xAE	; 174
    1f60:	9f 4f       	sbci	r25, 0xFF	; 255
    1f62:	dc 01       	movw	r26, r24
    1f64:	6d 91       	ld	r22, X+
    1f66:	7d 91       	ld	r23, X+
    1f68:	8d 91       	ld	r24, X+
    1f6a:	9c 91       	ld	r25, X
    1f6c:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    1f70:	ca 5e       	subi	r28, 0xEA	; 234
    1f72:	de 4f       	sbci	r29, 0xFE	; 254
    1f74:	68 83       	st	Y, r22
    1f76:	79 83       	std	Y+1, r23	; 0x01
    1f78:	8a 83       	std	Y+2, r24	; 0x02
    1f7a:	9b 83       	std	Y+3, r25	; 0x03
    1f7c:	c6 51       	subi	r28, 0x16	; 22
    1f7e:	d1 40       	sbci	r29, 0x01	; 1
    1f80:	ca 5e       	subi	r28, 0xEA	; 234
    1f82:	de 4f       	sbci	r29, 0xFE	; 254
    1f84:	88 81       	ld	r24, Y
    1f86:	99 81       	ldd	r25, Y+1	; 0x01
    1f88:	c6 51       	subi	r28, 0x16	; 22
    1f8a:	d1 40       	sbci	r29, 0x01	; 1
    1f8c:	f8 01       	movw	r30, r16
    1f8e:	91 83       	std	Z+1, r25	; 0x01
    1f90:	80 83       	st	Z, r24
    1f92:	ce 01       	movw	r24, r28
    1f94:	86 5a       	subi	r24, 0xA6	; 166
    1f96:	9f 4f       	sbci	r25, 0xFF	; 255
    1f98:	9e 01       	movw	r18, r28
    1f9a:	2a 5a       	subi	r18, 0xAA	; 170
    1f9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f9e:	d9 01       	movw	r26, r18
    1fa0:	2d 91       	ld	r18, X+
    1fa2:	3c 91       	ld	r19, X
    1fa4:	fc 01       	movw	r30, r24
    1fa6:	31 83       	std	Z+1, r19	; 0x01
    1fa8:	20 83       	st	Z, r18
	__asm__ volatile (
    1faa:	ce 01       	movw	r24, r28
    1fac:	86 5a       	subi	r24, 0xA6	; 166
    1fae:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb0:	dc 01       	movw	r26, r24
    1fb2:	8d 91       	ld	r24, X+
    1fb4:	9c 91       	ld	r25, X
    1fb6:	01 97       	sbiw	r24, 0x01	; 1
    1fb8:	f1 f7       	brne	.-4      	; 0x1fb6 <lcd_init+0xc4a>
    1fba:	9e 01       	movw	r18, r28
    1fbc:	26 5a       	subi	r18, 0xA6	; 166
    1fbe:	3f 4f       	sbci	r19, 0xFF	; 255
    1fc0:	f9 01       	movw	r30, r18
    1fc2:	91 83       	std	Z+1, r25	; 0x01
    1fc4:	80 83       	st	Z, r24
}
    1fc6:	66 c0       	rjmp	.+204    	; 0x2094 <lcd_init+0xd28>
	else if (__tmp > 255)
    1fc8:	ce 01       	movw	r24, r28
    1fca:	8b 5b       	subi	r24, 0xBB	; 187
    1fcc:	9f 4f       	sbci	r25, 0xFF	; 255
    1fce:	20 e0       	ldi	r18, 0x00	; 0
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	4f e7       	ldi	r20, 0x7F	; 127
    1fd4:	53 e4       	ldi	r21, 0x43	; 67
    1fd6:	dc 01       	movw	r26, r24
    1fd8:	6d 91       	ld	r22, X+
    1fda:	7d 91       	ld	r23, X+
    1fdc:	8d 91       	ld	r24, X+
    1fde:	9c 91       	ld	r25, X
    1fe0:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    1fe4:	18 16       	cp	r1, r24
    1fe6:	d4 f5       	brge	.+116    	; 0x205c <lcd_init+0xcf0>
		uint16_t __ticks=(uint16_t)__tmp2;
    1fe8:	8e 01       	movw	r16, r28
    1fea:	04 5a       	subi	r16, 0xA4	; 164
    1fec:	1f 4f       	sbci	r17, 0xFF	; 255
    1fee:	ce 01       	movw	r24, r28
    1ff0:	87 5b       	subi	r24, 0xB7	; 183
    1ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff4:	fc 01       	movw	r30, r24
    1ff6:	60 81       	ld	r22, Z
    1ff8:	71 81       	ldd	r23, Z+1	; 0x01
    1ffa:	82 81       	ldd	r24, Z+2	; 0x02
    1ffc:	93 81       	ldd	r25, Z+3	; 0x03
    1ffe:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    2002:	c6 5e       	subi	r28, 0xE6	; 230
    2004:	de 4f       	sbci	r29, 0xFE	; 254
    2006:	68 83       	st	Y, r22
    2008:	79 83       	std	Y+1, r23	; 0x01
    200a:	8a 83       	std	Y+2, r24	; 0x02
    200c:	9b 83       	std	Y+3, r25	; 0x03
    200e:	ca 51       	subi	r28, 0x1A	; 26
    2010:	d1 40       	sbci	r29, 0x01	; 1
    2012:	c6 5e       	subi	r28, 0xE6	; 230
    2014:	de 4f       	sbci	r29, 0xFE	; 254
    2016:	e8 81       	ld	r30, Y
    2018:	f9 81       	ldd	r31, Y+1	; 0x01
    201a:	ca 51       	subi	r28, 0x1A	; 26
    201c:	d1 40       	sbci	r29, 0x01	; 1
    201e:	d8 01       	movw	r26, r16
    2020:	ed 93       	st	X+, r30
    2022:	fc 93       	st	X, r31
    2024:	ce 01       	movw	r24, r28
    2026:	82 5a       	subi	r24, 0xA2	; 162
    2028:	9f 4f       	sbci	r25, 0xFF	; 255
    202a:	9e 01       	movw	r18, r28
    202c:	24 5a       	subi	r18, 0xA4	; 164
    202e:	3f 4f       	sbci	r19, 0xFF	; 255
    2030:	d9 01       	movw	r26, r18
    2032:	2d 91       	ld	r18, X+
    2034:	3c 91       	ld	r19, X
    2036:	fc 01       	movw	r30, r24
    2038:	31 83       	std	Z+1, r19	; 0x01
    203a:	20 83       	st	Z, r18
	__asm__ volatile (
    203c:	ce 01       	movw	r24, r28
    203e:	82 5a       	subi	r24, 0xA2	; 162
    2040:	9f 4f       	sbci	r25, 0xFF	; 255
    2042:	dc 01       	movw	r26, r24
    2044:	8d 91       	ld	r24, X+
    2046:	9c 91       	ld	r25, X
    2048:	01 97       	sbiw	r24, 0x01	; 1
    204a:	f1 f7       	brne	.-4      	; 0x2048 <lcd_init+0xcdc>
    204c:	9e 01       	movw	r18, r28
    204e:	22 5a       	subi	r18, 0xA2	; 162
    2050:	3f 4f       	sbci	r19, 0xFF	; 255
    2052:	f9 01       	movw	r30, r18
    2054:	91 83       	std	Z+1, r25	; 0x01
    2056:	80 83       	st	Z, r24
}
    2058:	00 00       	nop
		return;
    205a:	34 c0       	rjmp	.+104    	; 0x20c4 <lcd_init+0xd58>
		__ticks = (uint8_t)__tmp;
    205c:	8e 01       	movw	r16, r28
    205e:	03 5b       	subi	r16, 0xB3	; 179
    2060:	1f 4f       	sbci	r17, 0xFF	; 255
    2062:	ce 01       	movw	r24, r28
    2064:	8b 5b       	subi	r24, 0xBB	; 187
    2066:	9f 4f       	sbci	r25, 0xFF	; 255
    2068:	dc 01       	movw	r26, r24
    206a:	6d 91       	ld	r22, X+
    206c:	7d 91       	ld	r23, X+
    206e:	8d 91       	ld	r24, X+
    2070:	9c 91       	ld	r25, X
    2072:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    2076:	c2 5e       	subi	r28, 0xE2	; 226
    2078:	de 4f       	sbci	r29, 0xFE	; 254
    207a:	68 83       	st	Y, r22
    207c:	79 83       	std	Y+1, r23	; 0x01
    207e:	8a 83       	std	Y+2, r24	; 0x02
    2080:	9b 83       	std	Y+3, r25	; 0x03
    2082:	ce 51       	subi	r28, 0x1E	; 30
    2084:	d1 40       	sbci	r29, 0x01	; 1
    2086:	c2 5e       	subi	r28, 0xE2	; 226
    2088:	de 4f       	sbci	r29, 0xFE	; 254
    208a:	88 81       	ld	r24, Y
    208c:	ce 51       	subi	r28, 0x1E	; 30
    208e:	d1 40       	sbci	r29, 0x01	; 1
    2090:	f8 01       	movw	r30, r16
    2092:	80 83       	st	Z, r24
    2094:	ce 01       	movw	r24, r28
    2096:	80 5a       	subi	r24, 0xA0	; 160
    2098:	9f 4f       	sbci	r25, 0xFF	; 255
    209a:	9e 01       	movw	r18, r28
    209c:	23 5b       	subi	r18, 0xB3	; 179
    209e:	3f 4f       	sbci	r19, 0xFF	; 255
    20a0:	d9 01       	movw	r26, r18
    20a2:	2c 91       	ld	r18, X
    20a4:	fc 01       	movw	r30, r24
    20a6:	20 83       	st	Z, r18
	__asm__ volatile (
    20a8:	ce 01       	movw	r24, r28
    20aa:	80 5a       	subi	r24, 0xA0	; 160
    20ac:	9f 4f       	sbci	r25, 0xFF	; 255
    20ae:	dc 01       	movw	r26, r24
    20b0:	8c 91       	ld	r24, X
    20b2:	28 2f       	mov	r18, r24
    20b4:	2a 95       	dec	r18
    20b6:	f1 f7       	brne	.-4      	; 0x20b4 <lcd_init+0xd48>
    20b8:	ce 01       	movw	r24, r28
    20ba:	80 5a       	subi	r24, 0xA0	; 160
    20bc:	9f 4f       	sbci	r25, 0xFF	; 255
    20be:	fc 01       	movw	r30, r24
    20c0:	20 83       	st	Z, r18
}
    20c2:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
    20c4:	0e 94 4b 00 	call	0x96	; 0x96 <toggle_e>
    20c8:	80 e0       	ldi	r24, 0x00	; 0
    20ca:	90 e0       	ldi	r25, 0x00	; 0
    20cc:	a0 e8       	ldi	r26, 0x80	; 128
    20ce:	b2 e4       	ldi	r27, 0x42	; 66
    20d0:	89 a3       	std	Y+33, r24	; 0x21
    20d2:	9a a3       	std	Y+34, r25	; 0x22
    20d4:	ab a3       	std	Y+35, r26	; 0x23
    20d6:	bc a3       	std	Y+36, r27	; 0x24
	__tmp = ((F_CPU) / 3e6) * __us;
    20d8:	2b ea       	ldi	r18, 0xAB	; 171
    20da:	3a ea       	ldi	r19, 0xAA	; 170
    20dc:	4a ea       	ldi	r20, 0xAA	; 170
    20de:	50 e4       	ldi	r21, 0x40	; 64
    20e0:	69 a1       	ldd	r22, Y+33	; 0x21
    20e2:	7a a1       	ldd	r23, Y+34	; 0x22
    20e4:	8b a1       	ldd	r24, Y+35	; 0x23
    20e6:	9c a1       	ldd	r25, Y+36	; 0x24
    20e8:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    20ec:	ce 5d       	subi	r28, 0xDE	; 222
    20ee:	de 4f       	sbci	r29, 0xFE	; 254
    20f0:	68 83       	st	Y, r22
    20f2:	79 83       	std	Y+1, r23	; 0x01
    20f4:	8a 83       	std	Y+2, r24	; 0x02
    20f6:	9b 83       	std	Y+3, r25	; 0x03
    20f8:	c2 52       	subi	r28, 0x22	; 34
    20fa:	d1 40       	sbci	r29, 0x01	; 1
    20fc:	ce 5d       	subi	r28, 0xDE	; 222
    20fe:	de 4f       	sbci	r29, 0xFE	; 254
    2100:	88 81       	ld	r24, Y
    2102:	99 81       	ldd	r25, Y+1	; 0x01
    2104:	aa 81       	ldd	r26, Y+2	; 0x02
    2106:	bb 81       	ldd	r27, Y+3	; 0x03
    2108:	c2 52       	subi	r28, 0x22	; 34
    210a:	d1 40       	sbci	r29, 0x01	; 1
    210c:	8d a3       	std	Y+37, r24	; 0x25
    210e:	9e a3       	std	Y+38, r25	; 0x26
    2110:	af a3       	std	Y+39, r26	; 0x27
    2112:	b8 a7       	std	Y+40, r27	; 0x28
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2114:	20 e0       	ldi	r18, 0x00	; 0
    2116:	30 e0       	ldi	r19, 0x00	; 0
    2118:	40 e8       	ldi	r20, 0x80	; 128
    211a:	50 e4       	ldi	r21, 0x40	; 64
    211c:	69 a1       	ldd	r22, Y+33	; 0x21
    211e:	7a a1       	ldd	r23, Y+34	; 0x22
    2120:	8b a1       	ldd	r24, Y+35	; 0x23
    2122:	9c a1       	ldd	r25, Y+36	; 0x24
    2124:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    2128:	ca 5d       	subi	r28, 0xDA	; 218
    212a:	de 4f       	sbci	r29, 0xFE	; 254
    212c:	68 83       	st	Y, r22
    212e:	79 83       	std	Y+1, r23	; 0x01
    2130:	8a 83       	std	Y+2, r24	; 0x02
    2132:	9b 83       	std	Y+3, r25	; 0x03
    2134:	c6 52       	subi	r28, 0x26	; 38
    2136:	d1 40       	sbci	r29, 0x01	; 1
    2138:	ca 5d       	subi	r28, 0xDA	; 218
    213a:	de 4f       	sbci	r29, 0xFE	; 254
    213c:	88 81       	ld	r24, Y
    213e:	99 81       	ldd	r25, Y+1	; 0x01
    2140:	aa 81       	ldd	r26, Y+2	; 0x02
    2142:	bb 81       	ldd	r27, Y+3	; 0x03
    2144:	c6 52       	subi	r28, 0x26	; 38
    2146:	d1 40       	sbci	r29, 0x01	; 1
    2148:	89 a7       	std	Y+41, r24	; 0x29
    214a:	9a a7       	std	Y+42, r25	; 0x2a
    214c:	ab a7       	std	Y+43, r26	; 0x2b
    214e:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    2150:	20 e0       	ldi	r18, 0x00	; 0
    2152:	30 e0       	ldi	r19, 0x00	; 0
    2154:	40 e8       	ldi	r20, 0x80	; 128
    2156:	5f e3       	ldi	r21, 0x3F	; 63
    2158:	6d a1       	ldd	r22, Y+37	; 0x25
    215a:	7e a1       	ldd	r23, Y+38	; 0x26
    215c:	8f a1       	ldd	r24, Y+39	; 0x27
    215e:	98 a5       	ldd	r25, Y+40	; 0x28
    2160:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    2164:	88 23       	and	r24, r24
    2166:	1c f4       	brge	.+6      	; 0x216e <lcd_init+0xe02>
		__ticks = 1;
    2168:	81 e0       	ldi	r24, 0x01	; 1
    216a:	8d a7       	std	Y+45, r24	; 0x2d
    216c:	1c c1       	rjmp	.+568    	; 0x23a6 <lcd_init+0x103a>
	else if (__tmp2 > 65535)
    216e:	20 e0       	ldi	r18, 0x00	; 0
    2170:	3f ef       	ldi	r19, 0xFF	; 255
    2172:	4f e7       	ldi	r20, 0x7F	; 127
    2174:	57 e4       	ldi	r21, 0x47	; 71
    2176:	69 a5       	ldd	r22, Y+41	; 0x29
    2178:	7a a5       	ldd	r23, Y+42	; 0x2a
    217a:	8b a5       	ldd	r24, Y+43	; 0x2b
    217c:	9c a5       	ldd	r25, Y+44	; 0x2c
    217e:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    2182:	18 16       	cp	r1, r24
    2184:	0c f0       	brlt	.+2      	; 0x2188 <lcd_init+0xe1c>
    2186:	cd c0       	rjmp	.+410    	; 0x2322 <lcd_init+0xfb6>
		_delay_ms(__us / 1000.0);
    2188:	20 e0       	ldi	r18, 0x00	; 0
    218a:	30 e0       	ldi	r19, 0x00	; 0
    218c:	4a e7       	ldi	r20, 0x7A	; 122
    218e:	54 e4       	ldi	r21, 0x44	; 68
    2190:	69 a1       	ldd	r22, Y+33	; 0x21
    2192:	7a a1       	ldd	r23, Y+34	; 0x22
    2194:	8b a1       	ldd	r24, Y+35	; 0x23
    2196:	9c a1       	ldd	r25, Y+36	; 0x24
    2198:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
    219c:	c6 5d       	subi	r28, 0xD6	; 214
    219e:	de 4f       	sbci	r29, 0xFE	; 254
    21a0:	68 83       	st	Y, r22
    21a2:	79 83       	std	Y+1, r23	; 0x01
    21a4:	8a 83       	std	Y+2, r24	; 0x02
    21a6:	9b 83       	std	Y+3, r25	; 0x03
    21a8:	ca 52       	subi	r28, 0x2A	; 42
    21aa:	d1 40       	sbci	r29, 0x01	; 1
    21ac:	c6 5d       	subi	r28, 0xD6	; 214
    21ae:	de 4f       	sbci	r29, 0xFE	; 254
    21b0:	88 81       	ld	r24, Y
    21b2:	99 81       	ldd	r25, Y+1	; 0x01
    21b4:	aa 81       	ldd	r26, Y+2	; 0x02
    21b6:	bb 81       	ldd	r27, Y+3	; 0x03
    21b8:	ca 52       	subi	r28, 0x2A	; 42
    21ba:	d1 40       	sbci	r29, 0x01	; 1
    21bc:	8e a7       	std	Y+46, r24	; 0x2e
    21be:	9f a7       	std	Y+47, r25	; 0x2f
    21c0:	a8 ab       	std	Y+48, r26	; 0x30
    21c2:	b9 ab       	std	Y+49, r27	; 0x31
	__tmp = ((F_CPU) / 4e3) * __ms;
    21c4:	20 e0       	ldi	r18, 0x00	; 0
    21c6:	30 e0       	ldi	r19, 0x00	; 0
    21c8:	4a e7       	ldi	r20, 0x7A	; 122
    21ca:	55 e4       	ldi	r21, 0x45	; 69
    21cc:	6e a5       	ldd	r22, Y+46	; 0x2e
    21ce:	7f a5       	ldd	r23, Y+47	; 0x2f
    21d0:	88 a9       	ldd	r24, Y+48	; 0x30
    21d2:	99 a9       	ldd	r25, Y+49	; 0x31
    21d4:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    21d8:	c2 5d       	subi	r28, 0xD2	; 210
    21da:	de 4f       	sbci	r29, 0xFE	; 254
    21dc:	68 83       	st	Y, r22
    21de:	79 83       	std	Y+1, r23	; 0x01
    21e0:	8a 83       	std	Y+2, r24	; 0x02
    21e2:	9b 83       	std	Y+3, r25	; 0x03
    21e4:	ce 52       	subi	r28, 0x2E	; 46
    21e6:	d1 40       	sbci	r29, 0x01	; 1
    21e8:	c2 5d       	subi	r28, 0xD2	; 210
    21ea:	de 4f       	sbci	r29, 0xFE	; 254
    21ec:	88 81       	ld	r24, Y
    21ee:	99 81       	ldd	r25, Y+1	; 0x01
    21f0:	aa 81       	ldd	r26, Y+2	; 0x02
    21f2:	bb 81       	ldd	r27, Y+3	; 0x03
    21f4:	ce 52       	subi	r28, 0x2E	; 46
    21f6:	d1 40       	sbci	r29, 0x01	; 1
    21f8:	8a ab       	std	Y+50, r24	; 0x32
    21fa:	9b ab       	std	Y+51, r25	; 0x33
    21fc:	ac ab       	std	Y+52, r26	; 0x34
    21fe:	bd ab       	std	Y+53, r27	; 0x35
	if (__tmp < 1.0)
    2200:	20 e0       	ldi	r18, 0x00	; 0
    2202:	30 e0       	ldi	r19, 0x00	; 0
    2204:	40 e8       	ldi	r20, 0x80	; 128
    2206:	5f e3       	ldi	r21, 0x3F	; 63
    2208:	6a a9       	ldd	r22, Y+50	; 0x32
    220a:	7b a9       	ldd	r23, Y+51	; 0x33
    220c:	8c a9       	ldd	r24, Y+52	; 0x34
    220e:	9d a9       	ldd	r25, Y+53	; 0x35
    2210:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    2214:	88 23       	and	r24, r24
    2216:	2c f4       	brge	.+10     	; 0x2222 <lcd_init+0xeb6>
		__ticks = 1;
    2218:	81 e0       	ldi	r24, 0x01	; 1
    221a:	90 e0       	ldi	r25, 0x00	; 0
    221c:	9f ab       	std	Y+55, r25	; 0x37
    221e:	8e ab       	std	Y+54, r24	; 0x36
    2220:	75 c0       	rjmp	.+234    	; 0x230c <lcd_init+0xfa0>
	else if (__tmp > 65535)
    2222:	20 e0       	ldi	r18, 0x00	; 0
    2224:	3f ef       	ldi	r19, 0xFF	; 255
    2226:	4f e7       	ldi	r20, 0x7F	; 127
    2228:	57 e4       	ldi	r21, 0x47	; 71
    222a:	6a a9       	ldd	r22, Y+50	; 0x32
    222c:	7b a9       	ldd	r23, Y+51	; 0x33
    222e:	8c a9       	ldd	r24, Y+52	; 0x34
    2230:	9d a9       	ldd	r25, Y+53	; 0x35
    2232:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    2236:	18 16       	cp	r1, r24
    2238:	0c f0       	brlt	.+2      	; 0x223c <lcd_init+0xed0>
    223a:	52 c0       	rjmp	.+164    	; 0x22e0 <lcd_init+0xf74>
		__ticks = (uint16_t) (__ms * 10.0);
    223c:	20 e0       	ldi	r18, 0x00	; 0
    223e:	30 e0       	ldi	r19, 0x00	; 0
    2240:	40 e2       	ldi	r20, 0x20	; 32
    2242:	51 e4       	ldi	r21, 0x41	; 65
    2244:	6e a5       	ldd	r22, Y+46	; 0x2e
    2246:	7f a5       	ldd	r23, Y+47	; 0x2f
    2248:	88 a9       	ldd	r24, Y+48	; 0x30
    224a:	99 a9       	ldd	r25, Y+49	; 0x31
    224c:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    2250:	ce 5c       	subi	r28, 0xCE	; 206
    2252:	de 4f       	sbci	r29, 0xFE	; 254
    2254:	68 83       	st	Y, r22
    2256:	79 83       	std	Y+1, r23	; 0x01
    2258:	8a 83       	std	Y+2, r24	; 0x02
    225a:	9b 83       	std	Y+3, r25	; 0x03
    225c:	c2 53       	subi	r28, 0x32	; 50
    225e:	d1 40       	sbci	r29, 0x01	; 1
    2260:	ce 5c       	subi	r28, 0xCE	; 206
    2262:	de 4f       	sbci	r29, 0xFE	; 254
    2264:	88 81       	ld	r24, Y
    2266:	99 81       	ldd	r25, Y+1	; 0x01
    2268:	aa 81       	ldd	r26, Y+2	; 0x02
    226a:	bb 81       	ldd	r27, Y+3	; 0x03
    226c:	c2 53       	subi	r28, 0x32	; 50
    226e:	d1 40       	sbci	r29, 0x01	; 1
    2270:	ca 55       	subi	r28, 0x5A	; 90
    2272:	df 4f       	sbci	r29, 0xFF	; 255
    2274:	88 83       	st	Y, r24
    2276:	99 83       	std	Y+1, r25	; 0x01
    2278:	aa 83       	std	Y+2, r26	; 0x02
    227a:	bb 83       	std	Y+3, r27	; 0x03
    227c:	c6 5a       	subi	r28, 0xA6	; 166
    227e:	d0 40       	sbci	r29, 0x00	; 0
    2280:	ca 55       	subi	r28, 0x5A	; 90
    2282:	df 4f       	sbci	r29, 0xFF	; 255
    2284:	68 81       	ld	r22, Y
    2286:	79 81       	ldd	r23, Y+1	; 0x01
    2288:	8a 81       	ldd	r24, Y+2	; 0x02
    228a:	9b 81       	ldd	r25, Y+3	; 0x03
    228c:	c6 5a       	subi	r28, 0xA6	; 166
    228e:	d0 40       	sbci	r29, 0x00	; 0
    2290:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    2294:	ca 5c       	subi	r28, 0xCA	; 202
    2296:	de 4f       	sbci	r29, 0xFE	; 254
    2298:	68 83       	st	Y, r22
    229a:	79 83       	std	Y+1, r23	; 0x01
    229c:	8a 83       	std	Y+2, r24	; 0x02
    229e:	9b 83       	std	Y+3, r25	; 0x03
    22a0:	c6 53       	subi	r28, 0x36	; 54
    22a2:	d1 40       	sbci	r29, 0x01	; 1
    22a4:	ca 5c       	subi	r28, 0xCA	; 202
    22a6:	de 4f       	sbci	r29, 0xFE	; 254
    22a8:	a8 81       	ld	r26, Y
    22aa:	b9 81       	ldd	r27, Y+1	; 0x01
    22ac:	c6 53       	subi	r28, 0x36	; 54
    22ae:	d1 40       	sbci	r29, 0x01	; 1
    22b0:	bf ab       	std	Y+55, r27	; 0x37
    22b2:	ae ab       	std	Y+54, r26	; 0x36
		while(__ticks)
    22b4:	10 c0       	rjmp	.+32     	; 0x22d6 <lcd_init+0xf6a>
    22b6:	80 e9       	ldi	r24, 0x90	; 144
    22b8:	91 e0       	ldi	r25, 0x01	; 1
    22ba:	99 af       	std	Y+57, r25	; 0x39
    22bc:	88 af       	std	Y+56, r24	; 0x38
	__asm__ volatile (
    22be:	88 ad       	ldd	r24, Y+56	; 0x38
    22c0:	99 ad       	ldd	r25, Y+57	; 0x39
    22c2:	01 97       	sbiw	r24, 0x01	; 1
    22c4:	f1 f7       	brne	.-4      	; 0x22c2 <lcd_init+0xf56>
    22c6:	99 af       	std	Y+57, r25	; 0x39
    22c8:	88 af       	std	Y+56, r24	; 0x38
}
    22ca:	00 00       	nop
			__ticks --;
    22cc:	8e a9       	ldd	r24, Y+54	; 0x36
    22ce:	9f a9       	ldd	r25, Y+55	; 0x37
    22d0:	01 97       	sbiw	r24, 0x01	; 1
    22d2:	9f ab       	std	Y+55, r25	; 0x37
    22d4:	8e ab       	std	Y+54, r24	; 0x36
		while(__ticks)
    22d6:	8e a9       	ldd	r24, Y+54	; 0x36
    22d8:	9f a9       	ldd	r25, Y+55	; 0x37
    22da:	89 2b       	or	r24, r25
    22dc:	61 f7       	brne	.-40     	; 0x22b6 <lcd_init+0xf4a>
		return;
    22de:	63 c0       	rjmp	.+198    	; 0x23a6 <lcd_init+0x103a>
		__ticks = (uint16_t)__tmp;
    22e0:	6a a9       	ldd	r22, Y+50	; 0x32
    22e2:	7b a9       	ldd	r23, Y+51	; 0x33
    22e4:	8c a9       	ldd	r24, Y+52	; 0x34
    22e6:	9d a9       	ldd	r25, Y+53	; 0x35
    22e8:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    22ec:	c6 5c       	subi	r28, 0xC6	; 198
    22ee:	de 4f       	sbci	r29, 0xFE	; 254
    22f0:	68 83       	st	Y, r22
    22f2:	79 83       	std	Y+1, r23	; 0x01
    22f4:	8a 83       	std	Y+2, r24	; 0x02
    22f6:	9b 83       	std	Y+3, r25	; 0x03
    22f8:	ca 53       	subi	r28, 0x3A	; 58
    22fa:	d1 40       	sbci	r29, 0x01	; 1
    22fc:	c6 5c       	subi	r28, 0xC6	; 198
    22fe:	de 4f       	sbci	r29, 0xFE	; 254
    2300:	e8 81       	ld	r30, Y
    2302:	f9 81       	ldd	r31, Y+1	; 0x01
    2304:	ca 53       	subi	r28, 0x3A	; 58
    2306:	d1 40       	sbci	r29, 0x01	; 1
    2308:	ff ab       	std	Y+55, r31	; 0x37
    230a:	ee ab       	std	Y+54, r30	; 0x36
    230c:	8e a9       	ldd	r24, Y+54	; 0x36
    230e:	9f a9       	ldd	r25, Y+55	; 0x37
    2310:	9b af       	std	Y+59, r25	; 0x3b
    2312:	8a af       	std	Y+58, r24	; 0x3a
	__asm__ volatile (
    2314:	8a ad       	ldd	r24, Y+58	; 0x3a
    2316:	9b ad       	ldd	r25, Y+59	; 0x3b
    2318:	01 97       	sbiw	r24, 0x01	; 1
    231a:	f1 f7       	brne	.-4      	; 0x2318 <lcd_init+0xfac>
    231c:	9b af       	std	Y+59, r25	; 0x3b
    231e:	8a af       	std	Y+58, r24	; 0x3a
}
    2320:	42 c0       	rjmp	.+132    	; 0x23a6 <lcd_init+0x103a>
	else if (__tmp > 255)
    2322:	20 e0       	ldi	r18, 0x00	; 0
    2324:	30 e0       	ldi	r19, 0x00	; 0
    2326:	4f e7       	ldi	r20, 0x7F	; 127
    2328:	53 e4       	ldi	r21, 0x43	; 67
    232a:	6d a1       	ldd	r22, Y+37	; 0x25
    232c:	7e a1       	ldd	r23, Y+38	; 0x26
    232e:	8f a1       	ldd	r24, Y+39	; 0x27
    2330:	98 a5       	ldd	r25, Y+40	; 0x28
    2332:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    2336:	18 16       	cp	r1, r24
    2338:	14 f5       	brge	.+68     	; 0x237e <lcd_init+0x1012>
		uint16_t __ticks=(uint16_t)__tmp2;
    233a:	69 a5       	ldd	r22, Y+41	; 0x29
    233c:	7a a5       	ldd	r23, Y+42	; 0x2a
    233e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2340:	9c a5       	ldd	r25, Y+44	; 0x2c
    2342:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    2346:	c2 5c       	subi	r28, 0xC2	; 194
    2348:	de 4f       	sbci	r29, 0xFE	; 254
    234a:	68 83       	st	Y, r22
    234c:	79 83       	std	Y+1, r23	; 0x01
    234e:	8a 83       	std	Y+2, r24	; 0x02
    2350:	9b 83       	std	Y+3, r25	; 0x03
    2352:	ce 53       	subi	r28, 0x3E	; 62
    2354:	d1 40       	sbci	r29, 0x01	; 1
    2356:	c2 5c       	subi	r28, 0xC2	; 194
    2358:	de 4f       	sbci	r29, 0xFE	; 254
    235a:	88 81       	ld	r24, Y
    235c:	99 81       	ldd	r25, Y+1	; 0x01
    235e:	ce 53       	subi	r28, 0x3E	; 62
    2360:	d1 40       	sbci	r29, 0x01	; 1
    2362:	9d af       	std	Y+61, r25	; 0x3d
    2364:	8c af       	std	Y+60, r24	; 0x3c
    2366:	8c ad       	ldd	r24, Y+60	; 0x3c
    2368:	9d ad       	ldd	r25, Y+61	; 0x3d
    236a:	9f af       	std	Y+63, r25	; 0x3f
    236c:	8e af       	std	Y+62, r24	; 0x3e
	__asm__ volatile (
    236e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2370:	9f ad       	ldd	r25, Y+63	; 0x3f
    2372:	01 97       	sbiw	r24, 0x01	; 1
    2374:	f1 f7       	brne	.-4      	; 0x2372 <lcd_init+0x1006>
    2376:	9f af       	std	Y+63, r25	; 0x3f
    2378:	8e af       	std	Y+62, r24	; 0x3e
}
    237a:	00 00       	nop
		return;
    237c:	28 c0       	rjmp	.+80     	; 0x23ce <lcd_init+0x1062>
		__ticks = (uint8_t)__tmp;
    237e:	6d a1       	ldd	r22, Y+37	; 0x25
    2380:	7e a1       	ldd	r23, Y+38	; 0x26
    2382:	8f a1       	ldd	r24, Y+39	; 0x27
    2384:	98 a5       	ldd	r25, Y+40	; 0x28
    2386:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    238a:	ce 5b       	subi	r28, 0xBE	; 190
    238c:	de 4f       	sbci	r29, 0xFE	; 254
    238e:	68 83       	st	Y, r22
    2390:	79 83       	std	Y+1, r23	; 0x01
    2392:	8a 83       	std	Y+2, r24	; 0x02
    2394:	9b 83       	std	Y+3, r25	; 0x03
    2396:	c2 54       	subi	r28, 0x42	; 66
    2398:	d1 40       	sbci	r29, 0x01	; 1
    239a:	ce 5b       	subi	r28, 0xBE	; 190
    239c:	de 4f       	sbci	r29, 0xFE	; 254
    239e:	98 81       	ld	r25, Y
    23a0:	c2 54       	subi	r28, 0x42	; 66
    23a2:	d1 40       	sbci	r29, 0x01	; 1
    23a4:	9d a7       	std	Y+45, r25	; 0x2d
    23a6:	2d a5       	ldd	r18, Y+45	; 0x2d
    23a8:	ce 01       	movw	r24, r28
    23aa:	80 5c       	subi	r24, 0xC0	; 192
    23ac:	9f 4f       	sbci	r25, 0xFF	; 255
    23ae:	dc 01       	movw	r26, r24
    23b0:	2c 93       	st	X, r18
	__asm__ volatile (
    23b2:	ce 01       	movw	r24, r28
    23b4:	80 5c       	subi	r24, 0xC0	; 192
    23b6:	9f 4f       	sbci	r25, 0xFF	; 255
    23b8:	fc 01       	movw	r30, r24
    23ba:	80 81       	ld	r24, Z
    23bc:	28 2f       	mov	r18, r24
    23be:	2a 95       	dec	r18
    23c0:	f1 f7       	brne	.-4      	; 0x23be <lcd_init+0x1052>
    23c2:	ce 01       	movw	r24, r28
    23c4:	80 5c       	subi	r24, 0xC0	; 192
    23c6:	9f 4f       	sbci	r25, 0xFF	; 255
    23c8:	dc 01       	movw	r26, r24
    23ca:	2c 93       	st	X, r18
}
    23cc:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
    23ce:	85 e2       	ldi	r24, 0x25	; 37
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	fc 01       	movw	r30, r24
    23d4:	20 81       	ld	r18, Z
    23d6:	85 e2       	ldi	r24, 0x25	; 37
    23d8:	90 e0       	ldi	r25, 0x00	; 0
    23da:	2e 7f       	andi	r18, 0xFE	; 254
    23dc:	dc 01       	movw	r26, r24
    23de:	2c 93       	st	X, r18
    lcd_e_toggle();
    23e0:	0e 94 4b 00 	call	0x96	; 0x96 <toggle_e>
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	90 e0       	ldi	r25, 0x00	; 0
    23e8:	a0 e8       	ldi	r26, 0x80	; 128
    23ea:	b2 e4       	ldi	r27, 0x42	; 66
    23ec:	8b 87       	std	Y+11, r24	; 0x0b
    23ee:	9c 87       	std	Y+12, r25	; 0x0c
    23f0:	ad 87       	std	Y+13, r26	; 0x0d
    23f2:	be 87       	std	Y+14, r27	; 0x0e
	__tmp = ((F_CPU) / 3e6) * __us;
    23f4:	2b ea       	ldi	r18, 0xAB	; 171
    23f6:	3a ea       	ldi	r19, 0xAA	; 170
    23f8:	4a ea       	ldi	r20, 0xAA	; 170
    23fa:	50 e4       	ldi	r21, 0x40	; 64
    23fc:	6b 85       	ldd	r22, Y+11	; 0x0b
    23fe:	7c 85       	ldd	r23, Y+12	; 0x0c
    2400:	8d 85       	ldd	r24, Y+13	; 0x0d
    2402:	9e 85       	ldd	r25, Y+14	; 0x0e
    2404:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    2408:	ca 5b       	subi	r28, 0xBA	; 186
    240a:	de 4f       	sbci	r29, 0xFE	; 254
    240c:	68 83       	st	Y, r22
    240e:	79 83       	std	Y+1, r23	; 0x01
    2410:	8a 83       	std	Y+2, r24	; 0x02
    2412:	9b 83       	std	Y+3, r25	; 0x03
    2414:	c6 54       	subi	r28, 0x46	; 70
    2416:	d1 40       	sbci	r29, 0x01	; 1
    2418:	ca 5b       	subi	r28, 0xBA	; 186
    241a:	de 4f       	sbci	r29, 0xFE	; 254
    241c:	88 81       	ld	r24, Y
    241e:	99 81       	ldd	r25, Y+1	; 0x01
    2420:	aa 81       	ldd	r26, Y+2	; 0x02
    2422:	bb 81       	ldd	r27, Y+3	; 0x03
    2424:	c6 54       	subi	r28, 0x46	; 70
    2426:	d1 40       	sbci	r29, 0x01	; 1
    2428:	8f 87       	std	Y+15, r24	; 0x0f
    242a:	98 8b       	std	Y+16, r25	; 0x10
    242c:	a9 8b       	std	Y+17, r26	; 0x11
    242e:	ba 8b       	std	Y+18, r27	; 0x12
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2430:	20 e0       	ldi	r18, 0x00	; 0
    2432:	30 e0       	ldi	r19, 0x00	; 0
    2434:	40 e8       	ldi	r20, 0x80	; 128
    2436:	50 e4       	ldi	r21, 0x40	; 64
    2438:	6b 85       	ldd	r22, Y+11	; 0x0b
    243a:	7c 85       	ldd	r23, Y+12	; 0x0c
    243c:	8d 85       	ldd	r24, Y+13	; 0x0d
    243e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2440:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    2444:	c6 5b       	subi	r28, 0xB6	; 182
    2446:	de 4f       	sbci	r29, 0xFE	; 254
    2448:	68 83       	st	Y, r22
    244a:	79 83       	std	Y+1, r23	; 0x01
    244c:	8a 83       	std	Y+2, r24	; 0x02
    244e:	9b 83       	std	Y+3, r25	; 0x03
    2450:	ca 54       	subi	r28, 0x4A	; 74
    2452:	d1 40       	sbci	r29, 0x01	; 1
    2454:	c6 5b       	subi	r28, 0xB6	; 182
    2456:	de 4f       	sbci	r29, 0xFE	; 254
    2458:	88 81       	ld	r24, Y
    245a:	99 81       	ldd	r25, Y+1	; 0x01
    245c:	aa 81       	ldd	r26, Y+2	; 0x02
    245e:	bb 81       	ldd	r27, Y+3	; 0x03
    2460:	ca 54       	subi	r28, 0x4A	; 74
    2462:	d1 40       	sbci	r29, 0x01	; 1
    2464:	8b 8b       	std	Y+19, r24	; 0x13
    2466:	9c 8b       	std	Y+20, r25	; 0x14
    2468:	ad 8b       	std	Y+21, r26	; 0x15
    246a:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    246c:	20 e0       	ldi	r18, 0x00	; 0
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	40 e8       	ldi	r20, 0x80	; 128
    2472:	5f e3       	ldi	r21, 0x3F	; 63
    2474:	6f 85       	ldd	r22, Y+15	; 0x0f
    2476:	78 89       	ldd	r23, Y+16	; 0x10
    2478:	89 89       	ldd	r24, Y+17	; 0x11
    247a:	9a 89       	ldd	r25, Y+18	; 0x12
    247c:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    2480:	88 23       	and	r24, r24
    2482:	1c f4       	brge	.+6      	; 0x248a <lcd_init+0x111e>
		__ticks = 1;
    2484:	81 e0       	ldi	r24, 0x01	; 1
    2486:	8f 8b       	std	Y+23, r24	; 0x17
    2488:	1c c1       	rjmp	.+568    	; 0x26c2 <lcd_init+0x1356>
	else if (__tmp2 > 65535)
    248a:	20 e0       	ldi	r18, 0x00	; 0
    248c:	3f ef       	ldi	r19, 0xFF	; 255
    248e:	4f e7       	ldi	r20, 0x7F	; 127
    2490:	57 e4       	ldi	r21, 0x47	; 71
    2492:	6b 89       	ldd	r22, Y+19	; 0x13
    2494:	7c 89       	ldd	r23, Y+20	; 0x14
    2496:	8d 89       	ldd	r24, Y+21	; 0x15
    2498:	9e 89       	ldd	r25, Y+22	; 0x16
    249a:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    249e:	18 16       	cp	r1, r24
    24a0:	0c f0       	brlt	.+2      	; 0x24a4 <lcd_init+0x1138>
    24a2:	cd c0       	rjmp	.+410    	; 0x263e <lcd_init+0x12d2>
		_delay_ms(__us / 1000.0);
    24a4:	20 e0       	ldi	r18, 0x00	; 0
    24a6:	30 e0       	ldi	r19, 0x00	; 0
    24a8:	4a e7       	ldi	r20, 0x7A	; 122
    24aa:	54 e4       	ldi	r21, 0x44	; 68
    24ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    24ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    24b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    24b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    24b4:	0e 94 9c 13 	call	0x2738	; 0x2738 <__divsf3>
    24b8:	c2 5b       	subi	r28, 0xB2	; 178
    24ba:	de 4f       	sbci	r29, 0xFE	; 254
    24bc:	68 83       	st	Y, r22
    24be:	79 83       	std	Y+1, r23	; 0x01
    24c0:	8a 83       	std	Y+2, r24	; 0x02
    24c2:	9b 83       	std	Y+3, r25	; 0x03
    24c4:	ce 54       	subi	r28, 0x4E	; 78
    24c6:	d1 40       	sbci	r29, 0x01	; 1
    24c8:	c2 5b       	subi	r28, 0xB2	; 178
    24ca:	de 4f       	sbci	r29, 0xFE	; 254
    24cc:	88 81       	ld	r24, Y
    24ce:	99 81       	ldd	r25, Y+1	; 0x01
    24d0:	aa 81       	ldd	r26, Y+2	; 0x02
    24d2:	bb 81       	ldd	r27, Y+3	; 0x03
    24d4:	ce 54       	subi	r28, 0x4E	; 78
    24d6:	d1 40       	sbci	r29, 0x01	; 1
    24d8:	89 83       	std	Y+1, r24	; 0x01
    24da:	9a 83       	std	Y+2, r25	; 0x02
    24dc:	ab 83       	std	Y+3, r26	; 0x03
    24de:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 4e3) * __ms;
    24e0:	20 e0       	ldi	r18, 0x00	; 0
    24e2:	30 e0       	ldi	r19, 0x00	; 0
    24e4:	4a e7       	ldi	r20, 0x7A	; 122
    24e6:	55 e4       	ldi	r21, 0x45	; 69
    24e8:	69 81       	ldd	r22, Y+1	; 0x01
    24ea:	7a 81       	ldd	r23, Y+2	; 0x02
    24ec:	8b 81       	ldd	r24, Y+3	; 0x03
    24ee:	9c 81       	ldd	r25, Y+4	; 0x04
    24f0:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    24f4:	ce 5a       	subi	r28, 0xAE	; 174
    24f6:	de 4f       	sbci	r29, 0xFE	; 254
    24f8:	68 83       	st	Y, r22
    24fa:	79 83       	std	Y+1, r23	; 0x01
    24fc:	8a 83       	std	Y+2, r24	; 0x02
    24fe:	9b 83       	std	Y+3, r25	; 0x03
    2500:	c2 55       	subi	r28, 0x52	; 82
    2502:	d1 40       	sbci	r29, 0x01	; 1
    2504:	ce 5a       	subi	r28, 0xAE	; 174
    2506:	de 4f       	sbci	r29, 0xFE	; 254
    2508:	88 81       	ld	r24, Y
    250a:	99 81       	ldd	r25, Y+1	; 0x01
    250c:	aa 81       	ldd	r26, Y+2	; 0x02
    250e:	bb 81       	ldd	r27, Y+3	; 0x03
    2510:	c2 55       	subi	r28, 0x52	; 82
    2512:	d1 40       	sbci	r29, 0x01	; 1
    2514:	8d 83       	std	Y+5, r24	; 0x05
    2516:	9e 83       	std	Y+6, r25	; 0x06
    2518:	af 83       	std	Y+7, r26	; 0x07
    251a:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    251c:	20 e0       	ldi	r18, 0x00	; 0
    251e:	30 e0       	ldi	r19, 0x00	; 0
    2520:	40 e8       	ldi	r20, 0x80	; 128
    2522:	5f e3       	ldi	r21, 0x3F	; 63
    2524:	6d 81       	ldd	r22, Y+5	; 0x05
    2526:	7e 81       	ldd	r23, Y+6	; 0x06
    2528:	8f 81       	ldd	r24, Y+7	; 0x07
    252a:	98 85       	ldd	r25, Y+8	; 0x08
    252c:	0e 94 97 13 	call	0x272e	; 0x272e <__cmpsf2>
    2530:	88 23       	and	r24, r24
    2532:	2c f4       	brge	.+10     	; 0x253e <lcd_init+0x11d2>
		__ticks = 1;
    2534:	81 e0       	ldi	r24, 0x01	; 1
    2536:	90 e0       	ldi	r25, 0x00	; 0
    2538:	9a 87       	std	Y+10, r25	; 0x0a
    253a:	89 87       	std	Y+9, r24	; 0x09
    253c:	75 c0       	rjmp	.+234    	; 0x2628 <lcd_init+0x12bc>
	else if (__tmp > 65535)
    253e:	20 e0       	ldi	r18, 0x00	; 0
    2540:	3f ef       	ldi	r19, 0xFF	; 255
    2542:	4f e7       	ldi	r20, 0x7F	; 127
    2544:	57 e4       	ldi	r21, 0x47	; 71
    2546:	6d 81       	ldd	r22, Y+5	; 0x05
    2548:	7e 81       	ldd	r23, Y+6	; 0x06
    254a:	8f 81       	ldd	r24, Y+7	; 0x07
    254c:	98 85       	ldd	r25, Y+8	; 0x08
    254e:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    2552:	18 16       	cp	r1, r24
    2554:	0c f0       	brlt	.+2      	; 0x2558 <lcd_init+0x11ec>
    2556:	52 c0       	rjmp	.+164    	; 0x25fc <lcd_init+0x1290>
		__ticks = (uint16_t) (__ms * 10.0);
    2558:	20 e0       	ldi	r18, 0x00	; 0
    255a:	30 e0       	ldi	r19, 0x00	; 0
    255c:	40 e2       	ldi	r20, 0x20	; 32
    255e:	51 e4       	ldi	r21, 0x41	; 65
    2560:	69 81       	ldd	r22, Y+1	; 0x01
    2562:	7a 81       	ldd	r23, Y+2	; 0x02
    2564:	8b 81       	ldd	r24, Y+3	; 0x03
    2566:	9c 81       	ldd	r25, Y+4	; 0x04
    2568:	0e 94 b7 14 	call	0x296e	; 0x296e <__mulsf3>
    256c:	ca 5a       	subi	r28, 0xAA	; 170
    256e:	de 4f       	sbci	r29, 0xFE	; 254
    2570:	68 83       	st	Y, r22
    2572:	79 83       	std	Y+1, r23	; 0x01
    2574:	8a 83       	std	Y+2, r24	; 0x02
    2576:	9b 83       	std	Y+3, r25	; 0x03
    2578:	c6 55       	subi	r28, 0x56	; 86
    257a:	d1 40       	sbci	r29, 0x01	; 1
    257c:	ca 5a       	subi	r28, 0xAA	; 170
    257e:	de 4f       	sbci	r29, 0xFE	; 254
    2580:	88 81       	ld	r24, Y
    2582:	99 81       	ldd	r25, Y+1	; 0x01
    2584:	aa 81       	ldd	r26, Y+2	; 0x02
    2586:	bb 81       	ldd	r27, Y+3	; 0x03
    2588:	c6 55       	subi	r28, 0x56	; 86
    258a:	d1 40       	sbci	r29, 0x01	; 1
    258c:	ce 55       	subi	r28, 0x5E	; 94
    258e:	df 4f       	sbci	r29, 0xFF	; 255
    2590:	88 83       	st	Y, r24
    2592:	99 83       	std	Y+1, r25	; 0x01
    2594:	aa 83       	std	Y+2, r26	; 0x02
    2596:	bb 83       	std	Y+3, r27	; 0x03
    2598:	c2 5a       	subi	r28, 0xA2	; 162
    259a:	d0 40       	sbci	r29, 0x00	; 0
    259c:	ce 55       	subi	r28, 0x5E	; 94
    259e:	df 4f       	sbci	r29, 0xFF	; 255
    25a0:	68 81       	ld	r22, Y
    25a2:	79 81       	ldd	r23, Y+1	; 0x01
    25a4:	8a 81       	ldd	r24, Y+2	; 0x02
    25a6:	9b 81       	ldd	r25, Y+3	; 0x03
    25a8:	c2 5a       	subi	r28, 0xA2	; 162
    25aa:	d0 40       	sbci	r29, 0x00	; 0
    25ac:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    25b0:	c6 5a       	subi	r28, 0xA6	; 166
    25b2:	de 4f       	sbci	r29, 0xFE	; 254
    25b4:	68 83       	st	Y, r22
    25b6:	79 83       	std	Y+1, r23	; 0x01
    25b8:	8a 83       	std	Y+2, r24	; 0x02
    25ba:	9b 83       	std	Y+3, r25	; 0x03
    25bc:	ca 55       	subi	r28, 0x5A	; 90
    25be:	d1 40       	sbci	r29, 0x01	; 1
    25c0:	c6 5a       	subi	r28, 0xA6	; 166
    25c2:	de 4f       	sbci	r29, 0xFE	; 254
    25c4:	a8 81       	ld	r26, Y
    25c6:	b9 81       	ldd	r27, Y+1	; 0x01
    25c8:	ca 55       	subi	r28, 0x5A	; 90
    25ca:	d1 40       	sbci	r29, 0x01	; 1
    25cc:	ba 87       	std	Y+10, r27	; 0x0a
    25ce:	a9 87       	std	Y+9, r26	; 0x09
		while(__ticks)
    25d0:	10 c0       	rjmp	.+32     	; 0x25f2 <lcd_init+0x1286>
    25d2:	80 e9       	ldi	r24, 0x90	; 144
    25d4:	91 e0       	ldi	r25, 0x01	; 1
    25d6:	99 8f       	std	Y+25, r25	; 0x19
    25d8:	88 8f       	std	Y+24, r24	; 0x18
	__asm__ volatile (
    25da:	88 8d       	ldd	r24, Y+24	; 0x18
    25dc:	99 8d       	ldd	r25, Y+25	; 0x19
    25de:	01 97       	sbiw	r24, 0x01	; 1
    25e0:	f1 f7       	brne	.-4      	; 0x25de <lcd_init+0x1272>
    25e2:	99 8f       	std	Y+25, r25	; 0x19
    25e4:	88 8f       	std	Y+24, r24	; 0x18
}
    25e6:	00 00       	nop
			__ticks --;
    25e8:	89 85       	ldd	r24, Y+9	; 0x09
    25ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    25ec:	01 97       	sbiw	r24, 0x01	; 1
    25ee:	9a 87       	std	Y+10, r25	; 0x0a
    25f0:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
    25f2:	89 85       	ldd	r24, Y+9	; 0x09
    25f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    25f6:	89 2b       	or	r24, r25
    25f8:	61 f7       	brne	.-40     	; 0x25d2 <lcd_init+0x1266>
		return;
    25fa:	63 c0       	rjmp	.+198    	; 0x26c2 <lcd_init+0x1356>
		__ticks = (uint16_t)__tmp;
    25fc:	6d 81       	ldd	r22, Y+5	; 0x05
    25fe:	7e 81       	ldd	r23, Y+6	; 0x06
    2600:	8f 81       	ldd	r24, Y+7	; 0x07
    2602:	98 85       	ldd	r25, Y+8	; 0x08
    2604:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    2608:	c2 5a       	subi	r28, 0xA2	; 162
    260a:	de 4f       	sbci	r29, 0xFE	; 254
    260c:	68 83       	st	Y, r22
    260e:	79 83       	std	Y+1, r23	; 0x01
    2610:	8a 83       	std	Y+2, r24	; 0x02
    2612:	9b 83       	std	Y+3, r25	; 0x03
    2614:	ce 55       	subi	r28, 0x5E	; 94
    2616:	d1 40       	sbci	r29, 0x01	; 1
    2618:	c2 5a       	subi	r28, 0xA2	; 162
    261a:	de 4f       	sbci	r29, 0xFE	; 254
    261c:	e8 81       	ld	r30, Y
    261e:	f9 81       	ldd	r31, Y+1	; 0x01
    2620:	ce 55       	subi	r28, 0x5E	; 94
    2622:	d1 40       	sbci	r29, 0x01	; 1
    2624:	fa 87       	std	Y+10, r31	; 0x0a
    2626:	e9 87       	std	Y+9, r30	; 0x09
    2628:	89 85       	ldd	r24, Y+9	; 0x09
    262a:	9a 85       	ldd	r25, Y+10	; 0x0a
    262c:	9b 8f       	std	Y+27, r25	; 0x1b
    262e:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
    2630:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2632:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2634:	01 97       	sbiw	r24, 0x01	; 1
    2636:	f1 f7       	brne	.-4      	; 0x2634 <lcd_init+0x12c8>
    2638:	9b 8f       	std	Y+27, r25	; 0x1b
    263a:	8a 8f       	std	Y+26, r24	; 0x1a
}
    263c:	42 c0       	rjmp	.+132    	; 0x26c2 <lcd_init+0x1356>
	else if (__tmp > 255)
    263e:	20 e0       	ldi	r18, 0x00	; 0
    2640:	30 e0       	ldi	r19, 0x00	; 0
    2642:	4f e7       	ldi	r20, 0x7F	; 127
    2644:	53 e4       	ldi	r21, 0x43	; 67
    2646:	6f 85       	ldd	r22, Y+15	; 0x0f
    2648:	78 89       	ldd	r23, Y+16	; 0x10
    264a:	89 89       	ldd	r24, Y+17	; 0x11
    264c:	9a 89       	ldd	r25, Y+18	; 0x12
    264e:	0e 94 b2 14 	call	0x2964	; 0x2964 <__gesf2>
    2652:	18 16       	cp	r1, r24
    2654:	14 f5       	brge	.+68     	; 0x269a <lcd_init+0x132e>
		uint16_t __ticks=(uint16_t)__tmp2;
    2656:	6b 89       	ldd	r22, Y+19	; 0x13
    2658:	7c 89       	ldd	r23, Y+20	; 0x14
    265a:	8d 89       	ldd	r24, Y+21	; 0x15
    265c:	9e 89       	ldd	r25, Y+22	; 0x16
    265e:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    2662:	ce 59       	subi	r28, 0x9E	; 158
    2664:	de 4f       	sbci	r29, 0xFE	; 254
    2666:	68 83       	st	Y, r22
    2668:	79 83       	std	Y+1, r23	; 0x01
    266a:	8a 83       	std	Y+2, r24	; 0x02
    266c:	9b 83       	std	Y+3, r25	; 0x03
    266e:	c2 56       	subi	r28, 0x62	; 98
    2670:	d1 40       	sbci	r29, 0x01	; 1
    2672:	ce 59       	subi	r28, 0x9E	; 158
    2674:	de 4f       	sbci	r29, 0xFE	; 254
    2676:	88 81       	ld	r24, Y
    2678:	99 81       	ldd	r25, Y+1	; 0x01
    267a:	c2 56       	subi	r28, 0x62	; 98
    267c:	d1 40       	sbci	r29, 0x01	; 1
    267e:	9d 8f       	std	Y+29, r25	; 0x1d
    2680:	8c 8f       	std	Y+28, r24	; 0x1c
    2682:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2684:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2686:	9f 8f       	std	Y+31, r25	; 0x1f
    2688:	8e 8f       	std	Y+30, r24	; 0x1e
	__asm__ volatile (
    268a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    268c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    268e:	01 97       	sbiw	r24, 0x01	; 1
    2690:	f1 f7       	brne	.-4      	; 0x268e <lcd_init+0x1322>
    2692:	9f 8f       	std	Y+31, r25	; 0x1f
    2694:	8e 8f       	std	Y+30, r24	; 0x1e
}
    2696:	00 00       	nop
		return;
    2698:	1b c0       	rjmp	.+54     	; 0x26d0 <lcd_init+0x1364>
		__ticks = (uint8_t)__tmp;
    269a:	6f 85       	ldd	r22, Y+15	; 0x0f
    269c:	78 89       	ldd	r23, Y+16	; 0x10
    269e:	89 89       	ldd	r24, Y+17	; 0x11
    26a0:	9a 89       	ldd	r25, Y+18	; 0x12
    26a2:	0e 94 0e 14 	call	0x281c	; 0x281c <__fixunssfsi>
    26a6:	ca 59       	subi	r28, 0x9A	; 154
    26a8:	de 4f       	sbci	r29, 0xFE	; 254
    26aa:	68 83       	st	Y, r22
    26ac:	79 83       	std	Y+1, r23	; 0x01
    26ae:	8a 83       	std	Y+2, r24	; 0x02
    26b0:	9b 83       	std	Y+3, r25	; 0x03
    26b2:	c6 56       	subi	r28, 0x66	; 102
    26b4:	d1 40       	sbci	r29, 0x01	; 1
    26b6:	ca 59       	subi	r28, 0x9A	; 154
    26b8:	de 4f       	sbci	r29, 0xFE	; 254
    26ba:	98 81       	ld	r25, Y
    26bc:	c6 56       	subi	r28, 0x66	; 102
    26be:	d1 40       	sbci	r29, 0x01	; 1
    26c0:	9f 8b       	std	Y+23, r25	; 0x17
    26c2:	8f 89       	ldd	r24, Y+23	; 0x17
    26c4:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
    26c6:	88 a1       	ldd	r24, Y+32	; 0x20
    26c8:	8a 95       	dec	r24
    26ca:	f1 f7       	brne	.-4      	; 0x26c8 <lcd_init+0x135c>
    26cc:	88 a3       	std	Y+32, r24	; 0x20
}
    26ce:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
    26d0:	88 e2       	ldi	r24, 0x28	; 40
    26d2:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
    26d6:	88 e0       	ldi	r24, 0x08	; 8
    26d8:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
    26dc:	0e 94 3c 09 	call	0x1278	; 0x1278 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
    26e0:	86 e0       	ldi	r24, 0x06	; 6
    26e2:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
    26e6:	ce 01       	movw	r24, r28
    26e8:	8f 55       	subi	r24, 0x5F	; 95
    26ea:	9f 4f       	sbci	r25, 0xFF	; 255
    26ec:	dc 01       	movw	r26, r24
    26ee:	8c 91       	ld	r24, X
    26f0:	0e 94 f6 08 	call	0x11ec	; 0x11ec <lcd_command>

}/* lcd_init */
    26f4:	00 00       	nop
    26f6:	c7 59       	subi	r28, 0x97	; 151
    26f8:	de 4f       	sbci	r29, 0xFE	; 254
    26fa:	0f b6       	in	r0, 0x3f	; 63
    26fc:	f8 94       	cli
    26fe:	de bf       	out	0x3e, r29	; 62
    2700:	0f be       	out	0x3f, r0	; 63
    2702:	cd bf       	out	0x3d, r28	; 61
    2704:	df 91       	pop	r29
    2706:	cf 91       	pop	r28
    2708:	1f 91       	pop	r17
    270a:	0f 91       	pop	r16
    270c:	08 95       	ret

0000270e <main>:
 */
#include "lcd.h"
#include <avr/io.h>
#include <util/delay.h>
int main(void)
{
    270e:	cf 93       	push	r28
    2710:	df 93       	push	r29
    2712:	cd b7       	in	r28, 0x3d	; 61
    2714:	de b7       	in	r29, 0x3e	; 62

    lcd_init(LCD_DISP_ON);
    2716:	8c e0       	ldi	r24, 0x0C	; 12
    2718:	0e 94 b6 09 	call	0x136c	; 0x136c <lcd_init>
    lcd_clrscr();
    271c:	0e 94 3c 09 	call	0x1278	; 0x1278 <lcd_clrscr>
    while(1)
    {
        lcd_clrscr();
    2720:	0e 94 3c 09 	call	0x1278	; 0x1278 <lcd_clrscr>
        lcd_puts("1");
    2724:	80 e0       	ldi	r24, 0x00	; 0
    2726:	91 e0       	ldi	r25, 0x01	; 1
    2728:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <lcd_puts>
        lcd_clrscr();
    272c:	f9 cf       	rjmp	.-14     	; 0x2720 <main+0x12>

0000272e <__cmpsf2>:
    272e:	0e 94 3d 14 	call	0x287a	; 0x287a <__fp_cmp>
    2732:	08 f4       	brcc	.+2      	; 0x2736 <__cmpsf2+0x8>
    2734:	81 e0       	ldi	r24, 0x01	; 1
    2736:	08 95       	ret

00002738 <__divsf3>:
    2738:	0e 94 b0 13 	call	0x2760	; 0x2760 <__divsf3x>
    273c:	0c 94 78 14 	jmp	0x28f0	; 0x28f0 <__fp_round>
    2740:	0e 94 71 14 	call	0x28e2	; 0x28e2 <__fp_pscB>
    2744:	58 f0       	brcs	.+22     	; 0x275c <__divsf3+0x24>
    2746:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <__fp_pscA>
    274a:	40 f0       	brcs	.+16     	; 0x275c <__divsf3+0x24>
    274c:	29 f4       	brne	.+10     	; 0x2758 <__divsf3+0x20>
    274e:	5f 3f       	cpi	r21, 0xFF	; 255
    2750:	29 f0       	breq	.+10     	; 0x275c <__divsf3+0x24>
    2752:	0c 94 61 14 	jmp	0x28c2	; 0x28c2 <__fp_inf>
    2756:	51 11       	cpse	r21, r1
    2758:	0c 94 ac 14 	jmp	0x2958	; 0x2958 <__fp_szero>
    275c:	0c 94 67 14 	jmp	0x28ce	; 0x28ce <__fp_nan>

00002760 <__divsf3x>:
    2760:	0e 94 89 14 	call	0x2912	; 0x2912 <__fp_split3>
    2764:	68 f3       	brcs	.-38     	; 0x2740 <__divsf3+0x8>

00002766 <__divsf3_pse>:
    2766:	99 23       	and	r25, r25
    2768:	b1 f3       	breq	.-20     	; 0x2756 <__divsf3+0x1e>
    276a:	55 23       	and	r21, r21
    276c:	91 f3       	breq	.-28     	; 0x2752 <__divsf3+0x1a>
    276e:	95 1b       	sub	r25, r21
    2770:	55 0b       	sbc	r21, r21
    2772:	bb 27       	eor	r27, r27
    2774:	aa 27       	eor	r26, r26
    2776:	62 17       	cp	r22, r18
    2778:	73 07       	cpc	r23, r19
    277a:	84 07       	cpc	r24, r20
    277c:	38 f0       	brcs	.+14     	; 0x278c <__divsf3_pse+0x26>
    277e:	9f 5f       	subi	r25, 0xFF	; 255
    2780:	5f 4f       	sbci	r21, 0xFF	; 255
    2782:	22 0f       	add	r18, r18
    2784:	33 1f       	adc	r19, r19
    2786:	44 1f       	adc	r20, r20
    2788:	aa 1f       	adc	r26, r26
    278a:	a9 f3       	breq	.-22     	; 0x2776 <__divsf3_pse+0x10>
    278c:	35 d0       	rcall	.+106    	; 0x27f8 <__divsf3_pse+0x92>
    278e:	0e 2e       	mov	r0, r30
    2790:	3a f0       	brmi	.+14     	; 0x27a0 <__divsf3_pse+0x3a>
    2792:	e0 e8       	ldi	r30, 0x80	; 128
    2794:	32 d0       	rcall	.+100    	; 0x27fa <__divsf3_pse+0x94>
    2796:	91 50       	subi	r25, 0x01	; 1
    2798:	50 40       	sbci	r21, 0x00	; 0
    279a:	e6 95       	lsr	r30
    279c:	00 1c       	adc	r0, r0
    279e:	ca f7       	brpl	.-14     	; 0x2792 <__divsf3_pse+0x2c>
    27a0:	2b d0       	rcall	.+86     	; 0x27f8 <__divsf3_pse+0x92>
    27a2:	fe 2f       	mov	r31, r30
    27a4:	29 d0       	rcall	.+82     	; 0x27f8 <__divsf3_pse+0x92>
    27a6:	66 0f       	add	r22, r22
    27a8:	77 1f       	adc	r23, r23
    27aa:	88 1f       	adc	r24, r24
    27ac:	bb 1f       	adc	r27, r27
    27ae:	26 17       	cp	r18, r22
    27b0:	37 07       	cpc	r19, r23
    27b2:	48 07       	cpc	r20, r24
    27b4:	ab 07       	cpc	r26, r27
    27b6:	b0 e8       	ldi	r27, 0x80	; 128
    27b8:	09 f0       	breq	.+2      	; 0x27bc <__divsf3_pse+0x56>
    27ba:	bb 0b       	sbc	r27, r27
    27bc:	80 2d       	mov	r24, r0
    27be:	bf 01       	movw	r22, r30
    27c0:	ff 27       	eor	r31, r31
    27c2:	93 58       	subi	r25, 0x83	; 131
    27c4:	5f 4f       	sbci	r21, 0xFF	; 255
    27c6:	3a f0       	brmi	.+14     	; 0x27d6 <__divsf3_pse+0x70>
    27c8:	9e 3f       	cpi	r25, 0xFE	; 254
    27ca:	51 05       	cpc	r21, r1
    27cc:	78 f0       	brcs	.+30     	; 0x27ec <__divsf3_pse+0x86>
    27ce:	0c 94 61 14 	jmp	0x28c2	; 0x28c2 <__fp_inf>
    27d2:	0c 94 ac 14 	jmp	0x2958	; 0x2958 <__fp_szero>
    27d6:	5f 3f       	cpi	r21, 0xFF	; 255
    27d8:	e4 f3       	brlt	.-8      	; 0x27d2 <__divsf3_pse+0x6c>
    27da:	98 3e       	cpi	r25, 0xE8	; 232
    27dc:	d4 f3       	brlt	.-12     	; 0x27d2 <__divsf3_pse+0x6c>
    27de:	86 95       	lsr	r24
    27e0:	77 95       	ror	r23
    27e2:	67 95       	ror	r22
    27e4:	b7 95       	ror	r27
    27e6:	f7 95       	ror	r31
    27e8:	9f 5f       	subi	r25, 0xFF	; 255
    27ea:	c9 f7       	brne	.-14     	; 0x27de <__divsf3_pse+0x78>
    27ec:	88 0f       	add	r24, r24
    27ee:	91 1d       	adc	r25, r1
    27f0:	96 95       	lsr	r25
    27f2:	87 95       	ror	r24
    27f4:	97 f9       	bld	r25, 7
    27f6:	08 95       	ret
    27f8:	e1 e0       	ldi	r30, 0x01	; 1
    27fa:	66 0f       	add	r22, r22
    27fc:	77 1f       	adc	r23, r23
    27fe:	88 1f       	adc	r24, r24
    2800:	bb 1f       	adc	r27, r27
    2802:	62 17       	cp	r22, r18
    2804:	73 07       	cpc	r23, r19
    2806:	84 07       	cpc	r24, r20
    2808:	ba 07       	cpc	r27, r26
    280a:	20 f0       	brcs	.+8      	; 0x2814 <__divsf3_pse+0xae>
    280c:	62 1b       	sub	r22, r18
    280e:	73 0b       	sbc	r23, r19
    2810:	84 0b       	sbc	r24, r20
    2812:	ba 0b       	sbc	r27, r26
    2814:	ee 1f       	adc	r30, r30
    2816:	88 f7       	brcc	.-30     	; 0x27fa <__divsf3_pse+0x94>
    2818:	e0 95       	com	r30
    281a:	08 95       	ret

0000281c <__fixunssfsi>:
    281c:	0e 94 91 14 	call	0x2922	; 0x2922 <__fp_splitA>
    2820:	88 f0       	brcs	.+34     	; 0x2844 <__fixunssfsi+0x28>
    2822:	9f 57       	subi	r25, 0x7F	; 127
    2824:	98 f0       	brcs	.+38     	; 0x284c <__fixunssfsi+0x30>
    2826:	b9 2f       	mov	r27, r25
    2828:	99 27       	eor	r25, r25
    282a:	b7 51       	subi	r27, 0x17	; 23
    282c:	b0 f0       	brcs	.+44     	; 0x285a <__fixunssfsi+0x3e>
    282e:	e1 f0       	breq	.+56     	; 0x2868 <__fixunssfsi+0x4c>
    2830:	66 0f       	add	r22, r22
    2832:	77 1f       	adc	r23, r23
    2834:	88 1f       	adc	r24, r24
    2836:	99 1f       	adc	r25, r25
    2838:	1a f0       	brmi	.+6      	; 0x2840 <__fixunssfsi+0x24>
    283a:	ba 95       	dec	r27
    283c:	c9 f7       	brne	.-14     	; 0x2830 <__fixunssfsi+0x14>
    283e:	14 c0       	rjmp	.+40     	; 0x2868 <__fixunssfsi+0x4c>
    2840:	b1 30       	cpi	r27, 0x01	; 1
    2842:	91 f0       	breq	.+36     	; 0x2868 <__fixunssfsi+0x4c>
    2844:	0e 94 ab 14 	call	0x2956	; 0x2956 <__fp_zero>
    2848:	b1 e0       	ldi	r27, 0x01	; 1
    284a:	08 95       	ret
    284c:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__fp_zero>
    2850:	67 2f       	mov	r22, r23
    2852:	78 2f       	mov	r23, r24
    2854:	88 27       	eor	r24, r24
    2856:	b8 5f       	subi	r27, 0xF8	; 248
    2858:	39 f0       	breq	.+14     	; 0x2868 <__fixunssfsi+0x4c>
    285a:	b9 3f       	cpi	r27, 0xF9	; 249
    285c:	cc f3       	brlt	.-14     	; 0x2850 <__fixunssfsi+0x34>
    285e:	86 95       	lsr	r24
    2860:	77 95       	ror	r23
    2862:	67 95       	ror	r22
    2864:	b3 95       	inc	r27
    2866:	d9 f7       	brne	.-10     	; 0x285e <__fixunssfsi+0x42>
    2868:	3e f4       	brtc	.+14     	; 0x2878 <__fixunssfsi+0x5c>
    286a:	90 95       	com	r25
    286c:	80 95       	com	r24
    286e:	70 95       	com	r23
    2870:	61 95       	neg	r22
    2872:	7f 4f       	sbci	r23, 0xFF	; 255
    2874:	8f 4f       	sbci	r24, 0xFF	; 255
    2876:	9f 4f       	sbci	r25, 0xFF	; 255
    2878:	08 95       	ret

0000287a <__fp_cmp>:
    287a:	99 0f       	add	r25, r25
    287c:	00 08       	sbc	r0, r0
    287e:	55 0f       	add	r21, r21
    2880:	aa 0b       	sbc	r26, r26
    2882:	e0 e8       	ldi	r30, 0x80	; 128
    2884:	fe ef       	ldi	r31, 0xFE	; 254
    2886:	16 16       	cp	r1, r22
    2888:	17 06       	cpc	r1, r23
    288a:	e8 07       	cpc	r30, r24
    288c:	f9 07       	cpc	r31, r25
    288e:	c0 f0       	brcs	.+48     	; 0x28c0 <__fp_cmp+0x46>
    2890:	12 16       	cp	r1, r18
    2892:	13 06       	cpc	r1, r19
    2894:	e4 07       	cpc	r30, r20
    2896:	f5 07       	cpc	r31, r21
    2898:	98 f0       	brcs	.+38     	; 0x28c0 <__fp_cmp+0x46>
    289a:	62 1b       	sub	r22, r18
    289c:	73 0b       	sbc	r23, r19
    289e:	84 0b       	sbc	r24, r20
    28a0:	95 0b       	sbc	r25, r21
    28a2:	39 f4       	brne	.+14     	; 0x28b2 <__fp_cmp+0x38>
    28a4:	0a 26       	eor	r0, r26
    28a6:	61 f0       	breq	.+24     	; 0x28c0 <__fp_cmp+0x46>
    28a8:	23 2b       	or	r18, r19
    28aa:	24 2b       	or	r18, r20
    28ac:	25 2b       	or	r18, r21
    28ae:	21 f4       	brne	.+8      	; 0x28b8 <__fp_cmp+0x3e>
    28b0:	08 95       	ret
    28b2:	0a 26       	eor	r0, r26
    28b4:	09 f4       	brne	.+2      	; 0x28b8 <__fp_cmp+0x3e>
    28b6:	a1 40       	sbci	r26, 0x01	; 1
    28b8:	a6 95       	lsr	r26
    28ba:	8f ef       	ldi	r24, 0xFF	; 255
    28bc:	81 1d       	adc	r24, r1
    28be:	81 1d       	adc	r24, r1
    28c0:	08 95       	ret

000028c2 <__fp_inf>:
    28c2:	97 f9       	bld	r25, 7
    28c4:	9f 67       	ori	r25, 0x7F	; 127
    28c6:	80 e8       	ldi	r24, 0x80	; 128
    28c8:	70 e0       	ldi	r23, 0x00	; 0
    28ca:	60 e0       	ldi	r22, 0x00	; 0
    28cc:	08 95       	ret

000028ce <__fp_nan>:
    28ce:	9f ef       	ldi	r25, 0xFF	; 255
    28d0:	80 ec       	ldi	r24, 0xC0	; 192
    28d2:	08 95       	ret

000028d4 <__fp_pscA>:
    28d4:	00 24       	eor	r0, r0
    28d6:	0a 94       	dec	r0
    28d8:	16 16       	cp	r1, r22
    28da:	17 06       	cpc	r1, r23
    28dc:	18 06       	cpc	r1, r24
    28de:	09 06       	cpc	r0, r25
    28e0:	08 95       	ret

000028e2 <__fp_pscB>:
    28e2:	00 24       	eor	r0, r0
    28e4:	0a 94       	dec	r0
    28e6:	12 16       	cp	r1, r18
    28e8:	13 06       	cpc	r1, r19
    28ea:	14 06       	cpc	r1, r20
    28ec:	05 06       	cpc	r0, r21
    28ee:	08 95       	ret

000028f0 <__fp_round>:
    28f0:	09 2e       	mov	r0, r25
    28f2:	03 94       	inc	r0
    28f4:	00 0c       	add	r0, r0
    28f6:	11 f4       	brne	.+4      	; 0x28fc <__fp_round+0xc>
    28f8:	88 23       	and	r24, r24
    28fa:	52 f0       	brmi	.+20     	; 0x2910 <__fp_round+0x20>
    28fc:	bb 0f       	add	r27, r27
    28fe:	40 f4       	brcc	.+16     	; 0x2910 <__fp_round+0x20>
    2900:	bf 2b       	or	r27, r31
    2902:	11 f4       	brne	.+4      	; 0x2908 <__fp_round+0x18>
    2904:	60 ff       	sbrs	r22, 0
    2906:	04 c0       	rjmp	.+8      	; 0x2910 <__fp_round+0x20>
    2908:	6f 5f       	subi	r22, 0xFF	; 255
    290a:	7f 4f       	sbci	r23, 0xFF	; 255
    290c:	8f 4f       	sbci	r24, 0xFF	; 255
    290e:	9f 4f       	sbci	r25, 0xFF	; 255
    2910:	08 95       	ret

00002912 <__fp_split3>:
    2912:	57 fd       	sbrc	r21, 7
    2914:	90 58       	subi	r25, 0x80	; 128
    2916:	44 0f       	add	r20, r20
    2918:	55 1f       	adc	r21, r21
    291a:	59 f0       	breq	.+22     	; 0x2932 <__fp_splitA+0x10>
    291c:	5f 3f       	cpi	r21, 0xFF	; 255
    291e:	71 f0       	breq	.+28     	; 0x293c <__fp_splitA+0x1a>
    2920:	47 95       	ror	r20

00002922 <__fp_splitA>:
    2922:	88 0f       	add	r24, r24
    2924:	97 fb       	bst	r25, 7
    2926:	99 1f       	adc	r25, r25
    2928:	61 f0       	breq	.+24     	; 0x2942 <__fp_splitA+0x20>
    292a:	9f 3f       	cpi	r25, 0xFF	; 255
    292c:	79 f0       	breq	.+30     	; 0x294c <__fp_splitA+0x2a>
    292e:	87 95       	ror	r24
    2930:	08 95       	ret
    2932:	12 16       	cp	r1, r18
    2934:	13 06       	cpc	r1, r19
    2936:	14 06       	cpc	r1, r20
    2938:	55 1f       	adc	r21, r21
    293a:	f2 cf       	rjmp	.-28     	; 0x2920 <__fp_split3+0xe>
    293c:	46 95       	lsr	r20
    293e:	f1 df       	rcall	.-30     	; 0x2922 <__fp_splitA>
    2940:	08 c0       	rjmp	.+16     	; 0x2952 <__fp_splitA+0x30>
    2942:	16 16       	cp	r1, r22
    2944:	17 06       	cpc	r1, r23
    2946:	18 06       	cpc	r1, r24
    2948:	99 1f       	adc	r25, r25
    294a:	f1 cf       	rjmp	.-30     	; 0x292e <__fp_splitA+0xc>
    294c:	86 95       	lsr	r24
    294e:	71 05       	cpc	r23, r1
    2950:	61 05       	cpc	r22, r1
    2952:	08 94       	sec
    2954:	08 95       	ret

00002956 <__fp_zero>:
    2956:	e8 94       	clt

00002958 <__fp_szero>:
    2958:	bb 27       	eor	r27, r27
    295a:	66 27       	eor	r22, r22
    295c:	77 27       	eor	r23, r23
    295e:	cb 01       	movw	r24, r22
    2960:	97 f9       	bld	r25, 7
    2962:	08 95       	ret

00002964 <__gesf2>:
    2964:	0e 94 3d 14 	call	0x287a	; 0x287a <__fp_cmp>
    2968:	08 f4       	brcc	.+2      	; 0x296c <__gesf2+0x8>
    296a:	8f ef       	ldi	r24, 0xFF	; 255
    296c:	08 95       	ret

0000296e <__mulsf3>:
    296e:	0e 94 ca 14 	call	0x2994	; 0x2994 <__mulsf3x>
    2972:	0c 94 78 14 	jmp	0x28f0	; 0x28f0 <__fp_round>
    2976:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <__fp_pscA>
    297a:	38 f0       	brcs	.+14     	; 0x298a <__mulsf3+0x1c>
    297c:	0e 94 71 14 	call	0x28e2	; 0x28e2 <__fp_pscB>
    2980:	20 f0       	brcs	.+8      	; 0x298a <__mulsf3+0x1c>
    2982:	95 23       	and	r25, r21
    2984:	11 f0       	breq	.+4      	; 0x298a <__mulsf3+0x1c>
    2986:	0c 94 61 14 	jmp	0x28c2	; 0x28c2 <__fp_inf>
    298a:	0c 94 67 14 	jmp	0x28ce	; 0x28ce <__fp_nan>
    298e:	11 24       	eor	r1, r1
    2990:	0c 94 ac 14 	jmp	0x2958	; 0x2958 <__fp_szero>

00002994 <__mulsf3x>:
    2994:	0e 94 89 14 	call	0x2912	; 0x2912 <__fp_split3>
    2998:	70 f3       	brcs	.-36     	; 0x2976 <__mulsf3+0x8>

0000299a <__mulsf3_pse>:
    299a:	95 9f       	mul	r25, r21
    299c:	c1 f3       	breq	.-16     	; 0x298e <__mulsf3+0x20>
    299e:	95 0f       	add	r25, r21
    29a0:	50 e0       	ldi	r21, 0x00	; 0
    29a2:	55 1f       	adc	r21, r21
    29a4:	62 9f       	mul	r22, r18
    29a6:	f0 01       	movw	r30, r0
    29a8:	72 9f       	mul	r23, r18
    29aa:	bb 27       	eor	r27, r27
    29ac:	f0 0d       	add	r31, r0
    29ae:	b1 1d       	adc	r27, r1
    29b0:	63 9f       	mul	r22, r19
    29b2:	aa 27       	eor	r26, r26
    29b4:	f0 0d       	add	r31, r0
    29b6:	b1 1d       	adc	r27, r1
    29b8:	aa 1f       	adc	r26, r26
    29ba:	64 9f       	mul	r22, r20
    29bc:	66 27       	eor	r22, r22
    29be:	b0 0d       	add	r27, r0
    29c0:	a1 1d       	adc	r26, r1
    29c2:	66 1f       	adc	r22, r22
    29c4:	82 9f       	mul	r24, r18
    29c6:	22 27       	eor	r18, r18
    29c8:	b0 0d       	add	r27, r0
    29ca:	a1 1d       	adc	r26, r1
    29cc:	62 1f       	adc	r22, r18
    29ce:	73 9f       	mul	r23, r19
    29d0:	b0 0d       	add	r27, r0
    29d2:	a1 1d       	adc	r26, r1
    29d4:	62 1f       	adc	r22, r18
    29d6:	83 9f       	mul	r24, r19
    29d8:	a0 0d       	add	r26, r0
    29da:	61 1d       	adc	r22, r1
    29dc:	22 1f       	adc	r18, r18
    29de:	74 9f       	mul	r23, r20
    29e0:	33 27       	eor	r19, r19
    29e2:	a0 0d       	add	r26, r0
    29e4:	61 1d       	adc	r22, r1
    29e6:	23 1f       	adc	r18, r19
    29e8:	84 9f       	mul	r24, r20
    29ea:	60 0d       	add	r22, r0
    29ec:	21 1d       	adc	r18, r1
    29ee:	82 2f       	mov	r24, r18
    29f0:	76 2f       	mov	r23, r22
    29f2:	6a 2f       	mov	r22, r26
    29f4:	11 24       	eor	r1, r1
    29f6:	9f 57       	subi	r25, 0x7F	; 127
    29f8:	50 40       	sbci	r21, 0x00	; 0
    29fa:	9a f0       	brmi	.+38     	; 0x2a22 <__mulsf3_pse+0x88>
    29fc:	f1 f0       	breq	.+60     	; 0x2a3a <__mulsf3_pse+0xa0>
    29fe:	88 23       	and	r24, r24
    2a00:	4a f0       	brmi	.+18     	; 0x2a14 <__mulsf3_pse+0x7a>
    2a02:	ee 0f       	add	r30, r30
    2a04:	ff 1f       	adc	r31, r31
    2a06:	bb 1f       	adc	r27, r27
    2a08:	66 1f       	adc	r22, r22
    2a0a:	77 1f       	adc	r23, r23
    2a0c:	88 1f       	adc	r24, r24
    2a0e:	91 50       	subi	r25, 0x01	; 1
    2a10:	50 40       	sbci	r21, 0x00	; 0
    2a12:	a9 f7       	brne	.-22     	; 0x29fe <__mulsf3_pse+0x64>
    2a14:	9e 3f       	cpi	r25, 0xFE	; 254
    2a16:	51 05       	cpc	r21, r1
    2a18:	80 f0       	brcs	.+32     	; 0x2a3a <__mulsf3_pse+0xa0>
    2a1a:	0c 94 61 14 	jmp	0x28c2	; 0x28c2 <__fp_inf>
    2a1e:	0c 94 ac 14 	jmp	0x2958	; 0x2958 <__fp_szero>
    2a22:	5f 3f       	cpi	r21, 0xFF	; 255
    2a24:	e4 f3       	brlt	.-8      	; 0x2a1e <__mulsf3_pse+0x84>
    2a26:	98 3e       	cpi	r25, 0xE8	; 232
    2a28:	d4 f3       	brlt	.-12     	; 0x2a1e <__mulsf3_pse+0x84>
    2a2a:	86 95       	lsr	r24
    2a2c:	77 95       	ror	r23
    2a2e:	67 95       	ror	r22
    2a30:	b7 95       	ror	r27
    2a32:	f7 95       	ror	r31
    2a34:	e7 95       	ror	r30
    2a36:	9f 5f       	subi	r25, 0xFF	; 255
    2a38:	c1 f7       	brne	.-16     	; 0x2a2a <__mulsf3_pse+0x90>
    2a3a:	fe 2b       	or	r31, r30
    2a3c:	88 0f       	add	r24, r24
    2a3e:	91 1d       	adc	r25, r1
    2a40:	96 95       	lsr	r25
    2a42:	87 95       	ror	r24
    2a44:	97 f9       	bld	r25, 7
    2a46:	08 95       	ret

00002a48 <_exit>:
    2a48:	f8 94       	cli

00002a4a <__stop_program>:
    2a4a:	ff cf       	rjmp	.-2      	; 0x2a4a <__stop_program>
