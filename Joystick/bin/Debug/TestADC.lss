
bin\Debug\TestADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00002f96  0000304a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002f96  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  0000304a  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000304a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  0000304d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003060  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000c0  00000000  00000000  000030a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_pubnames 0000001d  00000000  00000000  00003160  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_info   00001668  00000000  00000000  0000317d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_abbrev 000009f8  00000000  00000000  000047e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line   000015c8  00000000  00000000  000051dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_frame  000003b4  00000000  00000000  000067a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_str    00000513  00000000  00000000  00006b5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      48:	0c 94 3b 15 	jmp	0x2a76	; 0x2a76 <__vector_18>
      4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	21 e0       	ldi	r18, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	aa 30       	cpi	r26, 0x0A	; 10
      80:	b2 07       	cpc	r27, r18
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
      84:	0e 94 89 15 	call	0x2b12	; 0x2b12 <main>
      88:	0c 94 c9 17 	jmp	0x2f92	; 0x2f92 <_exit>

0000008c <__bad_interrupt>:
      8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <toggle_e>:


#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
      90:	cf 93       	push	r28
      92:	df 93       	push	r29
      94:	cd b7       	in	r28, 0x3d	; 61
      96:	de b7       	in	r29, 0x3e	; 62
      98:	c8 54       	subi	r28, 0x48	; 72
      9a:	d1 09       	sbc	r29, r1
      9c:	0f b6       	in	r0, 0x3f	; 63
      9e:	f8 94       	cli
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	0f be       	out	0x3f, r0	; 63
      a4:	cd bf       	out	0x3d, r28	; 61
    lcd_e_high();
      a6:	85 e2       	ldi	r24, 0x25	; 37
      a8:	90 e0       	ldi	r25, 0x00	; 0
      aa:	dc 01       	movw	r26, r24
      ac:	2c 91       	ld	r18, X
      ae:	85 e2       	ldi	r24, 0x25	; 37
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	20 61       	ori	r18, 0x10	; 16
      b4:	fc 01       	movw	r30, r24
      b6:	20 83       	st	Z, r18
      b8:	80 e0       	ldi	r24, 0x00	; 0
      ba:	90 e0       	ldi	r25, 0x00	; 0
      bc:	a0 e8       	ldi	r26, 0x80	; 128
      be:	bf e3       	ldi	r27, 0x3F	; 63
      c0:	89 83       	std	Y+1, r24	; 0x01
      c2:	9a 83       	std	Y+2, r25	; 0x02
      c4:	ab 83       	std	Y+3, r26	; 0x03
      c6:	bc 83       	std	Y+4, r27	; 0x04
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
      c8:	2b ea       	ldi	r18, 0xAB	; 171
      ca:	3a ea       	ldi	r19, 0xAA	; 170
      cc:	4a ea       	ldi	r20, 0xAA	; 170
      ce:	50 e4       	ldi	r21, 0x40	; 64
      d0:	69 81       	ldd	r22, Y+1	; 0x01
      d2:	7a 81       	ldd	r23, Y+2	; 0x02
      d4:	8b 81       	ldd	r24, Y+3	; 0x03
      d6:	9c 81       	ldd	r25, Y+4	; 0x04
      d8:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
      dc:	6d a3       	std	Y+37, r22	; 0x25
      de:	7e a3       	std	Y+38, r23	; 0x26
      e0:	8f a3       	std	Y+39, r24	; 0x27
      e2:	98 a7       	std	Y+40, r25	; 0x28
      e4:	8d a1       	ldd	r24, Y+37	; 0x25
      e6:	9e a1       	ldd	r25, Y+38	; 0x26
      e8:	af a1       	ldd	r26, Y+39	; 0x27
      ea:	b8 a5       	ldd	r27, Y+40	; 0x28
      ec:	8d 83       	std	Y+5, r24	; 0x05
      ee:	9e 83       	std	Y+6, r25	; 0x06
      f0:	af 83       	std	Y+7, r26	; 0x07
      f2:	b8 87       	std	Y+8, r27	; 0x08
	__tmp2 = ((F_CPU) / 4e6) * __us;
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	40 e8       	ldi	r20, 0x80	; 128
      fa:	50 e4       	ldi	r21, 0x40	; 64
      fc:	69 81       	ldd	r22, Y+1	; 0x01
      fe:	7a 81       	ldd	r23, Y+2	; 0x02
     100:	8b 81       	ldd	r24, Y+3	; 0x03
     102:	9c 81       	ldd	r25, Y+4	; 0x04
     104:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     108:	69 a7       	std	Y+41, r22	; 0x29
     10a:	7a a7       	std	Y+42, r23	; 0x2a
     10c:	8b a7       	std	Y+43, r24	; 0x2b
     10e:	9c a7       	std	Y+44, r25	; 0x2c
     110:	89 a5       	ldd	r24, Y+41	; 0x29
     112:	9a a5       	ldd	r25, Y+42	; 0x2a
     114:	ab a5       	ldd	r26, Y+43	; 0x2b
     116:	bc a5       	ldd	r27, Y+44	; 0x2c
     118:	89 87       	std	Y+9, r24	; 0x09
     11a:	9a 87       	std	Y+10, r25	; 0x0a
     11c:	ab 87       	std	Y+11, r26	; 0x0b
     11e:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     120:	20 e0       	ldi	r18, 0x00	; 0
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	40 e8       	ldi	r20, 0x80	; 128
     126:	5f e3       	ldi	r21, 0x3F	; 63
     128:	6d 81       	ldd	r22, Y+5	; 0x05
     12a:	7e 81       	ldd	r23, Y+6	; 0x06
     12c:	8f 81       	ldd	r24, Y+7	; 0x07
     12e:	98 85       	ldd	r25, Y+8	; 0x08
     130:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     134:	88 23       	and	r24, r24
     136:	1c f4       	brge	.+6      	; 0x13e <toggle_e+0xae>
		__ticks = 1;
     138:	81 e0       	ldi	r24, 0x01	; 1
     13a:	8d 87       	std	Y+13, r24	; 0x0d
     13c:	e5 c0       	rjmp	.+458    	; 0x308 <toggle_e+0x278>
	else if (__tmp2 > 65535)
     13e:	20 e0       	ldi	r18, 0x00	; 0
     140:	3f ef       	ldi	r19, 0xFF	; 255
     142:	4f e7       	ldi	r20, 0x7F	; 127
     144:	57 e4       	ldi	r21, 0x47	; 71
     146:	69 85       	ldd	r22, Y+9	; 0x09
     148:	7a 85       	ldd	r23, Y+10	; 0x0a
     14a:	8b 85       	ldd	r24, Y+11	; 0x0b
     14c:	9c 85       	ldd	r25, Y+12	; 0x0c
     14e:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     152:	18 16       	cp	r1, r24
     154:	0c f0       	brlt	.+2      	; 0x158 <toggle_e+0xc8>
     156:	9e c0       	rjmp	.+316    	; 0x294 <toggle_e+0x204>
	{
		_delay_ms(__us / 1000.0);
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	4a e7       	ldi	r20, 0x7A	; 122
     15e:	54 e4       	ldi	r21, 0x44	; 68
     160:	69 81       	ldd	r22, Y+1	; 0x01
     162:	7a 81       	ldd	r23, Y+2	; 0x02
     164:	8b 81       	ldd	r24, Y+3	; 0x03
     166:	9c 81       	ldd	r25, Y+4	; 0x04
     168:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
     16c:	6d a7       	std	Y+45, r22	; 0x2d
     16e:	7e a7       	std	Y+46, r23	; 0x2e
     170:	8f a7       	std	Y+47, r24	; 0x2f
     172:	98 ab       	std	Y+48, r25	; 0x30
     174:	8d a5       	ldd	r24, Y+45	; 0x2d
     176:	9e a5       	ldd	r25, Y+46	; 0x2e
     178:	af a5       	ldd	r26, Y+47	; 0x2f
     17a:	b8 a9       	ldd	r27, Y+48	; 0x30
     17c:	8e 87       	std	Y+14, r24	; 0x0e
     17e:	9f 87       	std	Y+15, r25	; 0x0f
     180:	a8 8b       	std	Y+16, r26	; 0x10
     182:	b9 8b       	std	Y+17, r27	; 0x11
	__tmp = ((F_CPU) / 4e3) * __ms;
     184:	20 e0       	ldi	r18, 0x00	; 0
     186:	30 e0       	ldi	r19, 0x00	; 0
     188:	4a e7       	ldi	r20, 0x7A	; 122
     18a:	55 e4       	ldi	r21, 0x45	; 69
     18c:	6e 85       	ldd	r22, Y+14	; 0x0e
     18e:	7f 85       	ldd	r23, Y+15	; 0x0f
     190:	88 89       	ldd	r24, Y+16	; 0x10
     192:	99 89       	ldd	r25, Y+17	; 0x11
     194:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     198:	69 ab       	std	Y+49, r22	; 0x31
     19a:	7a ab       	std	Y+50, r23	; 0x32
     19c:	8b ab       	std	Y+51, r24	; 0x33
     19e:	9c ab       	std	Y+52, r25	; 0x34
     1a0:	89 a9       	ldd	r24, Y+49	; 0x31
     1a2:	9a a9       	ldd	r25, Y+50	; 0x32
     1a4:	ab a9       	ldd	r26, Y+51	; 0x33
     1a6:	bc a9       	ldd	r27, Y+52	; 0x34
     1a8:	8a 8b       	std	Y+18, r24	; 0x12
     1aa:	9b 8b       	std	Y+19, r25	; 0x13
     1ac:	ac 8b       	std	Y+20, r26	; 0x14
     1ae:	bd 8b       	std	Y+21, r27	; 0x15
	if (__tmp < 1.0)
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e8       	ldi	r20, 0x80	; 128
     1b6:	5f e3       	ldi	r21, 0x3F	; 63
     1b8:	6a 89       	ldd	r22, Y+18	; 0x12
     1ba:	7b 89       	ldd	r23, Y+19	; 0x13
     1bc:	8c 89       	ldd	r24, Y+20	; 0x14
     1be:	9d 89       	ldd	r25, Y+21	; 0x15
     1c0:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     1c4:	88 23       	and	r24, r24
     1c6:	2c f4       	brge	.+10     	; 0x1d2 <toggle_e+0x142>
		__ticks = 1;
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	9f 8b       	std	Y+23, r25	; 0x17
     1ce:	8e 8b       	std	Y+22, r24	; 0x16
     1d0:	56 c0       	rjmp	.+172    	; 0x27e <toggle_e+0x1ee>
	else if (__tmp > 65535)
     1d2:	20 e0       	ldi	r18, 0x00	; 0
     1d4:	3f ef       	ldi	r19, 0xFF	; 255
     1d6:	4f e7       	ldi	r20, 0x7F	; 127
     1d8:	57 e4       	ldi	r21, 0x47	; 71
     1da:	6a 89       	ldd	r22, Y+18	; 0x12
     1dc:	7b 89       	ldd	r23, Y+19	; 0x13
     1de:	8c 89       	ldd	r24, Y+20	; 0x14
     1e0:	9d 89       	ldd	r25, Y+21	; 0x15
     1e2:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     1e6:	18 16       	cp	r1, r24
     1e8:	d4 f5       	brge	.+116    	; 0x25e <toggle_e+0x1ce>
		__ticks = (uint16_t) (__ms * 10.0);
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	40 e2       	ldi	r20, 0x20	; 32
     1f0:	51 e4       	ldi	r21, 0x41	; 65
     1f2:	6e 85       	ldd	r22, Y+14	; 0x0e
     1f4:	7f 85       	ldd	r23, Y+15	; 0x0f
     1f6:	88 89       	ldd	r24, Y+16	; 0x10
     1f8:	99 89       	ldd	r25, Y+17	; 0x11
     1fa:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     1fe:	6d ab       	std	Y+53, r22	; 0x35
     200:	7e ab       	std	Y+54, r23	; 0x36
     202:	8f ab       	std	Y+55, r24	; 0x37
     204:	98 af       	std	Y+56, r25	; 0x38
     206:	8d a9       	ldd	r24, Y+53	; 0x35
     208:	9e a9       	ldd	r25, Y+54	; 0x36
     20a:	af a9       	ldd	r26, Y+55	; 0x37
     20c:	b8 ad       	ldd	r27, Y+56	; 0x38
     20e:	89 a3       	std	Y+33, r24	; 0x21
     210:	9a a3       	std	Y+34, r25	; 0x22
     212:	ab a3       	std	Y+35, r26	; 0x23
     214:	bc a3       	std	Y+36, r27	; 0x24
     216:	69 a1       	ldd	r22, Y+33	; 0x21
     218:	7a a1       	ldd	r23, Y+34	; 0x22
     21a:	8b a1       	ldd	r24, Y+35	; 0x23
     21c:	9c a1       	ldd	r25, Y+36	; 0x24
     21e:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     222:	69 af       	std	Y+57, r22	; 0x39
     224:	7a af       	std	Y+58, r23	; 0x3a
     226:	8b af       	std	Y+59, r24	; 0x3b
     228:	9c af       	std	Y+60, r25	; 0x3c
     22a:	a9 ad       	ldd	r26, Y+57	; 0x39
     22c:	ba ad       	ldd	r27, Y+58	; 0x3a
     22e:	bf 8b       	std	Y+23, r27	; 0x17
     230:	ae 8b       	std	Y+22, r26	; 0x16
		while(__ticks)
     232:	10 c0       	rjmp	.+32     	; 0x254 <toggle_e+0x1c4>
     234:	80 e9       	ldi	r24, 0x90	; 144
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	99 8f       	std	Y+25, r25	; 0x19
     23a:	88 8f       	std	Y+24, r24	; 0x18
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     23c:	88 8d       	ldd	r24, Y+24	; 0x18
     23e:	99 8d       	ldd	r25, Y+25	; 0x19
     240:	01 97       	sbiw	r24, 0x01	; 1
     242:	f1 f7       	brne	.-4      	; 0x240 <toggle_e+0x1b0>
     244:	99 8f       	std	Y+25, r25	; 0x19
     246:	88 8f       	std	Y+24, r24	; 0x18
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     248:	00 00       	nop
			__ticks --;
     24a:	8e 89       	ldd	r24, Y+22	; 0x16
     24c:	9f 89       	ldd	r25, Y+23	; 0x17
     24e:	01 97       	sbiw	r24, 0x01	; 1
     250:	9f 8b       	std	Y+23, r25	; 0x17
     252:	8e 8b       	std	Y+22, r24	; 0x16
		while(__ticks)
     254:	8e 89       	ldd	r24, Y+22	; 0x16
     256:	9f 89       	ldd	r25, Y+23	; 0x17
     258:	89 2b       	or	r24, r25
     25a:	61 f7       	brne	.-40     	; 0x234 <toggle_e+0x1a4>
		return;
     25c:	55 c0       	rjmp	.+170    	; 0x308 <toggle_e+0x278>
		__ticks = (uint16_t)__tmp;
     25e:	6a 89       	ldd	r22, Y+18	; 0x12
     260:	7b 89       	ldd	r23, Y+19	; 0x13
     262:	8c 89       	ldd	r24, Y+20	; 0x14
     264:	9d 89       	ldd	r25, Y+21	; 0x15
     266:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     26a:	21 96       	adiw	r28, 0x01	; 1
     26c:	6c af       	std	Y+60, r22	; 0x3c
     26e:	7d af       	std	Y+61, r23	; 0x3d
     270:	8e af       	std	Y+62, r24	; 0x3e
     272:	9f af       	std	Y+63, r25	; 0x3f
     274:	21 97       	sbiw	r28, 0x01	; 1
     276:	ed ad       	ldd	r30, Y+61	; 0x3d
     278:	fe ad       	ldd	r31, Y+62	; 0x3e
     27a:	ff 8b       	std	Y+23, r31	; 0x17
     27c:	ee 8b       	std	Y+22, r30	; 0x16
     27e:	8e 89       	ldd	r24, Y+22	; 0x16
     280:	9f 89       	ldd	r25, Y+23	; 0x17
     282:	9b 8f       	std	Y+27, r25	; 0x1b
     284:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
     286:	8a 8d       	ldd	r24, Y+26	; 0x1a
     288:	9b 8d       	ldd	r25, Y+27	; 0x1b
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	f1 f7       	brne	.-4      	; 0x28a <toggle_e+0x1fa>
     28e:	9b 8f       	std	Y+27, r25	; 0x1b
     290:	8a 8f       	std	Y+26, r24	; 0x1a
}
     292:	3a c0       	rjmp	.+116    	; 0x308 <toggle_e+0x278>
	}
	else if (__tmp > 255)
     294:	20 e0       	ldi	r18, 0x00	; 0
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	4f e7       	ldi	r20, 0x7F	; 127
     29a:	53 e4       	ldi	r21, 0x43	; 67
     29c:	6d 81       	ldd	r22, Y+5	; 0x05
     29e:	7e 81       	ldd	r23, Y+6	; 0x06
     2a0:	8f 81       	ldd	r24, Y+7	; 0x07
     2a2:	98 85       	ldd	r25, Y+8	; 0x08
     2a4:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     2a8:	18 16       	cp	r1, r24
     2aa:	f4 f4       	brge	.+60     	; 0x2e8 <toggle_e+0x258>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     2ac:	69 85       	ldd	r22, Y+9	; 0x09
     2ae:	7a 85       	ldd	r23, Y+10	; 0x0a
     2b0:	8b 85       	ldd	r24, Y+11	; 0x0b
     2b2:	9c 85       	ldd	r25, Y+12	; 0x0c
     2b4:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     2b8:	25 96       	adiw	r28, 0x05	; 5
     2ba:	6c af       	std	Y+60, r22	; 0x3c
     2bc:	7d af       	std	Y+61, r23	; 0x3d
     2be:	8e af       	std	Y+62, r24	; 0x3e
     2c0:	9f af       	std	Y+63, r25	; 0x3f
     2c2:	25 97       	sbiw	r28, 0x05	; 5
     2c4:	23 96       	adiw	r28, 0x03	; 3
     2c6:	8e ad       	ldd	r24, Y+62	; 0x3e
     2c8:	9f ad       	ldd	r25, Y+63	; 0x3f
     2ca:	23 97       	sbiw	r28, 0x03	; 3
     2cc:	9d 8f       	std	Y+29, r25	; 0x1d
     2ce:	8c 8f       	std	Y+28, r24	; 0x1c
     2d0:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2d2:	9d 8d       	ldd	r25, Y+29	; 0x1d
     2d4:	9f 8f       	std	Y+31, r25	; 0x1f
     2d6:	8e 8f       	std	Y+30, r24	; 0x1e
	__asm__ volatile (
     2d8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     2da:	9f 8d       	ldd	r25, Y+31	; 0x1f
     2dc:	01 97       	sbiw	r24, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <toggle_e+0x24c>
     2e0:	9f 8f       	std	Y+31, r25	; 0x1f
     2e2:	8e 8f       	std	Y+30, r24	; 0x1e
}
     2e4:	00 00       	nop
		_delay_loop_2(__ticks);
		return;
     2e6:	17 c0       	rjmp	.+46     	; 0x316 <toggle_e+0x286>
	}
	else
		__ticks = (uint8_t)__tmp;
     2e8:	6d 81       	ldd	r22, Y+5	; 0x05
     2ea:	7e 81       	ldd	r23, Y+6	; 0x06
     2ec:	8f 81       	ldd	r24, Y+7	; 0x07
     2ee:	98 85       	ldd	r25, Y+8	; 0x08
     2f0:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     2f4:	29 96       	adiw	r28, 0x09	; 9
     2f6:	6c af       	std	Y+60, r22	; 0x3c
     2f8:	7d af       	std	Y+61, r23	; 0x3d
     2fa:	8e af       	std	Y+62, r24	; 0x3e
     2fc:	9f af       	std	Y+63, r25	; 0x3f
     2fe:	29 97       	sbiw	r28, 0x09	; 9
     300:	26 96       	adiw	r28, 0x06	; 6
     302:	9f ad       	ldd	r25, Y+63	; 0x3f
     304:	26 97       	sbiw	r28, 0x06	; 6
     306:	9d 87       	std	Y+13, r25	; 0x0d
     308:	8d 85       	ldd	r24, Y+13	; 0x0d
     30a:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
     30c:	88 a1       	ldd	r24, Y+32	; 0x20
     30e:	8a 95       	dec	r24
     310:	f1 f7       	brne	.-4      	; 0x30e <toggle_e+0x27e>
     312:	88 a3       	std	Y+32, r24	; 0x20
}
     314:	00 00       	nop
    lcd_e_delay();
    lcd_e_low();
     316:	85 e2       	ldi	r24, 0x25	; 37
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	dc 01       	movw	r26, r24
     31c:	2c 91       	ld	r18, X
     31e:	85 e2       	ldi	r24, 0x25	; 37
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	2f 7e       	andi	r18, 0xEF	; 239
     324:	fc 01       	movw	r30, r24
     326:	20 83       	st	Z, r18
}
     328:	00 00       	nop
     32a:	c8 5b       	subi	r28, 0xB8	; 184
     32c:	df 4f       	sbci	r29, 0xFF	; 255
     32e:	0f b6       	in	r0, 0x3f	; 63
     330:	f8 94       	cli
     332:	de bf       	out	0x3e, r29	; 62
     334:	0f be       	out	0x3f, r0	; 63
     336:	cd bf       	out	0x3d, r28	; 61
     338:	df 91       	pop	r29
     33a:	cf 91       	pop	r28
     33c:	08 95       	ret

0000033e <lcd_write>:
                 0: write instruction
Returns:  none
*************************************************************************/
#if LCD_IO_MODE
static void lcd_write(uint8_t data,uint8_t rs) 
{
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	00 d0       	rcall	.+0      	; 0x344 <lcd_write+0x6>
     344:	0f 92       	push	r0
     346:	cd b7       	in	r28, 0x3d	; 61
     348:	de b7       	in	r29, 0x3e	; 62
     34a:	8a 83       	std	Y+2, r24	; 0x02
     34c:	6b 83       	std	Y+3, r22	; 0x03
    unsigned char dataBits ;


    if (rs) {        /* write data        (RS=1, RW=0) */
     34e:	8b 81       	ldd	r24, Y+3	; 0x03
     350:	88 23       	and	r24, r24
     352:	51 f0       	breq	.+20     	; 0x368 <lcd_write+0x2a>
       lcd_rs_high();
     354:	8b e2       	ldi	r24, 0x2B	; 43
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	fc 01       	movw	r30, r24
     35a:	20 81       	ld	r18, Z
     35c:	8b e2       	ldi	r24, 0x2B	; 43
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	24 60       	ori	r18, 0x04	; 4
     362:	fc 01       	movw	r30, r24
     364:	20 83       	st	Z, r18
     366:	09 c0       	rjmp	.+18     	; 0x37a <lcd_write+0x3c>
    } else {         /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
     368:	8b e2       	ldi	r24, 0x2B	; 43
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	fc 01       	movw	r30, r24
     36e:	20 81       	ld	r18, Z
     370:	8b e2       	ldi	r24, 0x2B	; 43
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	2b 7f       	andi	r18, 0xFB	; 251
     376:	fc 01       	movw	r30, r24
     378:	20 83       	st	Z, r18
    }
    lcd_rw_low();    /* RW=0  write mode      */
     37a:	8b e2       	ldi	r24, 0x2B	; 43
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	fc 01       	movw	r30, r24
     380:	20 81       	ld	r18, Z
     382:	8b e2       	ldi	r24, 0x2B	; 43
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	27 7f       	andi	r18, 0xF7	; 247
     388:	fc 01       	movw	r30, r24
     38a:	20 83       	st	Z, r18

    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && (LCD_DATA0_PIN == 0) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= 0x0F;
     38c:	84 e2       	ldi	r24, 0x24	; 36
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	fc 01       	movw	r30, r24
     392:	20 81       	ld	r18, Z
     394:	84 e2       	ldi	r24, 0x24	; 36
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	2f 60       	ori	r18, 0x0F	; 15
     39a:	fc 01       	movw	r30, r24
     39c:	20 83       	st	Z, r18

        /* output high nibble first */
        dataBits = LCD_DATA0_PORT & 0xF0;
     39e:	85 e2       	ldi	r24, 0x25	; 37
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	fc 01       	movw	r30, r24
     3a4:	80 81       	ld	r24, Z
     3a6:	80 7f       	andi	r24, 0xF0	; 240
     3a8:	89 83       	std	Y+1, r24	; 0x01
        LCD_DATA0_PORT = dataBits |((data>>4)&0x0F);
     3aa:	8a 81       	ldd	r24, Y+2	; 0x02
     3ac:	82 95       	swap	r24
     3ae:	8f 70       	andi	r24, 0x0F	; 15
     3b0:	98 2f       	mov	r25, r24
     3b2:	89 81       	ldd	r24, Y+1	; 0x01
     3b4:	29 2f       	mov	r18, r25
     3b6:	28 2b       	or	r18, r24
     3b8:	85 e2       	ldi	r24, 0x25	; 37
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	fc 01       	movw	r30, r24
     3be:	20 83       	st	Z, r18
        lcd_e_toggle();
     3c0:	0e 94 48 00 	call	0x90	; 0x90 <toggle_e>

        /* output low nibble */
        LCD_DATA0_PORT = dataBits | (data&0x0F);
     3c4:	8a 81       	ldd	r24, Y+2	; 0x02
     3c6:	98 2f       	mov	r25, r24
     3c8:	9f 70       	andi	r25, 0x0F	; 15
     3ca:	89 81       	ldd	r24, Y+1	; 0x01
     3cc:	29 2f       	mov	r18, r25
     3ce:	28 2b       	or	r18, r24
     3d0:	85 e2       	ldi	r24, 0x25	; 37
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	fc 01       	movw	r30, r24
     3d6:	20 83       	st	Z, r18
        lcd_e_toggle();
     3d8:	0e 94 48 00 	call	0x90	; 0x90 <toggle_e>

        /* all data pins high (inactive) */
        LCD_DATA0_PORT = dataBits | 0x0F;
     3dc:	85 e2       	ldi	r24, 0x25	; 37
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	29 81       	ldd	r18, Y+1	; 0x01
     3e2:	2f 60       	ori	r18, 0x0F	; 15
     3e4:	fc 01       	movw	r30, r24
     3e6:	20 83       	st	Z, r18
        LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
        LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
        LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
        LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
    }
}
     3e8:	00 00       	nop
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <lcd_read>:
                 0: read busy flag / address counter
Returns:  byte read from LCD controller
*************************************************************************/
#if LCD_IO_MODE
static uint8_t lcd_read(uint8_t rs) 
{
     3f6:	0f 93       	push	r16
     3f8:	1f 93       	push	r17
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	ca 5d       	subi	r28, 0xDA	; 218
     404:	d1 09       	sbc	r29, r1
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
     410:	9e 01       	movw	r18, r28
     412:	2e 59       	subi	r18, 0x9E	; 158
     414:	3f 4f       	sbci	r19, 0xFF	; 255
     416:	d9 01       	movw	r26, r18
     418:	8c 93       	st	X, r24
    uint8_t data;
    
    
    if (rs)
     41a:	ce 01       	movw	r24, r28
     41c:	8e 59       	subi	r24, 0x9E	; 158
     41e:	9f 4f       	sbci	r25, 0xFF	; 255
     420:	fc 01       	movw	r30, r24
     422:	80 81       	ld	r24, Z
     424:	88 23       	and	r24, r24
     426:	51 f0       	breq	.+20     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
        lcd_rs_high();                       /* RS=1: read data      */
     428:	8b e2       	ldi	r24, 0x2B	; 43
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	dc 01       	movw	r26, r24
     42e:	2c 91       	ld	r18, X
     430:	8b e2       	ldi	r24, 0x2B	; 43
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	24 60       	ori	r18, 0x04	; 4
     436:	fc 01       	movw	r30, r24
     438:	20 83       	st	Z, r18
     43a:	09 c0       	rjmp	.+18     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
     43c:	8b e2       	ldi	r24, 0x2B	; 43
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	dc 01       	movw	r26, r24
     442:	2c 91       	ld	r18, X
     444:	8b e2       	ldi	r24, 0x2B	; 43
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	2b 7f       	andi	r18, 0xFB	; 251
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
    lcd_rw_high();                           /* RW=1  read mode      */
     44e:	8b e2       	ldi	r24, 0x2B	; 43
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	dc 01       	movw	r26, r24
     454:	2c 91       	ld	r18, X
     456:	8b e2       	ldi	r24, 0x2B	; 43
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	28 60       	ori	r18, 0x08	; 8
     45c:	fc 01       	movw	r30, r24
     45e:	20 83       	st	Z, r18
    
    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && ( LCD_DATA0_PIN == 0 )&& (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        DDR(LCD_DATA0_PORT) &= 0xF0;         /* configure data pins as input */
     460:	84 e2       	ldi	r24, 0x24	; 36
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	dc 01       	movw	r26, r24
     466:	2c 91       	ld	r18, X
     468:	84 e2       	ldi	r24, 0x24	; 36
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	20 7f       	andi	r18, 0xF0	; 240
     46e:	fc 01       	movw	r30, r24
     470:	20 83       	st	Z, r18
        
        lcd_e_high();
     472:	85 e2       	ldi	r24, 0x25	; 37
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	dc 01       	movw	r26, r24
     478:	2c 91       	ld	r18, X
     47a:	85 e2       	ldi	r24, 0x25	; 37
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	20 61       	ori	r18, 0x10	; 16
     480:	fc 01       	movw	r30, r24
     482:	20 83       	st	Z, r18
     484:	9e 01       	movw	r18, r28
     486:	2e 5b       	subi	r18, 0xBE	; 190
     488:	3f 4f       	sbci	r19, 0xFF	; 255
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	a0 e8       	ldi	r26, 0x80	; 128
     490:	bf e3       	ldi	r27, 0x3F	; 63
     492:	f9 01       	movw	r30, r18
     494:	80 83       	st	Z, r24
     496:	91 83       	std	Z+1, r25	; 0x01
     498:	a2 83       	std	Z+2, r26	; 0x02
     49a:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
     49c:	8e 01       	movw	r16, r28
     49e:	0a 5b       	subi	r16, 0xBA	; 186
     4a0:	1f 4f       	sbci	r17, 0xFF	; 255
     4a2:	ce 01       	movw	r24, r28
     4a4:	8e 5b       	subi	r24, 0xBE	; 190
     4a6:	9f 4f       	sbci	r25, 0xFF	; 255
     4a8:	2b ea       	ldi	r18, 0xAB	; 171
     4aa:	3a ea       	ldi	r19, 0xAA	; 170
     4ac:	4a ea       	ldi	r20, 0xAA	; 170
     4ae:	50 e4       	ldi	r21, 0x40	; 64
     4b0:	dc 01       	movw	r26, r24
     4b2:	6d 91       	ld	r22, X+
     4b4:	7d 91       	ld	r23, X+
     4b6:	8d 91       	ld	r24, X+
     4b8:	9c 91       	ld	r25, X
     4ba:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     4be:	e3 96       	adiw	r28, 0x33	; 51
     4c0:	6c af       	std	Y+60, r22	; 0x3c
     4c2:	7d af       	std	Y+61, r23	; 0x3d
     4c4:	8e af       	std	Y+62, r24	; 0x3e
     4c6:	9f af       	std	Y+63, r25	; 0x3f
     4c8:	e3 97       	sbiw	r28, 0x33	; 51
     4ca:	e3 96       	adiw	r28, 0x33	; 51
     4cc:	8c ad       	ldd	r24, Y+60	; 0x3c
     4ce:	9d ad       	ldd	r25, Y+61	; 0x3d
     4d0:	ae ad       	ldd	r26, Y+62	; 0x3e
     4d2:	bf ad       	ldd	r27, Y+63	; 0x3f
     4d4:	e3 97       	sbiw	r28, 0x33	; 51
     4d6:	f8 01       	movw	r30, r16
     4d8:	80 83       	st	Z, r24
     4da:	91 83       	std	Z+1, r25	; 0x01
     4dc:	a2 83       	std	Z+2, r26	; 0x02
     4de:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     4e0:	8e 01       	movw	r16, r28
     4e2:	06 5b       	subi	r16, 0xB6	; 182
     4e4:	1f 4f       	sbci	r17, 0xFF	; 255
     4e6:	ce 01       	movw	r24, r28
     4e8:	8e 5b       	subi	r24, 0xBE	; 190
     4ea:	9f 4f       	sbci	r25, 0xFF	; 255
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	40 e8       	ldi	r20, 0x80	; 128
     4f2:	50 e4       	ldi	r21, 0x40	; 64
     4f4:	dc 01       	movw	r26, r24
     4f6:	6d 91       	ld	r22, X+
     4f8:	7d 91       	ld	r23, X+
     4fa:	8d 91       	ld	r24, X+
     4fc:	9c 91       	ld	r25, X
     4fe:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     502:	e7 96       	adiw	r28, 0x37	; 55
     504:	6c af       	std	Y+60, r22	; 0x3c
     506:	7d af       	std	Y+61, r23	; 0x3d
     508:	8e af       	std	Y+62, r24	; 0x3e
     50a:	9f af       	std	Y+63, r25	; 0x3f
     50c:	e7 97       	sbiw	r28, 0x37	; 55
     50e:	e7 96       	adiw	r28, 0x37	; 55
     510:	8c ad       	ldd	r24, Y+60	; 0x3c
     512:	9d ad       	ldd	r25, Y+61	; 0x3d
     514:	ae ad       	ldd	r26, Y+62	; 0x3e
     516:	bf ad       	ldd	r27, Y+63	; 0x3f
     518:	e7 97       	sbiw	r28, 0x37	; 55
     51a:	f8 01       	movw	r30, r16
     51c:	80 83       	st	Z, r24
     51e:	91 83       	std	Z+1, r25	; 0x01
     520:	a2 83       	std	Z+2, r26	; 0x02
     522:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     524:	ce 01       	movw	r24, r28
     526:	8a 5b       	subi	r24, 0xBA	; 186
     528:	9f 4f       	sbci	r25, 0xFF	; 255
     52a:	20 e0       	ldi	r18, 0x00	; 0
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	40 e8       	ldi	r20, 0x80	; 128
     530:	5f e3       	ldi	r21, 0x3F	; 63
     532:	dc 01       	movw	r26, r24
     534:	6d 91       	ld	r22, X+
     536:	7d 91       	ld	r23, X+
     538:	8d 91       	ld	r24, X+
     53a:	9c 91       	ld	r25, X
     53c:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     540:	88 23       	and	r24, r24
     542:	3c f4       	brge	.+14     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
		__ticks = 1;
     544:	ce 01       	movw	r24, r28
     546:	82 5b       	subi	r24, 0xB2	; 178
     548:	9f 4f       	sbci	r25, 0xFF	; 255
     54a:	21 e0       	ldi	r18, 0x01	; 1
     54c:	fc 01       	movw	r30, r24
     54e:	20 83       	st	Z, r18
     550:	8d c1       	rjmp	.+794    	; 0x86c <__LOCK_REGION_LENGTH__+0x46c>
	else if (__tmp2 > 65535)
     552:	ce 01       	movw	r24, r28
     554:	86 5b       	subi	r24, 0xB6	; 182
     556:	9f 4f       	sbci	r25, 0xFF	; 255
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	3f ef       	ldi	r19, 0xFF	; 255
     55c:	4f e7       	ldi	r20, 0x7F	; 127
     55e:	57 e4       	ldi	r21, 0x47	; 71
     560:	dc 01       	movw	r26, r24
     562:	6d 91       	ld	r22, X+
     564:	7d 91       	ld	r23, X+
     566:	8d 91       	ld	r24, X+
     568:	9c 91       	ld	r25, X
     56a:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     56e:	18 16       	cp	r1, r24
     570:	0c f0       	brlt	.+2      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
     572:	16 c1       	rjmp	.+556    	; 0x7a0 <__LOCK_REGION_LENGTH__+0x3a0>
		_delay_ms(__us / 1000.0);
     574:	ce 01       	movw	r24, r28
     576:	8e 5b       	subi	r24, 0xBE	; 190
     578:	9f 4f       	sbci	r25, 0xFF	; 255
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	4a e7       	ldi	r20, 0x7A	; 122
     580:	54 e4       	ldi	r21, 0x44	; 68
     582:	fc 01       	movw	r30, r24
     584:	60 81       	ld	r22, Z
     586:	71 81       	ldd	r23, Z+1	; 0x01
     588:	82 81       	ldd	r24, Z+2	; 0x02
     58a:	93 81       	ldd	r25, Z+3	; 0x03
     58c:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
     590:	eb 96       	adiw	r28, 0x3b	; 59
     592:	6c af       	std	Y+60, r22	; 0x3c
     594:	7d af       	std	Y+61, r23	; 0x3d
     596:	8e af       	std	Y+62, r24	; 0x3e
     598:	9f af       	std	Y+63, r25	; 0x3f
     59a:	eb 97       	sbiw	r28, 0x3b	; 59
     59c:	eb 96       	adiw	r28, 0x3b	; 59
     59e:	8c ad       	ldd	r24, Y+60	; 0x3c
     5a0:	9d ad       	ldd	r25, Y+61	; 0x3d
     5a2:	ae ad       	ldd	r26, Y+62	; 0x3e
     5a4:	bf ad       	ldd	r27, Y+63	; 0x3f
     5a6:	eb 97       	sbiw	r28, 0x3b	; 59
     5a8:	9e 01       	movw	r18, r28
     5aa:	21 5b       	subi	r18, 0xB1	; 177
     5ac:	3f 4f       	sbci	r19, 0xFF	; 255
     5ae:	f9 01       	movw	r30, r18
     5b0:	80 83       	st	Z, r24
     5b2:	91 83       	std	Z+1, r25	; 0x01
     5b4:	a2 83       	std	Z+2, r26	; 0x02
     5b6:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
     5b8:	8e 01       	movw	r16, r28
     5ba:	0d 5a       	subi	r16, 0xAD	; 173
     5bc:	1f 4f       	sbci	r17, 0xFF	; 255
     5be:	ce 01       	movw	r24, r28
     5c0:	81 5b       	subi	r24, 0xB1	; 177
     5c2:	9f 4f       	sbci	r25, 0xFF	; 255
     5c4:	20 e0       	ldi	r18, 0x00	; 0
     5c6:	30 e0       	ldi	r19, 0x00	; 0
     5c8:	4a e7       	ldi	r20, 0x7A	; 122
     5ca:	55 e4       	ldi	r21, 0x45	; 69
     5cc:	dc 01       	movw	r26, r24
     5ce:	6d 91       	ld	r22, X+
     5d0:	7d 91       	ld	r23, X+
     5d2:	8d 91       	ld	r24, X+
     5d4:	9c 91       	ld	r25, X
     5d6:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     5da:	ef 96       	adiw	r28, 0x3f	; 63
     5dc:	6c af       	std	Y+60, r22	; 0x3c
     5de:	7d af       	std	Y+61, r23	; 0x3d
     5e0:	8e af       	std	Y+62, r24	; 0x3e
     5e2:	9f af       	std	Y+63, r25	; 0x3f
     5e4:	ef 97       	sbiw	r28, 0x3f	; 63
     5e6:	ef 96       	adiw	r28, 0x3f	; 63
     5e8:	8c ad       	ldd	r24, Y+60	; 0x3c
     5ea:	9d ad       	ldd	r25, Y+61	; 0x3d
     5ec:	ae ad       	ldd	r26, Y+62	; 0x3e
     5ee:	bf ad       	ldd	r27, Y+63	; 0x3f
     5f0:	ef 97       	sbiw	r28, 0x3f	; 63
     5f2:	f8 01       	movw	r30, r16
     5f4:	80 83       	st	Z, r24
     5f6:	91 83       	std	Z+1, r25	; 0x01
     5f8:	a2 83       	std	Z+2, r26	; 0x02
     5fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5fc:	ce 01       	movw	r24, r28
     5fe:	8d 5a       	subi	r24, 0xAD	; 173
     600:	9f 4f       	sbci	r25, 0xFF	; 255
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	40 e8       	ldi	r20, 0x80	; 128
     608:	5f e3       	ldi	r21, 0x3F	; 63
     60a:	dc 01       	movw	r26, r24
     60c:	6d 91       	ld	r22, X+
     60e:	7d 91       	ld	r23, X+
     610:	8d 91       	ld	r24, X+
     612:	9c 91       	ld	r25, X
     614:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     618:	88 23       	and	r24, r24
     61a:	4c f4       	brge	.+18     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
		__ticks = 1;
     61c:	ce 01       	movw	r24, r28
     61e:	89 5a       	subi	r24, 0xA9	; 169
     620:	9f 4f       	sbci	r25, 0xFF	; 255
     622:	21 e0       	ldi	r18, 0x01	; 1
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	fc 01       	movw	r30, r24
     628:	31 83       	std	Z+1, r19	; 0x01
     62a:	20 83       	st	Z, r18
     62c:	9e c0       	rjmp	.+316    	; 0x76a <__LOCK_REGION_LENGTH__+0x36a>
	else if (__tmp > 65535)
     62e:	ce 01       	movw	r24, r28
     630:	8d 5a       	subi	r24, 0xAD	; 173
     632:	9f 4f       	sbci	r25, 0xFF	; 255
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	3f ef       	ldi	r19, 0xFF	; 255
     638:	4f e7       	ldi	r20, 0x7F	; 127
     63a:	57 e4       	ldi	r21, 0x47	; 71
     63c:	dc 01       	movw	r26, r24
     63e:	6d 91       	ld	r22, X+
     640:	7d 91       	ld	r23, X+
     642:	8d 91       	ld	r24, X+
     644:	9c 91       	ld	r25, X
     646:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     64a:	18 16       	cp	r1, r24
     64c:	0c f0       	brlt	.+2      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
     64e:	6f c0       	rjmp	.+222    	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
		__ticks = (uint16_t) (__ms * 10.0);
     650:	ce 01       	movw	r24, r28
     652:	81 5b       	subi	r24, 0xB1	; 177
     654:	9f 4f       	sbci	r25, 0xFF	; 255
     656:	20 e0       	ldi	r18, 0x00	; 0
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	40 e2       	ldi	r20, 0x20	; 32
     65c:	51 e4       	ldi	r21, 0x41	; 65
     65e:	fc 01       	movw	r30, r24
     660:	60 81       	ld	r22, Z
     662:	71 81       	ldd	r23, Z+1	; 0x01
     664:	82 81       	ldd	r24, Z+2	; 0x02
     666:	93 81       	ldd	r25, Z+3	; 0x03
     668:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     66c:	c1 58       	subi	r28, 0x81	; 129
     66e:	df 4f       	sbci	r29, 0xFF	; 255
     670:	68 83       	st	Y, r22
     672:	79 83       	std	Y+1, r23	; 0x01
     674:	8a 83       	std	Y+2, r24	; 0x02
     676:	9b 83       	std	Y+3, r25	; 0x03
     678:	cf 57       	subi	r28, 0x7F	; 127
     67a:	d0 40       	sbci	r29, 0x00	; 0
     67c:	c1 58       	subi	r28, 0x81	; 129
     67e:	df 4f       	sbci	r29, 0xFF	; 255
     680:	88 81       	ld	r24, Y
     682:	99 81       	ldd	r25, Y+1	; 0x01
     684:	aa 81       	ldd	r26, Y+2	; 0x02
     686:	bb 81       	ldd	r27, Y+3	; 0x03
     688:	cf 57       	subi	r28, 0x7F	; 127
     68a:	d0 40       	sbci	r29, 0x00	; 0
     68c:	af 96       	adiw	r28, 0x2f	; 47
     68e:	8c af       	std	Y+60, r24	; 0x3c
     690:	9d af       	std	Y+61, r25	; 0x3d
     692:	ae af       	std	Y+62, r26	; 0x3e
     694:	bf af       	std	Y+63, r27	; 0x3f
     696:	af 97       	sbiw	r28, 0x2f	; 47
     698:	8e 01       	movw	r16, r28
     69a:	09 5a       	subi	r16, 0xA9	; 169
     69c:	1f 4f       	sbci	r17, 0xFF	; 255
     69e:	af 96       	adiw	r28, 0x2f	; 47
     6a0:	6c ad       	ldd	r22, Y+60	; 0x3c
     6a2:	7d ad       	ldd	r23, Y+61	; 0x3d
     6a4:	8e ad       	ldd	r24, Y+62	; 0x3e
     6a6:	9f ad       	ldd	r25, Y+63	; 0x3f
     6a8:	af 97       	sbiw	r28, 0x2f	; 47
     6aa:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     6ae:	cd 57       	subi	r28, 0x7D	; 125
     6b0:	df 4f       	sbci	r29, 0xFF	; 255
     6b2:	68 83       	st	Y, r22
     6b4:	79 83       	std	Y+1, r23	; 0x01
     6b6:	8a 83       	std	Y+2, r24	; 0x02
     6b8:	9b 83       	std	Y+3, r25	; 0x03
     6ba:	c3 58       	subi	r28, 0x83	; 131
     6bc:	d0 40       	sbci	r29, 0x00	; 0
     6be:	cd 57       	subi	r28, 0x7D	; 125
     6c0:	df 4f       	sbci	r29, 0xFF	; 255
     6c2:	e8 81       	ld	r30, Y
     6c4:	f9 81       	ldd	r31, Y+1	; 0x01
     6c6:	c3 58       	subi	r28, 0x83	; 131
     6c8:	d0 40       	sbci	r29, 0x00	; 0
     6ca:	d8 01       	movw	r26, r16
     6cc:	ed 93       	st	X+, r30
     6ce:	fc 93       	st	X, r31
		while(__ticks)
     6d0:	25 c0       	rjmp	.+74     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
     6d2:	ce 01       	movw	r24, r28
     6d4:	87 5a       	subi	r24, 0xA7	; 167
     6d6:	9f 4f       	sbci	r25, 0xFF	; 255
     6d8:	20 e9       	ldi	r18, 0x90	; 144
     6da:	31 e0       	ldi	r19, 0x01	; 1
     6dc:	dc 01       	movw	r26, r24
     6de:	2d 93       	st	X+, r18
     6e0:	3c 93       	st	X, r19
	__asm__ volatile (
     6e2:	ce 01       	movw	r24, r28
     6e4:	87 5a       	subi	r24, 0xA7	; 167
     6e6:	9f 4f       	sbci	r25, 0xFF	; 255
     6e8:	fc 01       	movw	r30, r24
     6ea:	80 81       	ld	r24, Z
     6ec:	91 81       	ldd	r25, Z+1	; 0x01
     6ee:	01 97       	sbiw	r24, 0x01	; 1
     6f0:	f1 f7       	brne	.-4      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
     6f2:	9e 01       	movw	r18, r28
     6f4:	27 5a       	subi	r18, 0xA7	; 167
     6f6:	3f 4f       	sbci	r19, 0xFF	; 255
     6f8:	d9 01       	movw	r26, r18
     6fa:	8d 93       	st	X+, r24
     6fc:	9c 93       	st	X, r25
}
     6fe:	00 00       	nop
			__ticks --;
     700:	ce 01       	movw	r24, r28
     702:	89 5a       	subi	r24, 0xA9	; 169
     704:	9f 4f       	sbci	r25, 0xFF	; 255
     706:	9e 01       	movw	r18, r28
     708:	29 5a       	subi	r18, 0xA9	; 169
     70a:	3f 4f       	sbci	r19, 0xFF	; 255
     70c:	f9 01       	movw	r30, r18
     70e:	20 81       	ld	r18, Z
     710:	31 81       	ldd	r19, Z+1	; 0x01
     712:	21 50       	subi	r18, 0x01	; 1
     714:	31 09       	sbc	r19, r1
     716:	dc 01       	movw	r26, r24
     718:	2d 93       	st	X+, r18
     71a:	3c 93       	st	X, r19
		while(__ticks)
     71c:	ce 01       	movw	r24, r28
     71e:	89 5a       	subi	r24, 0xA9	; 169
     720:	9f 4f       	sbci	r25, 0xFF	; 255
     722:	fc 01       	movw	r30, r24
     724:	80 81       	ld	r24, Z
     726:	91 81       	ldd	r25, Z+1	; 0x01
     728:	89 2b       	or	r24, r25
     72a:	99 f6       	brne	.-90     	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
		return;
     72c:	9f c0       	rjmp	.+318    	; 0x86c <__LOCK_REGION_LENGTH__+0x46c>
		__ticks = (uint16_t)__tmp;
     72e:	8e 01       	movw	r16, r28
     730:	09 5a       	subi	r16, 0xA9	; 169
     732:	1f 4f       	sbci	r17, 0xFF	; 255
     734:	ce 01       	movw	r24, r28
     736:	8d 5a       	subi	r24, 0xAD	; 173
     738:	9f 4f       	sbci	r25, 0xFF	; 255
     73a:	dc 01       	movw	r26, r24
     73c:	6d 91       	ld	r22, X+
     73e:	7d 91       	ld	r23, X+
     740:	8d 91       	ld	r24, X+
     742:	9c 91       	ld	r25, X
     744:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     748:	c9 57       	subi	r28, 0x79	; 121
     74a:	df 4f       	sbci	r29, 0xFF	; 255
     74c:	68 83       	st	Y, r22
     74e:	79 83       	std	Y+1, r23	; 0x01
     750:	8a 83       	std	Y+2, r24	; 0x02
     752:	9b 83       	std	Y+3, r25	; 0x03
     754:	c7 58       	subi	r28, 0x87	; 135
     756:	d0 40       	sbci	r29, 0x00	; 0
     758:	c9 57       	subi	r28, 0x79	; 121
     75a:	df 4f       	sbci	r29, 0xFF	; 255
     75c:	88 81       	ld	r24, Y
     75e:	99 81       	ldd	r25, Y+1	; 0x01
     760:	c7 58       	subi	r28, 0x87	; 135
     762:	d0 40       	sbci	r29, 0x00	; 0
     764:	f8 01       	movw	r30, r16
     766:	91 83       	std	Z+1, r25	; 0x01
     768:	80 83       	st	Z, r24
     76a:	ce 01       	movw	r24, r28
     76c:	85 5a       	subi	r24, 0xA5	; 165
     76e:	9f 4f       	sbci	r25, 0xFF	; 255
     770:	9e 01       	movw	r18, r28
     772:	29 5a       	subi	r18, 0xA9	; 169
     774:	3f 4f       	sbci	r19, 0xFF	; 255
     776:	d9 01       	movw	r26, r18
     778:	2d 91       	ld	r18, X+
     77a:	3c 91       	ld	r19, X
     77c:	fc 01       	movw	r30, r24
     77e:	31 83       	std	Z+1, r19	; 0x01
     780:	20 83       	st	Z, r18
	__asm__ volatile (
     782:	ce 01       	movw	r24, r28
     784:	85 5a       	subi	r24, 0xA5	; 165
     786:	9f 4f       	sbci	r25, 0xFF	; 255
     788:	dc 01       	movw	r26, r24
     78a:	8d 91       	ld	r24, X+
     78c:	9c 91       	ld	r25, X
     78e:	01 97       	sbiw	r24, 0x01	; 1
     790:	f1 f7       	brne	.-4      	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     792:	9e 01       	movw	r18, r28
     794:	25 5a       	subi	r18, 0xA5	; 165
     796:	3f 4f       	sbci	r19, 0xFF	; 255
     798:	f9 01       	movw	r30, r18
     79a:	91 83       	std	Z+1, r25	; 0x01
     79c:	80 83       	st	Z, r24
}
     79e:	66 c0       	rjmp	.+204    	; 0x86c <__LOCK_REGION_LENGTH__+0x46c>
	else if (__tmp > 255)
     7a0:	ce 01       	movw	r24, r28
     7a2:	8a 5b       	subi	r24, 0xBA	; 186
     7a4:	9f 4f       	sbci	r25, 0xFF	; 255
     7a6:	20 e0       	ldi	r18, 0x00	; 0
     7a8:	30 e0       	ldi	r19, 0x00	; 0
     7aa:	4f e7       	ldi	r20, 0x7F	; 127
     7ac:	53 e4       	ldi	r21, 0x43	; 67
     7ae:	dc 01       	movw	r26, r24
     7b0:	6d 91       	ld	r22, X+
     7b2:	7d 91       	ld	r23, X+
     7b4:	8d 91       	ld	r24, X+
     7b6:	9c 91       	ld	r25, X
     7b8:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     7bc:	18 16       	cp	r1, r24
     7be:	d4 f5       	brge	.+116    	; 0x834 <__LOCK_REGION_LENGTH__+0x434>
		uint16_t __ticks=(uint16_t)__tmp2;
     7c0:	8e 01       	movw	r16, r28
     7c2:	03 5a       	subi	r16, 0xA3	; 163
     7c4:	1f 4f       	sbci	r17, 0xFF	; 255
     7c6:	ce 01       	movw	r24, r28
     7c8:	86 5b       	subi	r24, 0xB6	; 182
     7ca:	9f 4f       	sbci	r25, 0xFF	; 255
     7cc:	fc 01       	movw	r30, r24
     7ce:	60 81       	ld	r22, Z
     7d0:	71 81       	ldd	r23, Z+1	; 0x01
     7d2:	82 81       	ldd	r24, Z+2	; 0x02
     7d4:	93 81       	ldd	r25, Z+3	; 0x03
     7d6:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     7da:	c5 57       	subi	r28, 0x75	; 117
     7dc:	df 4f       	sbci	r29, 0xFF	; 255
     7de:	68 83       	st	Y, r22
     7e0:	79 83       	std	Y+1, r23	; 0x01
     7e2:	8a 83       	std	Y+2, r24	; 0x02
     7e4:	9b 83       	std	Y+3, r25	; 0x03
     7e6:	cb 58       	subi	r28, 0x8B	; 139
     7e8:	d0 40       	sbci	r29, 0x00	; 0
     7ea:	c5 57       	subi	r28, 0x75	; 117
     7ec:	df 4f       	sbci	r29, 0xFF	; 255
     7ee:	e8 81       	ld	r30, Y
     7f0:	f9 81       	ldd	r31, Y+1	; 0x01
     7f2:	cb 58       	subi	r28, 0x8B	; 139
     7f4:	d0 40       	sbci	r29, 0x00	; 0
     7f6:	d8 01       	movw	r26, r16
     7f8:	ed 93       	st	X+, r30
     7fa:	fc 93       	st	X, r31
     7fc:	ce 01       	movw	r24, r28
     7fe:	81 5a       	subi	r24, 0xA1	; 161
     800:	9f 4f       	sbci	r25, 0xFF	; 255
     802:	9e 01       	movw	r18, r28
     804:	23 5a       	subi	r18, 0xA3	; 163
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	d9 01       	movw	r26, r18
     80a:	2d 91       	ld	r18, X+
     80c:	3c 91       	ld	r19, X
     80e:	fc 01       	movw	r30, r24
     810:	31 83       	std	Z+1, r19	; 0x01
     812:	20 83       	st	Z, r18
	__asm__ volatile (
     814:	ce 01       	movw	r24, r28
     816:	81 5a       	subi	r24, 0xA1	; 161
     818:	9f 4f       	sbci	r25, 0xFF	; 255
     81a:	dc 01       	movw	r26, r24
     81c:	8d 91       	ld	r24, X+
     81e:	9c 91       	ld	r25, X
     820:	01 97       	sbiw	r24, 0x01	; 1
     822:	f1 f7       	brne	.-4      	; 0x820 <__LOCK_REGION_LENGTH__+0x420>
     824:	9e 01       	movw	r18, r28
     826:	21 5a       	subi	r18, 0xA1	; 161
     828:	3f 4f       	sbci	r19, 0xFF	; 255
     82a:	f9 01       	movw	r30, r18
     82c:	91 83       	std	Z+1, r25	; 0x01
     82e:	80 83       	st	Z, r24
}
     830:	00 00       	nop
		return;
     832:	34 c0       	rjmp	.+104    	; 0x89c <__LOCK_REGION_LENGTH__+0x49c>
		__ticks = (uint8_t)__tmp;
     834:	8e 01       	movw	r16, r28
     836:	02 5b       	subi	r16, 0xB2	; 178
     838:	1f 4f       	sbci	r17, 0xFF	; 255
     83a:	ce 01       	movw	r24, r28
     83c:	8a 5b       	subi	r24, 0xBA	; 186
     83e:	9f 4f       	sbci	r25, 0xFF	; 255
     840:	dc 01       	movw	r26, r24
     842:	6d 91       	ld	r22, X+
     844:	7d 91       	ld	r23, X+
     846:	8d 91       	ld	r24, X+
     848:	9c 91       	ld	r25, X
     84a:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     84e:	c1 57       	subi	r28, 0x71	; 113
     850:	df 4f       	sbci	r29, 0xFF	; 255
     852:	68 83       	st	Y, r22
     854:	79 83       	std	Y+1, r23	; 0x01
     856:	8a 83       	std	Y+2, r24	; 0x02
     858:	9b 83       	std	Y+3, r25	; 0x03
     85a:	cf 58       	subi	r28, 0x8F	; 143
     85c:	d0 40       	sbci	r29, 0x00	; 0
     85e:	c1 57       	subi	r28, 0x71	; 113
     860:	df 4f       	sbci	r29, 0xFF	; 255
     862:	88 81       	ld	r24, Y
     864:	cf 58       	subi	r28, 0x8F	; 143
     866:	d0 40       	sbci	r29, 0x00	; 0
     868:	f8 01       	movw	r30, r16
     86a:	80 83       	st	Z, r24
     86c:	ce 01       	movw	r24, r28
     86e:	8f 59       	subi	r24, 0x9F	; 159
     870:	9f 4f       	sbci	r25, 0xFF	; 255
     872:	9e 01       	movw	r18, r28
     874:	22 5b       	subi	r18, 0xB2	; 178
     876:	3f 4f       	sbci	r19, 0xFF	; 255
     878:	d9 01       	movw	r26, r18
     87a:	2c 91       	ld	r18, X
     87c:	fc 01       	movw	r30, r24
     87e:	20 83       	st	Z, r18
	__asm__ volatile (
     880:	ce 01       	movw	r24, r28
     882:	8f 59       	subi	r24, 0x9F	; 159
     884:	9f 4f       	sbci	r25, 0xFF	; 255
     886:	dc 01       	movw	r26, r24
     888:	8c 91       	ld	r24, X
     88a:	28 2f       	mov	r18, r24
     88c:	2a 95       	dec	r18
     88e:	f1 f7       	brne	.-4      	; 0x88c <__LOCK_REGION_LENGTH__+0x48c>
     890:	ce 01       	movw	r24, r28
     892:	8f 59       	subi	r24, 0x9F	; 159
     894:	9f 4f       	sbci	r25, 0xFF	; 255
     896:	fc 01       	movw	r30, r24
     898:	20 83       	st	Z, r18
}
     89a:	00 00       	nop
        lcd_e_delay();        
        data = PIN(LCD_DATA0_PORT) << 4;     /* read high nibble first */
     89c:	83 e2       	ldi	r24, 0x23	; 35
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	dc 01       	movw	r26, r24
     8a2:	8c 91       	ld	r24, X
     8a4:	28 2f       	mov	r18, r24
     8a6:	22 95       	swap	r18
     8a8:	20 7f       	andi	r18, 0xF0	; 240
     8aa:	ce 01       	movw	r24, r28
     8ac:	80 5c       	subi	r24, 0xC0	; 192
     8ae:	9f 4f       	sbci	r25, 0xFF	; 255
     8b0:	fc 01       	movw	r30, r24
     8b2:	20 83       	st	Z, r18
        lcd_e_low();
     8b4:	85 e2       	ldi	r24, 0x25	; 37
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	dc 01       	movw	r26, r24
     8ba:	2c 91       	ld	r18, X
     8bc:	85 e2       	ldi	r24, 0x25	; 37
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	2f 7e       	andi	r18, 0xEF	; 239
     8c2:	fc 01       	movw	r30, r24
     8c4:	20 83       	st	Z, r18
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	a0 e8       	ldi	r26, 0x80	; 128
     8cc:	bf e3       	ldi	r27, 0x3F	; 63
     8ce:	8b 83       	std	Y+3, r24	; 0x03
     8d0:	9c 83       	std	Y+4, r25	; 0x04
     8d2:	ad 83       	std	Y+5, r26	; 0x05
     8d4:	be 83       	std	Y+6, r27	; 0x06
	__tmp = ((F_CPU) / 3e6) * __us;
     8d6:	2b ea       	ldi	r18, 0xAB	; 171
     8d8:	3a ea       	ldi	r19, 0xAA	; 170
     8da:	4a ea       	ldi	r20, 0xAA	; 170
     8dc:	50 e4       	ldi	r21, 0x40	; 64
     8de:	6b 81       	ldd	r22, Y+3	; 0x03
     8e0:	7c 81       	ldd	r23, Y+4	; 0x04
     8e2:	8d 81       	ldd	r24, Y+5	; 0x05
     8e4:	9e 81       	ldd	r25, Y+6	; 0x06
     8e6:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     8ea:	cd 56       	subi	r28, 0x6D	; 109
     8ec:	df 4f       	sbci	r29, 0xFF	; 255
     8ee:	68 83       	st	Y, r22
     8f0:	79 83       	std	Y+1, r23	; 0x01
     8f2:	8a 83       	std	Y+2, r24	; 0x02
     8f4:	9b 83       	std	Y+3, r25	; 0x03
     8f6:	c3 59       	subi	r28, 0x93	; 147
     8f8:	d0 40       	sbci	r29, 0x00	; 0
     8fa:	cd 56       	subi	r28, 0x6D	; 109
     8fc:	df 4f       	sbci	r29, 0xFF	; 255
     8fe:	88 81       	ld	r24, Y
     900:	99 81       	ldd	r25, Y+1	; 0x01
     902:	aa 81       	ldd	r26, Y+2	; 0x02
     904:	bb 81       	ldd	r27, Y+3	; 0x03
     906:	c3 59       	subi	r28, 0x93	; 147
     908:	d0 40       	sbci	r29, 0x00	; 0
     90a:	8f 83       	std	Y+7, r24	; 0x07
     90c:	98 87       	std	Y+8, r25	; 0x08
     90e:	a9 87       	std	Y+9, r26	; 0x09
     910:	ba 87       	std	Y+10, r27	; 0x0a
	__tmp2 = ((F_CPU) / 4e6) * __us;
     912:	20 e0       	ldi	r18, 0x00	; 0
     914:	30 e0       	ldi	r19, 0x00	; 0
     916:	40 e8       	ldi	r20, 0x80	; 128
     918:	50 e4       	ldi	r21, 0x40	; 64
     91a:	6b 81       	ldd	r22, Y+3	; 0x03
     91c:	7c 81       	ldd	r23, Y+4	; 0x04
     91e:	8d 81       	ldd	r24, Y+5	; 0x05
     920:	9e 81       	ldd	r25, Y+6	; 0x06
     922:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     926:	c9 56       	subi	r28, 0x69	; 105
     928:	df 4f       	sbci	r29, 0xFF	; 255
     92a:	68 83       	st	Y, r22
     92c:	79 83       	std	Y+1, r23	; 0x01
     92e:	8a 83       	std	Y+2, r24	; 0x02
     930:	9b 83       	std	Y+3, r25	; 0x03
     932:	c7 59       	subi	r28, 0x97	; 151
     934:	d0 40       	sbci	r29, 0x00	; 0
     936:	c9 56       	subi	r28, 0x69	; 105
     938:	df 4f       	sbci	r29, 0xFF	; 255
     93a:	88 81       	ld	r24, Y
     93c:	99 81       	ldd	r25, Y+1	; 0x01
     93e:	aa 81       	ldd	r26, Y+2	; 0x02
     940:	bb 81       	ldd	r27, Y+3	; 0x03
     942:	c7 59       	subi	r28, 0x97	; 151
     944:	d0 40       	sbci	r29, 0x00	; 0
     946:	8b 87       	std	Y+11, r24	; 0x0b
     948:	9c 87       	std	Y+12, r25	; 0x0c
     94a:	ad 87       	std	Y+13, r26	; 0x0d
     94c:	be 87       	std	Y+14, r27	; 0x0e
	if (__tmp < 1.0)
     94e:	20 e0       	ldi	r18, 0x00	; 0
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	40 e8       	ldi	r20, 0x80	; 128
     954:	5f e3       	ldi	r21, 0x3F	; 63
     956:	6f 81       	ldd	r22, Y+7	; 0x07
     958:	78 85       	ldd	r23, Y+8	; 0x08
     95a:	89 85       	ldd	r24, Y+9	; 0x09
     95c:	9a 85       	ldd	r25, Y+10	; 0x0a
     95e:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     962:	88 23       	and	r24, r24
     964:	1c f4       	brge	.+6      	; 0x96c <__stack+0x6d>
		__ticks = 1;
     966:	81 e0       	ldi	r24, 0x01	; 1
     968:	8f 87       	std	Y+15, r24	; 0x0f
     96a:	18 c1       	rjmp	.+560    	; 0xb9c <__stack+0x29d>
	else if (__tmp2 > 65535)
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	3f ef       	ldi	r19, 0xFF	; 255
     970:	4f e7       	ldi	r20, 0x7F	; 127
     972:	57 e4       	ldi	r21, 0x47	; 71
     974:	6b 85       	ldd	r22, Y+11	; 0x0b
     976:	7c 85       	ldd	r23, Y+12	; 0x0c
     978:	8d 85       	ldd	r24, Y+13	; 0x0d
     97a:	9e 85       	ldd	r25, Y+14	; 0x0e
     97c:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     980:	18 16       	cp	r1, r24
     982:	0c f0       	brlt	.+2      	; 0x986 <__stack+0x87>
     984:	c9 c0       	rjmp	.+402    	; 0xb18 <__stack+0x219>
		_delay_ms(__us / 1000.0);
     986:	20 e0       	ldi	r18, 0x00	; 0
     988:	30 e0       	ldi	r19, 0x00	; 0
     98a:	4a e7       	ldi	r20, 0x7A	; 122
     98c:	54 e4       	ldi	r21, 0x44	; 68
     98e:	6b 81       	ldd	r22, Y+3	; 0x03
     990:	7c 81       	ldd	r23, Y+4	; 0x04
     992:	8d 81       	ldd	r24, Y+5	; 0x05
     994:	9e 81       	ldd	r25, Y+6	; 0x06
     996:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
     99a:	c5 56       	subi	r28, 0x65	; 101
     99c:	df 4f       	sbci	r29, 0xFF	; 255
     99e:	68 83       	st	Y, r22
     9a0:	79 83       	std	Y+1, r23	; 0x01
     9a2:	8a 83       	std	Y+2, r24	; 0x02
     9a4:	9b 83       	std	Y+3, r25	; 0x03
     9a6:	cb 59       	subi	r28, 0x9B	; 155
     9a8:	d0 40       	sbci	r29, 0x00	; 0
     9aa:	c5 56       	subi	r28, 0x65	; 101
     9ac:	df 4f       	sbci	r29, 0xFF	; 255
     9ae:	88 81       	ld	r24, Y
     9b0:	99 81       	ldd	r25, Y+1	; 0x01
     9b2:	aa 81       	ldd	r26, Y+2	; 0x02
     9b4:	bb 81       	ldd	r27, Y+3	; 0x03
     9b6:	cb 59       	subi	r28, 0x9B	; 155
     9b8:	d0 40       	sbci	r29, 0x00	; 0
     9ba:	88 8b       	std	Y+16, r24	; 0x10
     9bc:	99 8b       	std	Y+17, r25	; 0x11
     9be:	aa 8b       	std	Y+18, r26	; 0x12
     9c0:	bb 8b       	std	Y+19, r27	; 0x13
	__tmp = ((F_CPU) / 4e3) * __ms;
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	4a e7       	ldi	r20, 0x7A	; 122
     9c8:	55 e4       	ldi	r21, 0x45	; 69
     9ca:	68 89       	ldd	r22, Y+16	; 0x10
     9cc:	79 89       	ldd	r23, Y+17	; 0x11
     9ce:	8a 89       	ldd	r24, Y+18	; 0x12
     9d0:	9b 89       	ldd	r25, Y+19	; 0x13
     9d2:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     9d6:	c1 56       	subi	r28, 0x61	; 97
     9d8:	df 4f       	sbci	r29, 0xFF	; 255
     9da:	68 83       	st	Y, r22
     9dc:	79 83       	std	Y+1, r23	; 0x01
     9de:	8a 83       	std	Y+2, r24	; 0x02
     9e0:	9b 83       	std	Y+3, r25	; 0x03
     9e2:	cf 59       	subi	r28, 0x9F	; 159
     9e4:	d0 40       	sbci	r29, 0x00	; 0
     9e6:	c1 56       	subi	r28, 0x61	; 97
     9e8:	df 4f       	sbci	r29, 0xFF	; 255
     9ea:	88 81       	ld	r24, Y
     9ec:	99 81       	ldd	r25, Y+1	; 0x01
     9ee:	aa 81       	ldd	r26, Y+2	; 0x02
     9f0:	bb 81       	ldd	r27, Y+3	; 0x03
     9f2:	cf 59       	subi	r28, 0x9F	; 159
     9f4:	d0 40       	sbci	r29, 0x00	; 0
     9f6:	8c 8b       	std	Y+20, r24	; 0x14
     9f8:	9d 8b       	std	Y+21, r25	; 0x15
     9fa:	ae 8b       	std	Y+22, r26	; 0x16
     9fc:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     9fe:	20 e0       	ldi	r18, 0x00	; 0
     a00:	30 e0       	ldi	r19, 0x00	; 0
     a02:	40 e8       	ldi	r20, 0x80	; 128
     a04:	5f e3       	ldi	r21, 0x3F	; 63
     a06:	6c 89       	ldd	r22, Y+20	; 0x14
     a08:	7d 89       	ldd	r23, Y+21	; 0x15
     a0a:	8e 89       	ldd	r24, Y+22	; 0x16
     a0c:	9f 89       	ldd	r25, Y+23	; 0x17
     a0e:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     a12:	88 23       	and	r24, r24
     a14:	2c f4       	brge	.+10     	; 0xa20 <__stack+0x121>
		__ticks = 1;
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	99 8f       	std	Y+25, r25	; 0x19
     a1c:	88 8f       	std	Y+24, r24	; 0x18
     a1e:	71 c0       	rjmp	.+226    	; 0xb02 <__stack+0x203>
	else if (__tmp > 65535)
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	3f ef       	ldi	r19, 0xFF	; 255
     a24:	4f e7       	ldi	r20, 0x7F	; 127
     a26:	57 e4       	ldi	r21, 0x47	; 71
     a28:	6c 89       	ldd	r22, Y+20	; 0x14
     a2a:	7d 89       	ldd	r23, Y+21	; 0x15
     a2c:	8e 89       	ldd	r24, Y+22	; 0x16
     a2e:	9f 89       	ldd	r25, Y+23	; 0x17
     a30:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     a34:	18 16       	cp	r1, r24
     a36:	0c f0       	brlt	.+2      	; 0xa3a <__stack+0x13b>
     a38:	4e c0       	rjmp	.+156    	; 0xad6 <__stack+0x1d7>
		__ticks = (uint16_t) (__ms * 10.0);
     a3a:	20 e0       	ldi	r18, 0x00	; 0
     a3c:	30 e0       	ldi	r19, 0x00	; 0
     a3e:	40 e2       	ldi	r20, 0x20	; 32
     a40:	51 e4       	ldi	r21, 0x41	; 65
     a42:	68 89       	ldd	r22, Y+16	; 0x10
     a44:	79 89       	ldd	r23, Y+17	; 0x11
     a46:	8a 89       	ldd	r24, Y+18	; 0x12
     a48:	9b 89       	ldd	r25, Y+19	; 0x13
     a4a:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     a4e:	cd 55       	subi	r28, 0x5D	; 93
     a50:	df 4f       	sbci	r29, 0xFF	; 255
     a52:	68 83       	st	Y, r22
     a54:	79 83       	std	Y+1, r23	; 0x01
     a56:	8a 83       	std	Y+2, r24	; 0x02
     a58:	9b 83       	std	Y+3, r25	; 0x03
     a5a:	c3 5a       	subi	r28, 0xA3	; 163
     a5c:	d0 40       	sbci	r29, 0x00	; 0
     a5e:	cd 55       	subi	r28, 0x5D	; 93
     a60:	df 4f       	sbci	r29, 0xFF	; 255
     a62:	88 81       	ld	r24, Y
     a64:	99 81       	ldd	r25, Y+1	; 0x01
     a66:	aa 81       	ldd	r26, Y+2	; 0x02
     a68:	bb 81       	ldd	r27, Y+3	; 0x03
     a6a:	c3 5a       	subi	r28, 0xA3	; 163
     a6c:	d0 40       	sbci	r29, 0x00	; 0
     a6e:	a7 96       	adiw	r28, 0x27	; 39
     a70:	8c af       	std	Y+60, r24	; 0x3c
     a72:	9d af       	std	Y+61, r25	; 0x3d
     a74:	ae af       	std	Y+62, r26	; 0x3e
     a76:	bf af       	std	Y+63, r27	; 0x3f
     a78:	a7 97       	sbiw	r28, 0x27	; 39
     a7a:	a7 96       	adiw	r28, 0x27	; 39
     a7c:	6c ad       	ldd	r22, Y+60	; 0x3c
     a7e:	7d ad       	ldd	r23, Y+61	; 0x3d
     a80:	8e ad       	ldd	r24, Y+62	; 0x3e
     a82:	9f ad       	ldd	r25, Y+63	; 0x3f
     a84:	a7 97       	sbiw	r28, 0x27	; 39
     a86:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     a8a:	c9 55       	subi	r28, 0x59	; 89
     a8c:	df 4f       	sbci	r29, 0xFF	; 255
     a8e:	68 83       	st	Y, r22
     a90:	79 83       	std	Y+1, r23	; 0x01
     a92:	8a 83       	std	Y+2, r24	; 0x02
     a94:	9b 83       	std	Y+3, r25	; 0x03
     a96:	c7 5a       	subi	r28, 0xA7	; 167
     a98:	d0 40       	sbci	r29, 0x00	; 0
     a9a:	c9 55       	subi	r28, 0x59	; 89
     a9c:	df 4f       	sbci	r29, 0xFF	; 255
     a9e:	a8 81       	ld	r26, Y
     aa0:	b9 81       	ldd	r27, Y+1	; 0x01
     aa2:	c7 5a       	subi	r28, 0xA7	; 167
     aa4:	d0 40       	sbci	r29, 0x00	; 0
     aa6:	b9 8f       	std	Y+25, r27	; 0x19
     aa8:	a8 8f       	std	Y+24, r26	; 0x18
		while(__ticks)
     aaa:	10 c0       	rjmp	.+32     	; 0xacc <__stack+0x1cd>
     aac:	80 e9       	ldi	r24, 0x90	; 144
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	9b 8f       	std	Y+27, r25	; 0x1b
     ab2:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
     ab4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     ab6:	9b 8d       	ldd	r25, Y+27	; 0x1b
     ab8:	01 97       	sbiw	r24, 0x01	; 1
     aba:	f1 f7       	brne	.-4      	; 0xab8 <__stack+0x1b9>
     abc:	9b 8f       	std	Y+27, r25	; 0x1b
     abe:	8a 8f       	std	Y+26, r24	; 0x1a
}
     ac0:	00 00       	nop
			__ticks --;
     ac2:	88 8d       	ldd	r24, Y+24	; 0x18
     ac4:	99 8d       	ldd	r25, Y+25	; 0x19
     ac6:	01 97       	sbiw	r24, 0x01	; 1
     ac8:	99 8f       	std	Y+25, r25	; 0x19
     aca:	88 8f       	std	Y+24, r24	; 0x18
		while(__ticks)
     acc:	88 8d       	ldd	r24, Y+24	; 0x18
     ace:	99 8d       	ldd	r25, Y+25	; 0x19
     ad0:	89 2b       	or	r24, r25
     ad2:	61 f7       	brne	.-40     	; 0xaac <__stack+0x1ad>
		return;
     ad4:	63 c0       	rjmp	.+198    	; 0xb9c <__stack+0x29d>
		__ticks = (uint16_t)__tmp;
     ad6:	6c 89       	ldd	r22, Y+20	; 0x14
     ad8:	7d 89       	ldd	r23, Y+21	; 0x15
     ada:	8e 89       	ldd	r24, Y+22	; 0x16
     adc:	9f 89       	ldd	r25, Y+23	; 0x17
     ade:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     ae2:	c5 55       	subi	r28, 0x55	; 85
     ae4:	df 4f       	sbci	r29, 0xFF	; 255
     ae6:	68 83       	st	Y, r22
     ae8:	79 83       	std	Y+1, r23	; 0x01
     aea:	8a 83       	std	Y+2, r24	; 0x02
     aec:	9b 83       	std	Y+3, r25	; 0x03
     aee:	cb 5a       	subi	r28, 0xAB	; 171
     af0:	d0 40       	sbci	r29, 0x00	; 0
     af2:	c5 55       	subi	r28, 0x55	; 85
     af4:	df 4f       	sbci	r29, 0xFF	; 255
     af6:	e8 81       	ld	r30, Y
     af8:	f9 81       	ldd	r31, Y+1	; 0x01
     afa:	cb 5a       	subi	r28, 0xAB	; 171
     afc:	d0 40       	sbci	r29, 0x00	; 0
     afe:	f9 8f       	std	Y+25, r31	; 0x19
     b00:	e8 8f       	std	Y+24, r30	; 0x18
     b02:	88 8d       	ldd	r24, Y+24	; 0x18
     b04:	99 8d       	ldd	r25, Y+25	; 0x19
     b06:	9d 8f       	std	Y+29, r25	; 0x1d
     b08:	8c 8f       	std	Y+28, r24	; 0x1c
	__asm__ volatile (
     b0a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     b0c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     b0e:	01 97       	sbiw	r24, 0x01	; 1
     b10:	f1 f7       	brne	.-4      	; 0xb0e <__stack+0x20f>
     b12:	9d 8f       	std	Y+29, r25	; 0x1d
     b14:	8c 8f       	std	Y+28, r24	; 0x1c
}
     b16:	42 c0       	rjmp	.+132    	; 0xb9c <__stack+0x29d>
	else if (__tmp > 255)
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	4f e7       	ldi	r20, 0x7F	; 127
     b1e:	53 e4       	ldi	r21, 0x43	; 67
     b20:	6f 81       	ldd	r22, Y+7	; 0x07
     b22:	78 85       	ldd	r23, Y+8	; 0x08
     b24:	89 85       	ldd	r24, Y+9	; 0x09
     b26:	9a 85       	ldd	r25, Y+10	; 0x0a
     b28:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     b2c:	18 16       	cp	r1, r24
     b2e:	14 f5       	brge	.+68     	; 0xb74 <__stack+0x275>
		uint16_t __ticks=(uint16_t)__tmp2;
     b30:	6b 85       	ldd	r22, Y+11	; 0x0b
     b32:	7c 85       	ldd	r23, Y+12	; 0x0c
     b34:	8d 85       	ldd	r24, Y+13	; 0x0d
     b36:	9e 85       	ldd	r25, Y+14	; 0x0e
     b38:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     b3c:	c1 55       	subi	r28, 0x51	; 81
     b3e:	df 4f       	sbci	r29, 0xFF	; 255
     b40:	68 83       	st	Y, r22
     b42:	79 83       	std	Y+1, r23	; 0x01
     b44:	8a 83       	std	Y+2, r24	; 0x02
     b46:	9b 83       	std	Y+3, r25	; 0x03
     b48:	cf 5a       	subi	r28, 0xAF	; 175
     b4a:	d0 40       	sbci	r29, 0x00	; 0
     b4c:	c1 55       	subi	r28, 0x51	; 81
     b4e:	df 4f       	sbci	r29, 0xFF	; 255
     b50:	88 81       	ld	r24, Y
     b52:	99 81       	ldd	r25, Y+1	; 0x01
     b54:	cf 5a       	subi	r28, 0xAF	; 175
     b56:	d0 40       	sbci	r29, 0x00	; 0
     b58:	9f 8f       	std	Y+31, r25	; 0x1f
     b5a:	8e 8f       	std	Y+30, r24	; 0x1e
     b5c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b5e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     b60:	99 a3       	std	Y+33, r25	; 0x21
     b62:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
     b64:	88 a1       	ldd	r24, Y+32	; 0x20
     b66:	99 a1       	ldd	r25, Y+33	; 0x21
     b68:	01 97       	sbiw	r24, 0x01	; 1
     b6a:	f1 f7       	brne	.-4      	; 0xb68 <__stack+0x269>
     b6c:	99 a3       	std	Y+33, r25	; 0x21
     b6e:	88 a3       	std	Y+32, r24	; 0x20
}
     b70:	00 00       	nop
		return;
     b72:	28 c0       	rjmp	.+80     	; 0xbc4 <__stack+0x2c5>
		__ticks = (uint8_t)__tmp;
     b74:	6f 81       	ldd	r22, Y+7	; 0x07
     b76:	78 85       	ldd	r23, Y+8	; 0x08
     b78:	89 85       	ldd	r24, Y+9	; 0x09
     b7a:	9a 85       	ldd	r25, Y+10	; 0x0a
     b7c:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     b80:	cd 54       	subi	r28, 0x4D	; 77
     b82:	df 4f       	sbci	r29, 0xFF	; 255
     b84:	68 83       	st	Y, r22
     b86:	79 83       	std	Y+1, r23	; 0x01
     b88:	8a 83       	std	Y+2, r24	; 0x02
     b8a:	9b 83       	std	Y+3, r25	; 0x03
     b8c:	c3 5b       	subi	r28, 0xB3	; 179
     b8e:	d0 40       	sbci	r29, 0x00	; 0
     b90:	cd 54       	subi	r28, 0x4D	; 77
     b92:	df 4f       	sbci	r29, 0xFF	; 255
     b94:	98 81       	ld	r25, Y
     b96:	c3 5b       	subi	r28, 0xB3	; 179
     b98:	d0 40       	sbci	r29, 0x00	; 0
     b9a:	9f 87       	std	Y+15, r25	; 0x0f
     b9c:	ce 01       	movw	r24, r28
     b9e:	8f 5b       	subi	r24, 0xBF	; 191
     ba0:	9f 4f       	sbci	r25, 0xFF	; 255
     ba2:	2f 85       	ldd	r18, Y+15	; 0x0f
     ba4:	dc 01       	movw	r26, r24
     ba6:	2c 93       	st	X, r18
	__asm__ volatile (
     ba8:	ce 01       	movw	r24, r28
     baa:	8f 5b       	subi	r24, 0xBF	; 191
     bac:	9f 4f       	sbci	r25, 0xFF	; 255
     bae:	fc 01       	movw	r30, r24
     bb0:	80 81       	ld	r24, Z
     bb2:	28 2f       	mov	r18, r24
     bb4:	2a 95       	dec	r18
     bb6:	f1 f7       	brne	.-4      	; 0xbb4 <__stack+0x2b5>
     bb8:	ce 01       	movw	r24, r28
     bba:	8f 5b       	subi	r24, 0xBF	; 191
     bbc:	9f 4f       	sbci	r25, 0xFF	; 255
     bbe:	dc 01       	movw	r26, r24
     bc0:	2c 93       	st	X, r18
}
     bc2:	00 00       	nop
        
        lcd_e_delay();                       /* Enable 500ns low       */
        
        lcd_e_high();
     bc4:	85 e2       	ldi	r24, 0x25	; 37
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	fc 01       	movw	r30, r24
     bca:	20 81       	ld	r18, Z
     bcc:	85 e2       	ldi	r24, 0x25	; 37
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	20 61       	ori	r18, 0x10	; 16
     bd2:	dc 01       	movw	r26, r24
     bd4:	2c 93       	st	X, r18
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	a0 e8       	ldi	r26, 0x80	; 128
     bdc:	bf e3       	ldi	r27, 0x3F	; 63
     bde:	8c a7       	std	Y+44, r24	; 0x2c
     be0:	9d a7       	std	Y+45, r25	; 0x2d
     be2:	ae a7       	std	Y+46, r26	; 0x2e
     be4:	bf a7       	std	Y+47, r27	; 0x2f
	__tmp = ((F_CPU) / 3e6) * __us;
     be6:	2b ea       	ldi	r18, 0xAB	; 171
     be8:	3a ea       	ldi	r19, 0xAA	; 170
     bea:	4a ea       	ldi	r20, 0xAA	; 170
     bec:	50 e4       	ldi	r21, 0x40	; 64
     bee:	6c a5       	ldd	r22, Y+44	; 0x2c
     bf0:	7d a5       	ldd	r23, Y+45	; 0x2d
     bf2:	8e a5       	ldd	r24, Y+46	; 0x2e
     bf4:	9f a5       	ldd	r25, Y+47	; 0x2f
     bf6:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     bfa:	c9 54       	subi	r28, 0x49	; 73
     bfc:	df 4f       	sbci	r29, 0xFF	; 255
     bfe:	68 83       	st	Y, r22
     c00:	79 83       	std	Y+1, r23	; 0x01
     c02:	8a 83       	std	Y+2, r24	; 0x02
     c04:	9b 83       	std	Y+3, r25	; 0x03
     c06:	c7 5b       	subi	r28, 0xB7	; 183
     c08:	d0 40       	sbci	r29, 0x00	; 0
     c0a:	c9 54       	subi	r28, 0x49	; 73
     c0c:	df 4f       	sbci	r29, 0xFF	; 255
     c0e:	88 81       	ld	r24, Y
     c10:	99 81       	ldd	r25, Y+1	; 0x01
     c12:	aa 81       	ldd	r26, Y+2	; 0x02
     c14:	bb 81       	ldd	r27, Y+3	; 0x03
     c16:	c7 5b       	subi	r28, 0xB7	; 183
     c18:	d0 40       	sbci	r29, 0x00	; 0
     c1a:	88 ab       	std	Y+48, r24	; 0x30
     c1c:	99 ab       	std	Y+49, r25	; 0x31
     c1e:	aa ab       	std	Y+50, r26	; 0x32
     c20:	bb ab       	std	Y+51, r27	; 0x33
	__tmp2 = ((F_CPU) / 4e6) * __us;
     c22:	20 e0       	ldi	r18, 0x00	; 0
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	40 e8       	ldi	r20, 0x80	; 128
     c28:	50 e4       	ldi	r21, 0x40	; 64
     c2a:	6c a5       	ldd	r22, Y+44	; 0x2c
     c2c:	7d a5       	ldd	r23, Y+45	; 0x2d
     c2e:	8e a5       	ldd	r24, Y+46	; 0x2e
     c30:	9f a5       	ldd	r25, Y+47	; 0x2f
     c32:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     c36:	c5 54       	subi	r28, 0x45	; 69
     c38:	df 4f       	sbci	r29, 0xFF	; 255
     c3a:	68 83       	st	Y, r22
     c3c:	79 83       	std	Y+1, r23	; 0x01
     c3e:	8a 83       	std	Y+2, r24	; 0x02
     c40:	9b 83       	std	Y+3, r25	; 0x03
     c42:	cb 5b       	subi	r28, 0xBB	; 187
     c44:	d0 40       	sbci	r29, 0x00	; 0
     c46:	c5 54       	subi	r28, 0x45	; 69
     c48:	df 4f       	sbci	r29, 0xFF	; 255
     c4a:	88 81       	ld	r24, Y
     c4c:	99 81       	ldd	r25, Y+1	; 0x01
     c4e:	aa 81       	ldd	r26, Y+2	; 0x02
     c50:	bb 81       	ldd	r27, Y+3	; 0x03
     c52:	cb 5b       	subi	r28, 0xBB	; 187
     c54:	d0 40       	sbci	r29, 0x00	; 0
     c56:	8c ab       	std	Y+52, r24	; 0x34
     c58:	9d ab       	std	Y+53, r25	; 0x35
     c5a:	ae ab       	std	Y+54, r26	; 0x36
     c5c:	bf ab       	std	Y+55, r27	; 0x37
	if (__tmp < 1.0)
     c5e:	20 e0       	ldi	r18, 0x00	; 0
     c60:	30 e0       	ldi	r19, 0x00	; 0
     c62:	40 e8       	ldi	r20, 0x80	; 128
     c64:	5f e3       	ldi	r21, 0x3F	; 63
     c66:	68 a9       	ldd	r22, Y+48	; 0x30
     c68:	79 a9       	ldd	r23, Y+49	; 0x31
     c6a:	8a a9       	ldd	r24, Y+50	; 0x32
     c6c:	9b a9       	ldd	r25, Y+51	; 0x33
     c6e:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     c72:	88 23       	and	r24, r24
     c74:	1c f4       	brge	.+6      	; 0xc7c <__stack+0x37d>
		__ticks = 1;
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	89 83       	std	Y+1, r24	; 0x01
     c7a:	18 c1       	rjmp	.+560    	; 0xeac <__stack+0x5ad>
	else if (__tmp2 > 65535)
     c7c:	20 e0       	ldi	r18, 0x00	; 0
     c7e:	3f ef       	ldi	r19, 0xFF	; 255
     c80:	4f e7       	ldi	r20, 0x7F	; 127
     c82:	57 e4       	ldi	r21, 0x47	; 71
     c84:	6c a9       	ldd	r22, Y+52	; 0x34
     c86:	7d a9       	ldd	r23, Y+53	; 0x35
     c88:	8e a9       	ldd	r24, Y+54	; 0x36
     c8a:	9f a9       	ldd	r25, Y+55	; 0x37
     c8c:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     c90:	18 16       	cp	r1, r24
     c92:	0c f0       	brlt	.+2      	; 0xc96 <__stack+0x397>
     c94:	c9 c0       	rjmp	.+402    	; 0xe28 <__stack+0x529>
		_delay_ms(__us / 1000.0);
     c96:	20 e0       	ldi	r18, 0x00	; 0
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	4a e7       	ldi	r20, 0x7A	; 122
     c9c:	54 e4       	ldi	r21, 0x44	; 68
     c9e:	6c a5       	ldd	r22, Y+44	; 0x2c
     ca0:	7d a5       	ldd	r23, Y+45	; 0x2d
     ca2:	8e a5       	ldd	r24, Y+46	; 0x2e
     ca4:	9f a5       	ldd	r25, Y+47	; 0x2f
     ca6:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
     caa:	c1 54       	subi	r28, 0x41	; 65
     cac:	df 4f       	sbci	r29, 0xFF	; 255
     cae:	68 83       	st	Y, r22
     cb0:	79 83       	std	Y+1, r23	; 0x01
     cb2:	8a 83       	std	Y+2, r24	; 0x02
     cb4:	9b 83       	std	Y+3, r25	; 0x03
     cb6:	cf 5b       	subi	r28, 0xBF	; 191
     cb8:	d0 40       	sbci	r29, 0x00	; 0
     cba:	c1 54       	subi	r28, 0x41	; 65
     cbc:	df 4f       	sbci	r29, 0xFF	; 255
     cbe:	88 81       	ld	r24, Y
     cc0:	99 81       	ldd	r25, Y+1	; 0x01
     cc2:	aa 81       	ldd	r26, Y+2	; 0x02
     cc4:	bb 81       	ldd	r27, Y+3	; 0x03
     cc6:	cf 5b       	subi	r28, 0xBF	; 191
     cc8:	d0 40       	sbci	r29, 0x00	; 0
     cca:	88 af       	std	Y+56, r24	; 0x38
     ccc:	99 af       	std	Y+57, r25	; 0x39
     cce:	aa af       	std	Y+58, r26	; 0x3a
     cd0:	bb af       	std	Y+59, r27	; 0x3b
	__tmp = ((F_CPU) / 4e3) * __ms;
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	4a e7       	ldi	r20, 0x7A	; 122
     cd8:	55 e4       	ldi	r21, 0x45	; 69
     cda:	68 ad       	ldd	r22, Y+56	; 0x38
     cdc:	79 ad       	ldd	r23, Y+57	; 0x39
     cde:	8a ad       	ldd	r24, Y+58	; 0x3a
     ce0:	9b ad       	ldd	r25, Y+59	; 0x3b
     ce2:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     ce6:	cd 53       	subi	r28, 0x3D	; 61
     ce8:	df 4f       	sbci	r29, 0xFF	; 255
     cea:	68 83       	st	Y, r22
     cec:	79 83       	std	Y+1, r23	; 0x01
     cee:	8a 83       	std	Y+2, r24	; 0x02
     cf0:	9b 83       	std	Y+3, r25	; 0x03
     cf2:	c3 5c       	subi	r28, 0xC3	; 195
     cf4:	d0 40       	sbci	r29, 0x00	; 0
     cf6:	cd 53       	subi	r28, 0x3D	; 61
     cf8:	df 4f       	sbci	r29, 0xFF	; 255
     cfa:	88 81       	ld	r24, Y
     cfc:	99 81       	ldd	r25, Y+1	; 0x01
     cfe:	aa 81       	ldd	r26, Y+2	; 0x02
     d00:	bb 81       	ldd	r27, Y+3	; 0x03
     d02:	c3 5c       	subi	r28, 0xC3	; 195
     d04:	d0 40       	sbci	r29, 0x00	; 0
     d06:	8c af       	std	Y+60, r24	; 0x3c
     d08:	9d af       	std	Y+61, r25	; 0x3d
     d0a:	ae af       	std	Y+62, r26	; 0x3e
     d0c:	bf af       	std	Y+63, r27	; 0x3f
	if (__tmp < 1.0)
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	40 e8       	ldi	r20, 0x80	; 128
     d14:	5f e3       	ldi	r21, 0x3F	; 63
     d16:	6c ad       	ldd	r22, Y+60	; 0x3c
     d18:	7d ad       	ldd	r23, Y+61	; 0x3d
     d1a:	8e ad       	ldd	r24, Y+62	; 0x3e
     d1c:	9f ad       	ldd	r25, Y+63	; 0x3f
     d1e:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     d22:	88 23       	and	r24, r24
     d24:	2c f4       	brge	.+10     	; 0xd30 <__stack+0x431>
		__ticks = 1;
     d26:	81 e0       	ldi	r24, 0x01	; 1
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	9f a3       	std	Y+39, r25	; 0x27
     d2c:	8e a3       	std	Y+38, r24	; 0x26
     d2e:	71 c0       	rjmp	.+226    	; 0xe12 <__stack+0x513>
	else if (__tmp > 65535)
     d30:	20 e0       	ldi	r18, 0x00	; 0
     d32:	3f ef       	ldi	r19, 0xFF	; 255
     d34:	4f e7       	ldi	r20, 0x7F	; 127
     d36:	57 e4       	ldi	r21, 0x47	; 71
     d38:	6c ad       	ldd	r22, Y+60	; 0x3c
     d3a:	7d ad       	ldd	r23, Y+61	; 0x3d
     d3c:	8e ad       	ldd	r24, Y+62	; 0x3e
     d3e:	9f ad       	ldd	r25, Y+63	; 0x3f
     d40:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     d44:	18 16       	cp	r1, r24
     d46:	0c f0       	brlt	.+2      	; 0xd4a <__stack+0x44b>
     d48:	4e c0       	rjmp	.+156    	; 0xde6 <__stack+0x4e7>
		__ticks = (uint16_t) (__ms * 10.0);
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	40 e2       	ldi	r20, 0x20	; 32
     d50:	51 e4       	ldi	r21, 0x41	; 65
     d52:	68 ad       	ldd	r22, Y+56	; 0x38
     d54:	79 ad       	ldd	r23, Y+57	; 0x39
     d56:	8a ad       	ldd	r24, Y+58	; 0x3a
     d58:	9b ad       	ldd	r25, Y+59	; 0x3b
     d5a:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     d5e:	c9 53       	subi	r28, 0x39	; 57
     d60:	df 4f       	sbci	r29, 0xFF	; 255
     d62:	68 83       	st	Y, r22
     d64:	79 83       	std	Y+1, r23	; 0x01
     d66:	8a 83       	std	Y+2, r24	; 0x02
     d68:	9b 83       	std	Y+3, r25	; 0x03
     d6a:	c7 5c       	subi	r28, 0xC7	; 199
     d6c:	d0 40       	sbci	r29, 0x00	; 0
     d6e:	c9 53       	subi	r28, 0x39	; 57
     d70:	df 4f       	sbci	r29, 0xFF	; 255
     d72:	88 81       	ld	r24, Y
     d74:	99 81       	ldd	r25, Y+1	; 0x01
     d76:	aa 81       	ldd	r26, Y+2	; 0x02
     d78:	bb 81       	ldd	r27, Y+3	; 0x03
     d7a:	c7 5c       	subi	r28, 0xC7	; 199
     d7c:	d0 40       	sbci	r29, 0x00	; 0
     d7e:	ab 96       	adiw	r28, 0x2b	; 43
     d80:	8c af       	std	Y+60, r24	; 0x3c
     d82:	9d af       	std	Y+61, r25	; 0x3d
     d84:	ae af       	std	Y+62, r26	; 0x3e
     d86:	bf af       	std	Y+63, r27	; 0x3f
     d88:	ab 97       	sbiw	r28, 0x2b	; 43
     d8a:	ab 96       	adiw	r28, 0x2b	; 43
     d8c:	6c ad       	ldd	r22, Y+60	; 0x3c
     d8e:	7d ad       	ldd	r23, Y+61	; 0x3d
     d90:	8e ad       	ldd	r24, Y+62	; 0x3e
     d92:	9f ad       	ldd	r25, Y+63	; 0x3f
     d94:	ab 97       	sbiw	r28, 0x2b	; 43
     d96:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     d9a:	c5 53       	subi	r28, 0x35	; 53
     d9c:	df 4f       	sbci	r29, 0xFF	; 255
     d9e:	68 83       	st	Y, r22
     da0:	79 83       	std	Y+1, r23	; 0x01
     da2:	8a 83       	std	Y+2, r24	; 0x02
     da4:	9b 83       	std	Y+3, r25	; 0x03
     da6:	cb 5c       	subi	r28, 0xCB	; 203
     da8:	d0 40       	sbci	r29, 0x00	; 0
     daa:	c5 53       	subi	r28, 0x35	; 53
     dac:	df 4f       	sbci	r29, 0xFF	; 255
     dae:	a8 81       	ld	r26, Y
     db0:	b9 81       	ldd	r27, Y+1	; 0x01
     db2:	cb 5c       	subi	r28, 0xCB	; 203
     db4:	d0 40       	sbci	r29, 0x00	; 0
     db6:	bf a3       	std	Y+39, r27	; 0x27
     db8:	ae a3       	std	Y+38, r26	; 0x26
		while(__ticks)
     dba:	10 c0       	rjmp	.+32     	; 0xddc <__stack+0x4dd>
     dbc:	80 e9       	ldi	r24, 0x90	; 144
     dbe:	91 e0       	ldi	r25, 0x01	; 1
     dc0:	9b a7       	std	Y+43, r25	; 0x2b
     dc2:	8a a7       	std	Y+42, r24	; 0x2a
	__asm__ volatile (
     dc4:	8a a5       	ldd	r24, Y+42	; 0x2a
     dc6:	9b a5       	ldd	r25, Y+43	; 0x2b
     dc8:	01 97       	sbiw	r24, 0x01	; 1
     dca:	f1 f7       	brne	.-4      	; 0xdc8 <__stack+0x4c9>
     dcc:	9b a7       	std	Y+43, r25	; 0x2b
     dce:	8a a7       	std	Y+42, r24	; 0x2a
}
     dd0:	00 00       	nop
			__ticks --;
     dd2:	8e a1       	ldd	r24, Y+38	; 0x26
     dd4:	9f a1       	ldd	r25, Y+39	; 0x27
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	9f a3       	std	Y+39, r25	; 0x27
     dda:	8e a3       	std	Y+38, r24	; 0x26
		while(__ticks)
     ddc:	8e a1       	ldd	r24, Y+38	; 0x26
     dde:	9f a1       	ldd	r25, Y+39	; 0x27
     de0:	89 2b       	or	r24, r25
     de2:	61 f7       	brne	.-40     	; 0xdbc <__stack+0x4bd>
		return;
     de4:	63 c0       	rjmp	.+198    	; 0xeac <__stack+0x5ad>
		__ticks = (uint16_t)__tmp;
     de6:	6c ad       	ldd	r22, Y+60	; 0x3c
     de8:	7d ad       	ldd	r23, Y+61	; 0x3d
     dea:	8e ad       	ldd	r24, Y+62	; 0x3e
     dec:	9f ad       	ldd	r25, Y+63	; 0x3f
     dee:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     df2:	c1 53       	subi	r28, 0x31	; 49
     df4:	df 4f       	sbci	r29, 0xFF	; 255
     df6:	68 83       	st	Y, r22
     df8:	79 83       	std	Y+1, r23	; 0x01
     dfa:	8a 83       	std	Y+2, r24	; 0x02
     dfc:	9b 83       	std	Y+3, r25	; 0x03
     dfe:	cf 5c       	subi	r28, 0xCF	; 207
     e00:	d0 40       	sbci	r29, 0x00	; 0
     e02:	c1 53       	subi	r28, 0x31	; 49
     e04:	df 4f       	sbci	r29, 0xFF	; 255
     e06:	e8 81       	ld	r30, Y
     e08:	f9 81       	ldd	r31, Y+1	; 0x01
     e0a:	cf 5c       	subi	r28, 0xCF	; 207
     e0c:	d0 40       	sbci	r29, 0x00	; 0
     e0e:	ff a3       	std	Y+39, r31	; 0x27
     e10:	ee a3       	std	Y+38, r30	; 0x26
     e12:	8e a1       	ldd	r24, Y+38	; 0x26
     e14:	9f a1       	ldd	r25, Y+39	; 0x27
     e16:	99 a7       	std	Y+41, r25	; 0x29
     e18:	88 a7       	std	Y+40, r24	; 0x28
	__asm__ volatile (
     e1a:	88 a5       	ldd	r24, Y+40	; 0x28
     e1c:	99 a5       	ldd	r25, Y+41	; 0x29
     e1e:	01 97       	sbiw	r24, 0x01	; 1
     e20:	f1 f7       	brne	.-4      	; 0xe1e <__stack+0x51f>
     e22:	99 a7       	std	Y+41, r25	; 0x29
     e24:	88 a7       	std	Y+40, r24	; 0x28
}
     e26:	42 c0       	rjmp	.+132    	; 0xeac <__stack+0x5ad>
	else if (__tmp > 255)
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	4f e7       	ldi	r20, 0x7F	; 127
     e2e:	53 e4       	ldi	r21, 0x43	; 67
     e30:	68 a9       	ldd	r22, Y+48	; 0x30
     e32:	79 a9       	ldd	r23, Y+49	; 0x31
     e34:	8a a9       	ldd	r24, Y+50	; 0x32
     e36:	9b a9       	ldd	r25, Y+51	; 0x33
     e38:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     e3c:	18 16       	cp	r1, r24
     e3e:	14 f5       	brge	.+68     	; 0xe84 <__stack+0x585>
		uint16_t __ticks=(uint16_t)__tmp2;
     e40:	6c a9       	ldd	r22, Y+52	; 0x34
     e42:	7d a9       	ldd	r23, Y+53	; 0x35
     e44:	8e a9       	ldd	r24, Y+54	; 0x36
     e46:	9f a9       	ldd	r25, Y+55	; 0x37
     e48:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     e4c:	cd 52       	subi	r28, 0x2D	; 45
     e4e:	df 4f       	sbci	r29, 0xFF	; 255
     e50:	68 83       	st	Y, r22
     e52:	79 83       	std	Y+1, r23	; 0x01
     e54:	8a 83       	std	Y+2, r24	; 0x02
     e56:	9b 83       	std	Y+3, r25	; 0x03
     e58:	c3 5d       	subi	r28, 0xD3	; 211
     e5a:	d0 40       	sbci	r29, 0x00	; 0
     e5c:	cd 52       	subi	r28, 0x2D	; 45
     e5e:	df 4f       	sbci	r29, 0xFF	; 255
     e60:	88 81       	ld	r24, Y
     e62:	99 81       	ldd	r25, Y+1	; 0x01
     e64:	c3 5d       	subi	r28, 0xD3	; 211
     e66:	d0 40       	sbci	r29, 0x00	; 0
     e68:	9b a3       	std	Y+35, r25	; 0x23
     e6a:	8a a3       	std	Y+34, r24	; 0x22
     e6c:	8a a1       	ldd	r24, Y+34	; 0x22
     e6e:	9b a1       	ldd	r25, Y+35	; 0x23
     e70:	9d a3       	std	Y+37, r25	; 0x25
     e72:	8c a3       	std	Y+36, r24	; 0x24
	__asm__ volatile (
     e74:	8c a1       	ldd	r24, Y+36	; 0x24
     e76:	9d a1       	ldd	r25, Y+37	; 0x25
     e78:	01 97       	sbiw	r24, 0x01	; 1
     e7a:	f1 f7       	brne	.-4      	; 0xe78 <__stack+0x579>
     e7c:	9d a3       	std	Y+37, r25	; 0x25
     e7e:	8c a3       	std	Y+36, r24	; 0x24
}
     e80:	00 00       	nop
		return;
     e82:	1b c0       	rjmp	.+54     	; 0xeba <__stack+0x5bb>
		__ticks = (uint8_t)__tmp;
     e84:	68 a9       	ldd	r22, Y+48	; 0x30
     e86:	79 a9       	ldd	r23, Y+49	; 0x31
     e88:	8a a9       	ldd	r24, Y+50	; 0x32
     e8a:	9b a9       	ldd	r25, Y+51	; 0x33
     e8c:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
     e90:	c9 52       	subi	r28, 0x29	; 41
     e92:	df 4f       	sbci	r29, 0xFF	; 255
     e94:	68 83       	st	Y, r22
     e96:	79 83       	std	Y+1, r23	; 0x01
     e98:	8a 83       	std	Y+2, r24	; 0x02
     e9a:	9b 83       	std	Y+3, r25	; 0x03
     e9c:	c7 5d       	subi	r28, 0xD7	; 215
     e9e:	d0 40       	sbci	r29, 0x00	; 0
     ea0:	c9 52       	subi	r28, 0x29	; 41
     ea2:	df 4f       	sbci	r29, 0xFF	; 255
     ea4:	98 81       	ld	r25, Y
     ea6:	c7 5d       	subi	r28, 0xD7	; 215
     ea8:	d0 40       	sbci	r29, 0x00	; 0
     eaa:	99 83       	std	Y+1, r25	; 0x01
     eac:	89 81       	ldd	r24, Y+1	; 0x01
     eae:	8a 83       	std	Y+2, r24	; 0x02
	__asm__ volatile (
     eb0:	8a 81       	ldd	r24, Y+2	; 0x02
     eb2:	8a 95       	dec	r24
     eb4:	f1 f7       	brne	.-4      	; 0xeb2 <__stack+0x5b3>
     eb6:	8a 83       	std	Y+2, r24	; 0x02
}
     eb8:	00 00       	nop
        lcd_e_delay();
        data |= PIN(LCD_DATA0_PORT)&0x0F;    /* read low nibble        */
     eba:	83 e2       	ldi	r24, 0x23	; 35
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	dc 01       	movw	r26, r24
     ec0:	8c 91       	ld	r24, X
     ec2:	88 2f       	mov	r24, r24
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	8f 70       	andi	r24, 0x0F	; 15
     ec8:	99 27       	eor	r25, r25
     eca:	28 2f       	mov	r18, r24
     ecc:	ce 01       	movw	r24, r28
     ece:	80 5c       	subi	r24, 0xC0	; 192
     ed0:	9f 4f       	sbci	r25, 0xFF	; 255
     ed2:	fc 01       	movw	r30, r24
     ed4:	80 81       	ld	r24, Z
     ed6:	28 2b       	or	r18, r24
     ed8:	ce 01       	movw	r24, r28
     eda:	80 5c       	subi	r24, 0xC0	; 192
     edc:	9f 4f       	sbci	r25, 0xFF	; 255
     ede:	dc 01       	movw	r26, r24
     ee0:	2c 93       	st	X, r18
        lcd_e_low();
     ee2:	85 e2       	ldi	r24, 0x25	; 37
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	fc 01       	movw	r30, r24
     ee8:	20 81       	ld	r18, Z
     eea:	85 e2       	ldi	r24, 0x25	; 37
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	2f 7e       	andi	r18, 0xEF	; 239
     ef0:	dc 01       	movw	r26, r24
     ef2:	2c 93       	st	X, r18
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x02;
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
        lcd_e_low();
    }
    return data;
     ef4:	ce 01       	movw	r24, r28
     ef6:	80 5c       	subi	r24, 0xC0	; 192
     ef8:	9f 4f       	sbci	r25, 0xFF	; 255
     efa:	fc 01       	movw	r30, r24
     efc:	80 81       	ld	r24, Z
}
     efe:	c6 52       	subi	r28, 0x26	; 38
     f00:	df 4f       	sbci	r29, 0xFF	; 255
     f02:	0f b6       	in	r0, 0x3f	; 63
     f04:	f8 94       	cli
     f06:	de bf       	out	0x3e, r29	; 62
     f08:	0f be       	out	0x3f, r0	; 63
     f0a:	cd bf       	out	0x3d, r28	; 61
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	1f 91       	pop	r17
     f12:	0f 91       	pop	r16
     f14:	08 95       	ret

00000f16 <lcd_waitbusy>:
/*************************************************************************
loops while lcd is busy, returns address counter
*************************************************************************/
static uint8_t lcd_waitbusy(void)

{
     f16:	1f 93       	push	r17
     f18:	cf 93       	push	r28
     f1a:	df 93       	push	r29
     f1c:	cd b7       	in	r28, 0x3d	; 61
     f1e:	de b7       	in	r29, 0x3e	; 62
     f20:	c8 54       	subi	r28, 0x48	; 72
     f22:	d1 09       	sbc	r29, r1
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	f8 94       	cli
     f28:	de bf       	out	0x3e, r29	; 62
     f2a:	0f be       	out	0x3f, r0	; 63
     f2c:	cd bf       	out	0x3d, r28	; 61
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
     f2e:	00 00       	nop
     f30:	80 e0       	ldi	r24, 0x00	; 0
     f32:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <lcd_read>
     f36:	18 2f       	mov	r17, r24
     f38:	81 2f       	mov	r24, r17
     f3a:	88 23       	and	r24, r24
     f3c:	cc f3       	brlt	.-14     	; 0xf30 <lcd_waitbusy+0x1a>
     f3e:	80 e0       	ldi	r24, 0x00	; 0
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	a0 e8       	ldi	r26, 0x80	; 128
     f44:	b0 e4       	ldi	r27, 0x40	; 64
     f46:	89 83       	std	Y+1, r24	; 0x01
     f48:	9a 83       	std	Y+2, r25	; 0x02
     f4a:	ab 83       	std	Y+3, r26	; 0x03
     f4c:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 3e6) * __us;
     f4e:	2b ea       	ldi	r18, 0xAB	; 171
     f50:	3a ea       	ldi	r19, 0xAA	; 170
     f52:	4a ea       	ldi	r20, 0xAA	; 170
     f54:	50 e4       	ldi	r21, 0x40	; 64
     f56:	69 81       	ldd	r22, Y+1	; 0x01
     f58:	7a 81       	ldd	r23, Y+2	; 0x02
     f5a:	8b 81       	ldd	r24, Y+3	; 0x03
     f5c:	9c 81       	ldd	r25, Y+4	; 0x04
     f5e:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     f62:	6d a3       	std	Y+37, r22	; 0x25
     f64:	7e a3       	std	Y+38, r23	; 0x26
     f66:	8f a3       	std	Y+39, r24	; 0x27
     f68:	98 a7       	std	Y+40, r25	; 0x28
     f6a:	8d a1       	ldd	r24, Y+37	; 0x25
     f6c:	9e a1       	ldd	r25, Y+38	; 0x26
     f6e:	af a1       	ldd	r26, Y+39	; 0x27
     f70:	b8 a5       	ldd	r27, Y+40	; 0x28
     f72:	8d 83       	std	Y+5, r24	; 0x05
     f74:	9e 83       	std	Y+6, r25	; 0x06
     f76:	af 83       	std	Y+7, r26	; 0x07
     f78:	b8 87       	std	Y+8, r27	; 0x08
	__tmp2 = ((F_CPU) / 4e6) * __us;
     f7a:	20 e0       	ldi	r18, 0x00	; 0
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	40 e8       	ldi	r20, 0x80	; 128
     f80:	50 e4       	ldi	r21, 0x40	; 64
     f82:	69 81       	ldd	r22, Y+1	; 0x01
     f84:	7a 81       	ldd	r23, Y+2	; 0x02
     f86:	8b 81       	ldd	r24, Y+3	; 0x03
     f88:	9c 81       	ldd	r25, Y+4	; 0x04
     f8a:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
     f8e:	69 a7       	std	Y+41, r22	; 0x29
     f90:	7a a7       	std	Y+42, r23	; 0x2a
     f92:	8b a7       	std	Y+43, r24	; 0x2b
     f94:	9c a7       	std	Y+44, r25	; 0x2c
     f96:	89 a5       	ldd	r24, Y+41	; 0x29
     f98:	9a a5       	ldd	r25, Y+42	; 0x2a
     f9a:	ab a5       	ldd	r26, Y+43	; 0x2b
     f9c:	bc a5       	ldd	r27, Y+44	; 0x2c
     f9e:	89 87       	std	Y+9, r24	; 0x09
     fa0:	9a 87       	std	Y+10, r25	; 0x0a
     fa2:	ab 87       	std	Y+11, r26	; 0x0b
     fa4:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     fa6:	20 e0       	ldi	r18, 0x00	; 0
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	40 e8       	ldi	r20, 0x80	; 128
     fac:	5f e3       	ldi	r21, 0x3F	; 63
     fae:	6d 81       	ldd	r22, Y+5	; 0x05
     fb0:	7e 81       	ldd	r23, Y+6	; 0x06
     fb2:	8f 81       	ldd	r24, Y+7	; 0x07
     fb4:	98 85       	ldd	r25, Y+8	; 0x08
     fb6:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
     fba:	88 23       	and	r24, r24
     fbc:	1c f4       	brge	.+6      	; 0xfc4 <lcd_waitbusy+0xae>
		__ticks = 1;
     fbe:	81 e0       	ldi	r24, 0x01	; 1
     fc0:	8d 87       	std	Y+13, r24	; 0x0d
     fc2:	e5 c0       	rjmp	.+458    	; 0x118e <lcd_waitbusy+0x278>
	else if (__tmp2 > 65535)
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	3f ef       	ldi	r19, 0xFF	; 255
     fc8:	4f e7       	ldi	r20, 0x7F	; 127
     fca:	57 e4       	ldi	r21, 0x47	; 71
     fcc:	69 85       	ldd	r22, Y+9	; 0x09
     fce:	7a 85       	ldd	r23, Y+10	; 0x0a
     fd0:	8b 85       	ldd	r24, Y+11	; 0x0b
     fd2:	9c 85       	ldd	r25, Y+12	; 0x0c
     fd4:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
     fd8:	18 16       	cp	r1, r24
     fda:	0c f0       	brlt	.+2      	; 0xfde <lcd_waitbusy+0xc8>
     fdc:	9e c0       	rjmp	.+316    	; 0x111a <lcd_waitbusy+0x204>
		_delay_ms(__us / 1000.0);
     fde:	20 e0       	ldi	r18, 0x00	; 0
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	4a e7       	ldi	r20, 0x7A	; 122
     fe4:	54 e4       	ldi	r21, 0x44	; 68
     fe6:	69 81       	ldd	r22, Y+1	; 0x01
     fe8:	7a 81       	ldd	r23, Y+2	; 0x02
     fea:	8b 81       	ldd	r24, Y+3	; 0x03
     fec:	9c 81       	ldd	r25, Y+4	; 0x04
     fee:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
     ff2:	6d a7       	std	Y+45, r22	; 0x2d
     ff4:	7e a7       	std	Y+46, r23	; 0x2e
     ff6:	8f a7       	std	Y+47, r24	; 0x2f
     ff8:	98 ab       	std	Y+48, r25	; 0x30
     ffa:	8d a5       	ldd	r24, Y+45	; 0x2d
     ffc:	9e a5       	ldd	r25, Y+46	; 0x2e
     ffe:	af a5       	ldd	r26, Y+47	; 0x2f
    1000:	b8 a9       	ldd	r27, Y+48	; 0x30
    1002:	8e 87       	std	Y+14, r24	; 0x0e
    1004:	9f 87       	std	Y+15, r25	; 0x0f
    1006:	a8 8b       	std	Y+16, r26	; 0x10
    1008:	b9 8b       	std	Y+17, r27	; 0x11
	__tmp = ((F_CPU) / 4e3) * __ms;
    100a:	20 e0       	ldi	r18, 0x00	; 0
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	4a e7       	ldi	r20, 0x7A	; 122
    1010:	55 e4       	ldi	r21, 0x45	; 69
    1012:	6e 85       	ldd	r22, Y+14	; 0x0e
    1014:	7f 85       	ldd	r23, Y+15	; 0x0f
    1016:	88 89       	ldd	r24, Y+16	; 0x10
    1018:	99 89       	ldd	r25, Y+17	; 0x11
    101a:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    101e:	69 ab       	std	Y+49, r22	; 0x31
    1020:	7a ab       	std	Y+50, r23	; 0x32
    1022:	8b ab       	std	Y+51, r24	; 0x33
    1024:	9c ab       	std	Y+52, r25	; 0x34
    1026:	89 a9       	ldd	r24, Y+49	; 0x31
    1028:	9a a9       	ldd	r25, Y+50	; 0x32
    102a:	ab a9       	ldd	r26, Y+51	; 0x33
    102c:	bc a9       	ldd	r27, Y+52	; 0x34
    102e:	8a 8b       	std	Y+18, r24	; 0x12
    1030:	9b 8b       	std	Y+19, r25	; 0x13
    1032:	ac 8b       	std	Y+20, r26	; 0x14
    1034:	bd 8b       	std	Y+21, r27	; 0x15
	if (__tmp < 1.0)
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	40 e8       	ldi	r20, 0x80	; 128
    103c:	5f e3       	ldi	r21, 0x3F	; 63
    103e:	6a 89       	ldd	r22, Y+18	; 0x12
    1040:	7b 89       	ldd	r23, Y+19	; 0x13
    1042:	8c 89       	ldd	r24, Y+20	; 0x14
    1044:	9d 89       	ldd	r25, Y+21	; 0x15
    1046:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    104a:	88 23       	and	r24, r24
    104c:	2c f4       	brge	.+10     	; 0x1058 <lcd_waitbusy+0x142>
		__ticks = 1;
    104e:	81 e0       	ldi	r24, 0x01	; 1
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	9f 8b       	std	Y+23, r25	; 0x17
    1054:	8e 8b       	std	Y+22, r24	; 0x16
    1056:	56 c0       	rjmp	.+172    	; 0x1104 <lcd_waitbusy+0x1ee>
	else if (__tmp > 65535)
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	3f ef       	ldi	r19, 0xFF	; 255
    105c:	4f e7       	ldi	r20, 0x7F	; 127
    105e:	57 e4       	ldi	r21, 0x47	; 71
    1060:	6a 89       	ldd	r22, Y+18	; 0x12
    1062:	7b 89       	ldd	r23, Y+19	; 0x13
    1064:	8c 89       	ldd	r24, Y+20	; 0x14
    1066:	9d 89       	ldd	r25, Y+21	; 0x15
    1068:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    106c:	18 16       	cp	r1, r24
    106e:	d4 f5       	brge	.+116    	; 0x10e4 <lcd_waitbusy+0x1ce>
		__ticks = (uint16_t) (__ms * 10.0);
    1070:	20 e0       	ldi	r18, 0x00	; 0
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	40 e2       	ldi	r20, 0x20	; 32
    1076:	51 e4       	ldi	r21, 0x41	; 65
    1078:	6e 85       	ldd	r22, Y+14	; 0x0e
    107a:	7f 85       	ldd	r23, Y+15	; 0x0f
    107c:	88 89       	ldd	r24, Y+16	; 0x10
    107e:	99 89       	ldd	r25, Y+17	; 0x11
    1080:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1084:	6d ab       	std	Y+53, r22	; 0x35
    1086:	7e ab       	std	Y+54, r23	; 0x36
    1088:	8f ab       	std	Y+55, r24	; 0x37
    108a:	98 af       	std	Y+56, r25	; 0x38
    108c:	8d a9       	ldd	r24, Y+53	; 0x35
    108e:	9e a9       	ldd	r25, Y+54	; 0x36
    1090:	af a9       	ldd	r26, Y+55	; 0x37
    1092:	b8 ad       	ldd	r27, Y+56	; 0x38
    1094:	89 a3       	std	Y+33, r24	; 0x21
    1096:	9a a3       	std	Y+34, r25	; 0x22
    1098:	ab a3       	std	Y+35, r26	; 0x23
    109a:	bc a3       	std	Y+36, r27	; 0x24
    109c:	69 a1       	ldd	r22, Y+33	; 0x21
    109e:	7a a1       	ldd	r23, Y+34	; 0x22
    10a0:	8b a1       	ldd	r24, Y+35	; 0x23
    10a2:	9c a1       	ldd	r25, Y+36	; 0x24
    10a4:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    10a8:	69 af       	std	Y+57, r22	; 0x39
    10aa:	7a af       	std	Y+58, r23	; 0x3a
    10ac:	8b af       	std	Y+59, r24	; 0x3b
    10ae:	9c af       	std	Y+60, r25	; 0x3c
    10b0:	a9 ad       	ldd	r26, Y+57	; 0x39
    10b2:	ba ad       	ldd	r27, Y+58	; 0x3a
    10b4:	bf 8b       	std	Y+23, r27	; 0x17
    10b6:	ae 8b       	std	Y+22, r26	; 0x16
		while(__ticks)
    10b8:	10 c0       	rjmp	.+32     	; 0x10da <lcd_waitbusy+0x1c4>
    10ba:	80 e9       	ldi	r24, 0x90	; 144
    10bc:	91 e0       	ldi	r25, 0x01	; 1
    10be:	99 8f       	std	Y+25, r25	; 0x19
    10c0:	88 8f       	std	Y+24, r24	; 0x18
	__asm__ volatile (
    10c2:	88 8d       	ldd	r24, Y+24	; 0x18
    10c4:	99 8d       	ldd	r25, Y+25	; 0x19
    10c6:	01 97       	sbiw	r24, 0x01	; 1
    10c8:	f1 f7       	brne	.-4      	; 0x10c6 <lcd_waitbusy+0x1b0>
    10ca:	99 8f       	std	Y+25, r25	; 0x19
    10cc:	88 8f       	std	Y+24, r24	; 0x18
}
    10ce:	00 00       	nop
			__ticks --;
    10d0:	8e 89       	ldd	r24, Y+22	; 0x16
    10d2:	9f 89       	ldd	r25, Y+23	; 0x17
    10d4:	01 97       	sbiw	r24, 0x01	; 1
    10d6:	9f 8b       	std	Y+23, r25	; 0x17
    10d8:	8e 8b       	std	Y+22, r24	; 0x16
		while(__ticks)
    10da:	8e 89       	ldd	r24, Y+22	; 0x16
    10dc:	9f 89       	ldd	r25, Y+23	; 0x17
    10de:	89 2b       	or	r24, r25
    10e0:	61 f7       	brne	.-40     	; 0x10ba <lcd_waitbusy+0x1a4>
		return;
    10e2:	55 c0       	rjmp	.+170    	; 0x118e <lcd_waitbusy+0x278>
		__ticks = (uint16_t)__tmp;
    10e4:	6a 89       	ldd	r22, Y+18	; 0x12
    10e6:	7b 89       	ldd	r23, Y+19	; 0x13
    10e8:	8c 89       	ldd	r24, Y+20	; 0x14
    10ea:	9d 89       	ldd	r25, Y+21	; 0x15
    10ec:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    10f0:	21 96       	adiw	r28, 0x01	; 1
    10f2:	6c af       	std	Y+60, r22	; 0x3c
    10f4:	7d af       	std	Y+61, r23	; 0x3d
    10f6:	8e af       	std	Y+62, r24	; 0x3e
    10f8:	9f af       	std	Y+63, r25	; 0x3f
    10fa:	21 97       	sbiw	r28, 0x01	; 1
    10fc:	8d ad       	ldd	r24, Y+61	; 0x3d
    10fe:	9e ad       	ldd	r25, Y+62	; 0x3e
    1100:	9f 8b       	std	Y+23, r25	; 0x17
    1102:	8e 8b       	std	Y+22, r24	; 0x16
    1104:	8e 89       	ldd	r24, Y+22	; 0x16
    1106:	9f 89       	ldd	r25, Y+23	; 0x17
    1108:	9b 8f       	std	Y+27, r25	; 0x1b
    110a:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
    110c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    110e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1110:	01 97       	sbiw	r24, 0x01	; 1
    1112:	f1 f7       	brne	.-4      	; 0x1110 <lcd_waitbusy+0x1fa>
    1114:	9b 8f       	std	Y+27, r25	; 0x1b
    1116:	8a 8f       	std	Y+26, r24	; 0x1a
}
    1118:	3a c0       	rjmp	.+116    	; 0x118e <lcd_waitbusy+0x278>
	else if (__tmp > 255)
    111a:	20 e0       	ldi	r18, 0x00	; 0
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	4f e7       	ldi	r20, 0x7F	; 127
    1120:	53 e4       	ldi	r21, 0x43	; 67
    1122:	6d 81       	ldd	r22, Y+5	; 0x05
    1124:	7e 81       	ldd	r23, Y+6	; 0x06
    1126:	8f 81       	ldd	r24, Y+7	; 0x07
    1128:	98 85       	ldd	r25, Y+8	; 0x08
    112a:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    112e:	18 16       	cp	r1, r24
    1130:	f4 f4       	brge	.+60     	; 0x116e <lcd_waitbusy+0x258>
		uint16_t __ticks=(uint16_t)__tmp2;
    1132:	69 85       	ldd	r22, Y+9	; 0x09
    1134:	7a 85       	ldd	r23, Y+10	; 0x0a
    1136:	8b 85       	ldd	r24, Y+11	; 0x0b
    1138:	9c 85       	ldd	r25, Y+12	; 0x0c
    113a:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    113e:	25 96       	adiw	r28, 0x05	; 5
    1140:	6c af       	std	Y+60, r22	; 0x3c
    1142:	7d af       	std	Y+61, r23	; 0x3d
    1144:	8e af       	std	Y+62, r24	; 0x3e
    1146:	9f af       	std	Y+63, r25	; 0x3f
    1148:	25 97       	sbiw	r28, 0x05	; 5
    114a:	23 96       	adiw	r28, 0x03	; 3
    114c:	ae ad       	ldd	r26, Y+62	; 0x3e
    114e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1150:	23 97       	sbiw	r28, 0x03	; 3
    1152:	bd 8f       	std	Y+29, r27	; 0x1d
    1154:	ac 8f       	std	Y+28, r26	; 0x1c
    1156:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1158:	9d 8d       	ldd	r25, Y+29	; 0x1d
    115a:	9f 8f       	std	Y+31, r25	; 0x1f
    115c:	8e 8f       	std	Y+30, r24	; 0x1e
	__asm__ volatile (
    115e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1160:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1162:	01 97       	sbiw	r24, 0x01	; 1
    1164:	f1 f7       	brne	.-4      	; 0x1162 <lcd_waitbusy+0x24c>
    1166:	9f 8f       	std	Y+31, r25	; 0x1f
    1168:	8e 8f       	std	Y+30, r24	; 0x1e
}
    116a:	00 00       	nop
		return;
    116c:	17 c0       	rjmp	.+46     	; 0x119c <lcd_waitbusy+0x286>
		__ticks = (uint8_t)__tmp;
    116e:	6d 81       	ldd	r22, Y+5	; 0x05
    1170:	7e 81       	ldd	r23, Y+6	; 0x06
    1172:	8f 81       	ldd	r24, Y+7	; 0x07
    1174:	98 85       	ldd	r25, Y+8	; 0x08
    1176:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    117a:	29 96       	adiw	r28, 0x09	; 9
    117c:	6c af       	std	Y+60, r22	; 0x3c
    117e:	7d af       	std	Y+61, r23	; 0x3d
    1180:	8e af       	std	Y+62, r24	; 0x3e
    1182:	9f af       	std	Y+63, r25	; 0x3f
    1184:	29 97       	sbiw	r28, 0x09	; 9
    1186:	26 96       	adiw	r28, 0x06	; 6
    1188:	bf ad       	ldd	r27, Y+63	; 0x3f
    118a:	26 97       	sbiw	r28, 0x06	; 6
    118c:	bd 87       	std	Y+13, r27	; 0x0d
    118e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1190:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
    1192:	88 a1       	ldd	r24, Y+32	; 0x20
    1194:	8a 95       	dec	r24
    1196:	f1 f7       	brne	.-4      	; 0x1194 <lcd_waitbusy+0x27e>
    1198:	88 a3       	std	Y+32, r24	; 0x20
}
    119a:	00 00       	nop
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(LCD_DELAY_BUSY_FLAG);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <lcd_read>
    
}/* lcd_waitbusy */
    11a2:	c8 5b       	subi	r28, 0xB8	; 184
    11a4:	df 4f       	sbci	r29, 0xFF	; 255
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	f8 94       	cli
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	cd bf       	out	0x3d, r28	; 61
    11b0:	df 91       	pop	r29
    11b2:	cf 91       	pop	r28
    11b4:	1f 91       	pop	r17
    11b6:	08 95       	ret

000011b8 <lcd_newline>:
/*************************************************************************
Move cursor to the start of next line or to the first line if the cursor 
is already on the last line.
*************************************************************************/
static inline void lcd_newline(uint8_t pos)
{
    11b8:	1f 93       	push	r17
    11ba:	cf 93       	push	r28
    11bc:	df 93       	push	r29
    11be:	0f 92       	push	r0
    11c0:	cd b7       	in	r28, 0x3d	; 61
    11c2:	de b7       	in	r29, 0x3e	; 62
    11c4:	89 83       	std	Y+1, r24	; 0x01

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
    11c6:	89 81       	ldd	r24, Y+1	; 0x01
    11c8:	80 34       	cpi	r24, 0x40	; 64
    11ca:	10 f4       	brcc	.+4      	; 0x11d0 <lcd_newline+0x18>
        addressCounter = LCD_START_LINE2;
    11cc:	10 e4       	ldi	r17, 0x40	; 64
    11ce:	01 c0       	rjmp	.+2      	; 0x11d2 <lcd_newline+0x1a>
    else
        addressCounter = LCD_START_LINE1;
    11d0:	10 e0       	ldi	r17, 0x00	; 0
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
    11d2:	80 e8       	ldi	r24, 0x80	; 128
    11d4:	81 0f       	add	r24, r17
    11d6:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>

}/* lcd_newline */
    11da:	00 00       	nop
    11dc:	0f 90       	pop	r0
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	1f 91       	pop	r17
    11e4:	08 95       	ret

000011e6 <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    11e6:	cf 93       	push	r28
    11e8:	df 93       	push	r29
    11ea:	0f 92       	push	r0
    11ec:	cd b7       	in	r28, 0x3d	; 61
    11ee:	de b7       	in	r29, 0x3e	; 62
    11f0:	89 83       	std	Y+1, r24	; 0x01
    lcd_waitbusy();
    11f2:	0e 94 8b 07 	call	0xf16	; 0xf16 <lcd_waitbusy>
    lcd_write(cmd,0);
    11f6:	60 e0       	ldi	r22, 0x00	; 0
    11f8:	89 81       	ldd	r24, Y+1	; 0x01
    11fa:	0e 94 9f 01 	call	0x33e	; 0x33e <lcd_write>
}
    11fe:	00 00       	nop
    1200:	0f 90       	pop	r0
    1202:	df 91       	pop	r29
    1204:	cf 91       	pop	r28
    1206:	08 95       	ret

00001208 <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
    1208:	cf 93       	push	r28
    120a:	df 93       	push	r29
    120c:	0f 92       	push	r0
    120e:	cd b7       	in	r28, 0x3d	; 61
    1210:	de b7       	in	r29, 0x3e	; 62
    1212:	89 83       	std	Y+1, r24	; 0x01
    lcd_waitbusy();
    1214:	0e 94 8b 07 	call	0xf16	; 0xf16 <lcd_waitbusy>
    lcd_write(data,1);
    1218:	61 e0       	ldi	r22, 0x01	; 1
    121a:	89 81       	ldd	r24, Y+1	; 0x01
    121c:	0e 94 9f 01 	call	0x33e	; 0x33e <lcd_write>
}
    1220:	00 00       	nop
    1222:	0f 90       	pop	r0
    1224:	df 91       	pop	r29
    1226:	cf 91       	pop	r28
    1228:	08 95       	ret

0000122a <lcd_gotoxy>:
Input:    x  horizontal position  (0: left most position)
          y  vertical position    (0: first line)
Returns:  none
*************************************************************************/
void lcd_gotoxy(uint8_t x, uint8_t y)
{
    122a:	cf 93       	push	r28
    122c:	df 93       	push	r29
    122e:	00 d0       	rcall	.+0      	; 0x1230 <lcd_gotoxy+0x6>
    1230:	cd b7       	in	r28, 0x3d	; 61
    1232:	de b7       	in	r29, 0x3e	; 62
    1234:	89 83       	std	Y+1, r24	; 0x01
    1236:	6a 83       	std	Y+2, r22	; 0x02
#if LCD_LINES==1
    lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#endif
#if LCD_LINES==2
    if ( y==0 ) 
    1238:	8a 81       	ldd	r24, Y+2	; 0x02
    123a:	88 23       	and	r24, r24
    123c:	29 f4       	brne	.+10     	; 0x1248 <lcd_gotoxy+0x1e>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
    123e:	89 81       	ldd	r24, Y+1	; 0x01
    1240:	80 58       	subi	r24, 0x80	; 128
    1242:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE3+x);
    else /* y==3 */
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE4+x);
#endif

}/* lcd_gotoxy */
    1246:	04 c0       	rjmp	.+8      	; 0x1250 <lcd_gotoxy+0x26>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
    1248:	89 81       	ldd	r24, Y+1	; 0x01
    124a:	80 54       	subi	r24, 0x40	; 64
    124c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>
}/* lcd_gotoxy */
    1250:	00 00       	nop
    1252:	0f 90       	pop	r0
    1254:	0f 90       	pop	r0
    1256:	df 91       	pop	r29
    1258:	cf 91       	pop	r28
    125a:	08 95       	ret

0000125c <lcd_getxy>:


/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    125c:	cf 93       	push	r28
    125e:	df 93       	push	r29
    1260:	cd b7       	in	r28, 0x3d	; 61
    1262:	de b7       	in	r29, 0x3e	; 62
    return lcd_waitbusy();
    1264:	0e 94 8b 07 	call	0xf16	; 0xf16 <lcd_waitbusy>
    1268:	88 2f       	mov	r24, r24
    126a:	90 e0       	ldi	r25, 0x00	; 0
}
    126c:	df 91       	pop	r29
    126e:	cf 91       	pop	r28
    1270:	08 95       	ret

00001272 <lcd_clrscr>:

/*************************************************************************
Clear display and set cursor to home position
*************************************************************************/
void lcd_clrscr(void)
{
    1272:	cf 93       	push	r28
    1274:	df 93       	push	r29
    1276:	cd b7       	in	r28, 0x3d	; 61
    1278:	de b7       	in	r29, 0x3e	; 62
    lcd_command(1<<LCD_CLR);
    127a:	81 e0       	ldi	r24, 0x01	; 1
    127c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>
}
    1280:	00 00       	nop
    1282:	df 91       	pop	r29
    1284:	cf 91       	pop	r28
    1286:	08 95       	ret

00001288 <lcd_home>:

/*************************************************************************
Set cursor to home position
*************************************************************************/
void lcd_home(void)
{
    1288:	cf 93       	push	r28
    128a:	df 93       	push	r29
    128c:	cd b7       	in	r28, 0x3d	; 61
    128e:	de b7       	in	r29, 0x3e	; 62
    lcd_command(1<<LCD_HOME);
    1290:	82 e0       	ldi	r24, 0x02	; 2
    1292:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>
}
    1296:	00 00       	nop
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	08 95       	ret

0000129e <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
    129e:	cf 93       	push	r28
    12a0:	df 93       	push	r29
    12a2:	00 d0       	rcall	.+0      	; 0x12a4 <lcd_putc+0x6>
    12a4:	cd b7       	in	r28, 0x3d	; 61
    12a6:	de b7       	in	r29, 0x3e	; 62
    12a8:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
    12aa:	0e 94 8b 07 	call	0xf16	; 0xf16 <lcd_waitbusy>
    12ae:	89 83       	std	Y+1, r24	; 0x01
    if (c=='\n')
    12b0:	8a 81       	ldd	r24, Y+2	; 0x02
    12b2:	8a 30       	cpi	r24, 0x0A	; 10
    12b4:	21 f4       	brne	.+8      	; 0x12be <lcd_putc+0x20>
    {
        lcd_newline(pos);
    12b6:	89 81       	ldd	r24, Y+1	; 0x01
    12b8:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <lcd_newline>
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
    }

}/* lcd_putc */
    12bc:	04 c0       	rjmp	.+8      	; 0x12c6 <lcd_putc+0x28>
        lcd_write(c, 1);
    12be:	8a 81       	ldd	r24, Y+2	; 0x02
    12c0:	61 e0       	ldi	r22, 0x01	; 1
    12c2:	0e 94 9f 01 	call	0x33e	; 0x33e <lcd_write>
}/* lcd_putc */
    12c6:	00 00       	nop
    12c8:	0f 90       	pop	r0
    12ca:	0f 90       	pop	r0
    12cc:	df 91       	pop	r29
    12ce:	cf 91       	pop	r28
    12d0:	08 95       	ret

000012d2 <lcd_puts>:
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
    12d2:	1f 93       	push	r17
    12d4:	cf 93       	push	r28
    12d6:	df 93       	push	r29
    12d8:	00 d0       	rcall	.+0      	; 0x12da <lcd_puts+0x8>
    12da:	cd b7       	in	r28, 0x3d	; 61
    12dc:	de b7       	in	r29, 0x3e	; 62
    12de:	9a 83       	std	Y+2, r25	; 0x02
    12e0:	89 83       	std	Y+1, r24	; 0x01
    register char c;

    while ( (c = *s++) ) {
    12e2:	03 c0       	rjmp	.+6      	; 0x12ea <lcd_puts+0x18>
        lcd_putc(c);
    12e4:	81 2f       	mov	r24, r17
    12e6:	0e 94 4f 09 	call	0x129e	; 0x129e <lcd_putc>
    while ( (c = *s++) ) {
    12ea:	89 81       	ldd	r24, Y+1	; 0x01
    12ec:	9a 81       	ldd	r25, Y+2	; 0x02
    12ee:	9c 01       	movw	r18, r24
    12f0:	2f 5f       	subi	r18, 0xFF	; 255
    12f2:	3f 4f       	sbci	r19, 0xFF	; 255
    12f4:	3a 83       	std	Y+2, r19	; 0x02
    12f6:	29 83       	std	Y+1, r18	; 0x01
    12f8:	fc 01       	movw	r30, r24
    12fa:	10 81       	ld	r17, Z
    12fc:	11 23       	and	r17, r17
    12fe:	91 f7       	brne	.-28     	; 0x12e4 <lcd_puts+0x12>
    }

}/* lcd_puts */
    1300:	00 00       	nop
    1302:	00 00       	nop
    1304:	0f 90       	pop	r0
    1306:	0f 90       	pop	r0
    1308:	df 91       	pop	r29
    130a:	cf 91       	pop	r28
    130c:	1f 91       	pop	r17
    130e:	08 95       	ret

00001310 <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
    1310:	1f 93       	push	r17
    1312:	cf 93       	push	r28
    1314:	df 93       	push	r29
    1316:	00 d0       	rcall	.+0      	; 0x1318 <lcd_puts_p+0x8>
    1318:	00 d0       	rcall	.+0      	; 0x131a <lcd_puts_p+0xa>
    131a:	0f 92       	push	r0
    131c:	cd b7       	in	r28, 0x3d	; 61
    131e:	de b7       	in	r29, 0x3e	; 62
    1320:	9d 83       	std	Y+5, r25	; 0x05
    1322:	8c 83       	std	Y+4, r24	; 0x04
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
    1324:	03 c0       	rjmp	.+6      	; 0x132c <lcd_puts_p+0x1c>
        lcd_putc(c);
    1326:	81 2f       	mov	r24, r17
    1328:	0e 94 4f 09 	call	0x129e	; 0x129e <lcd_putc>
    while ( (c = pgm_read_byte(progmem_s++)) ) {
    132c:	8c 81       	ldd	r24, Y+4	; 0x04
    132e:	9d 81       	ldd	r25, Y+5	; 0x05
    1330:	9c 01       	movw	r18, r24
    1332:	2f 5f       	subi	r18, 0xFF	; 255
    1334:	3f 4f       	sbci	r19, 0xFF	; 255
    1336:	3d 83       	std	Y+5, r19	; 0x05
    1338:	2c 83       	std	Y+4, r18	; 0x04
    133a:	9a 83       	std	Y+2, r25	; 0x02
    133c:	89 83       	std	Y+1, r24	; 0x01
    133e:	89 81       	ldd	r24, Y+1	; 0x01
    1340:	9a 81       	ldd	r25, Y+2	; 0x02
    1342:	fc 01       	movw	r30, r24
    1344:	84 91       	lpm	r24, Z
    1346:	8b 83       	std	Y+3, r24	; 0x03
    1348:	8b 81       	ldd	r24, Y+3	; 0x03
    134a:	18 2f       	mov	r17, r24
    134c:	11 23       	and	r17, r17
    134e:	59 f7       	brne	.-42     	; 0x1326 <lcd_puts_p+0x16>
    }

}/* lcd_puts_p */
    1350:	00 00       	nop
    1352:	00 00       	nop
    1354:	0f 90       	pop	r0
    1356:	0f 90       	pop	r0
    1358:	0f 90       	pop	r0
    135a:	0f 90       	pop	r0
    135c:	0f 90       	pop	r0
    135e:	df 91       	pop	r29
    1360:	cf 91       	pop	r28
    1362:	1f 91       	pop	r17
    1364:	08 95       	ret

00001366 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
    1366:	0f 93       	push	r16
    1368:	1f 93       	push	r17
    136a:	cf 93       	push	r28
    136c:	df 93       	push	r29
    136e:	cd b7       	in	r28, 0x3d	; 61
    1370:	de b7       	in	r29, 0x3e	; 62
    1372:	c9 56       	subi	r28, 0x69	; 105
    1374:	d1 40       	sbci	r29, 0x01	; 1
    1376:	0f b6       	in	r0, 0x3f	; 63
    1378:	f8 94       	cli
    137a:	de bf       	out	0x3e, r29	; 62
    137c:	0f be       	out	0x3f, r0	; 63
    137e:	cd bf       	out	0x3d, r28	; 61
    1380:	9e 01       	movw	r18, r28
    1382:	2f 55       	subi	r18, 0x5F	; 95
    1384:	3f 4f       	sbci	r19, 0xFF	; 255
    1386:	d9 01       	movw	r26, r18
    1388:	8c 93       	st	X, r24
    }
    else if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
           && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure all port bits as output (all LCD data lines on same port, but control lines on different ports) */
        DDR(LCD_DATA0_PORT) |= 0x0F;
    138a:	84 e2       	ldi	r24, 0x24	; 36
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	fc 01       	movw	r30, r24
    1390:	20 81       	ld	r18, Z
    1392:	84 e2       	ldi	r24, 0x24	; 36
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	2f 60       	ori	r18, 0x0F	; 15
    1398:	dc 01       	movw	r26, r24
    139a:	2c 93       	st	X, r18
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
    139c:	8a e2       	ldi	r24, 0x2A	; 42
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	fc 01       	movw	r30, r24
    13a2:	20 81       	ld	r18, Z
    13a4:	8a e2       	ldi	r24, 0x2A	; 42
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	24 60       	ori	r18, 0x04	; 4
    13aa:	dc 01       	movw	r26, r24
    13ac:	2c 93       	st	X, r18
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
    13ae:	8a e2       	ldi	r24, 0x2A	; 42
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	fc 01       	movw	r30, r24
    13b4:	20 81       	ld	r18, Z
    13b6:	8a e2       	ldi	r24, 0x2A	; 42
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	28 60       	ori	r18, 0x08	; 8
    13bc:	dc 01       	movw	r26, r24
    13be:	2c 93       	st	X, r18
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    13c0:	84 e2       	ldi	r24, 0x24	; 36
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	fc 01       	movw	r30, r24
    13c6:	20 81       	ld	r18, Z
    13c8:	84 e2       	ldi	r24, 0x24	; 36
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	20 61       	ori	r18, 0x10	; 16
    13ce:	dc 01       	movw	r26, r24
    13d0:	2c 93       	st	X, r18
    13d2:	9e 01       	movw	r18, r28
    13d4:	2f 57       	subi	r18, 0x7F	; 127
    13d6:	3f 4f       	sbci	r19, 0xFF	; 255
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	aa e7       	ldi	r26, 0x7A	; 122
    13de:	b6 e4       	ldi	r27, 0x46	; 70
    13e0:	f9 01       	movw	r30, r18
    13e2:	80 83       	st	Z, r24
    13e4:	91 83       	std	Z+1, r25	; 0x01
    13e6:	a2 83       	std	Z+2, r26	; 0x02
    13e8:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
    13ea:	8e 01       	movw	r16, r28
    13ec:	0b 57       	subi	r16, 0x7B	; 123
    13ee:	1f 4f       	sbci	r17, 0xFF	; 255
    13f0:	ce 01       	movw	r24, r28
    13f2:	8f 57       	subi	r24, 0x7F	; 127
    13f4:	9f 4f       	sbci	r25, 0xFF	; 255
    13f6:	2b ea       	ldi	r18, 0xAB	; 171
    13f8:	3a ea       	ldi	r19, 0xAA	; 170
    13fa:	4a ea       	ldi	r20, 0xAA	; 170
    13fc:	50 e4       	ldi	r21, 0x40	; 64
    13fe:	dc 01       	movw	r26, r24
    1400:	6d 91       	ld	r22, X+
    1402:	7d 91       	ld	r23, X+
    1404:	8d 91       	ld	r24, X+
    1406:	9c 91       	ld	r25, X
    1408:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    140c:	ca 54       	subi	r28, 0x4A	; 74
    140e:	df 4f       	sbci	r29, 0xFF	; 255
    1410:	68 83       	st	Y, r22
    1412:	79 83       	std	Y+1, r23	; 0x01
    1414:	8a 83       	std	Y+2, r24	; 0x02
    1416:	9b 83       	std	Y+3, r25	; 0x03
    1418:	c6 5b       	subi	r28, 0xB6	; 182
    141a:	d0 40       	sbci	r29, 0x00	; 0
    141c:	ca 54       	subi	r28, 0x4A	; 74
    141e:	df 4f       	sbci	r29, 0xFF	; 255
    1420:	88 81       	ld	r24, Y
    1422:	99 81       	ldd	r25, Y+1	; 0x01
    1424:	aa 81       	ldd	r26, Y+2	; 0x02
    1426:	bb 81       	ldd	r27, Y+3	; 0x03
    1428:	c6 5b       	subi	r28, 0xB6	; 182
    142a:	d0 40       	sbci	r29, 0x00	; 0
    142c:	f8 01       	movw	r30, r16
    142e:	80 83       	st	Z, r24
    1430:	91 83       	std	Z+1, r25	; 0x01
    1432:	a2 83       	std	Z+2, r26	; 0x02
    1434:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1436:	8e 01       	movw	r16, r28
    1438:	07 57       	subi	r16, 0x77	; 119
    143a:	1f 4f       	sbci	r17, 0xFF	; 255
    143c:	ce 01       	movw	r24, r28
    143e:	8f 57       	subi	r24, 0x7F	; 127
    1440:	9f 4f       	sbci	r25, 0xFF	; 255
    1442:	20 e0       	ldi	r18, 0x00	; 0
    1444:	30 e0       	ldi	r19, 0x00	; 0
    1446:	40 e8       	ldi	r20, 0x80	; 128
    1448:	50 e4       	ldi	r21, 0x40	; 64
    144a:	dc 01       	movw	r26, r24
    144c:	6d 91       	ld	r22, X+
    144e:	7d 91       	ld	r23, X+
    1450:	8d 91       	ld	r24, X+
    1452:	9c 91       	ld	r25, X
    1454:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1458:	c6 54       	subi	r28, 0x46	; 70
    145a:	df 4f       	sbci	r29, 0xFF	; 255
    145c:	68 83       	st	Y, r22
    145e:	79 83       	std	Y+1, r23	; 0x01
    1460:	8a 83       	std	Y+2, r24	; 0x02
    1462:	9b 83       	std	Y+3, r25	; 0x03
    1464:	ca 5b       	subi	r28, 0xBA	; 186
    1466:	d0 40       	sbci	r29, 0x00	; 0
    1468:	c6 54       	subi	r28, 0x46	; 70
    146a:	df 4f       	sbci	r29, 0xFF	; 255
    146c:	88 81       	ld	r24, Y
    146e:	99 81       	ldd	r25, Y+1	; 0x01
    1470:	aa 81       	ldd	r26, Y+2	; 0x02
    1472:	bb 81       	ldd	r27, Y+3	; 0x03
    1474:	ca 5b       	subi	r28, 0xBA	; 186
    1476:	d0 40       	sbci	r29, 0x00	; 0
    1478:	f8 01       	movw	r30, r16
    147a:	80 83       	st	Z, r24
    147c:	91 83       	std	Z+1, r25	; 0x01
    147e:	a2 83       	std	Z+2, r26	; 0x02
    1480:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1482:	ce 01       	movw	r24, r28
    1484:	8b 57       	subi	r24, 0x7B	; 123
    1486:	9f 4f       	sbci	r25, 0xFF	; 255
    1488:	20 e0       	ldi	r18, 0x00	; 0
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	40 e8       	ldi	r20, 0x80	; 128
    148e:	5f e3       	ldi	r21, 0x3F	; 63
    1490:	dc 01       	movw	r26, r24
    1492:	6d 91       	ld	r22, X+
    1494:	7d 91       	ld	r23, X+
    1496:	8d 91       	ld	r24, X+
    1498:	9c 91       	ld	r25, X
    149a:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    149e:	88 23       	and	r24, r24
    14a0:	3c f4       	brge	.+14     	; 0x14b0 <lcd_init+0x14a>
		__ticks = 1;
    14a2:	ce 01       	movw	r24, r28
    14a4:	83 57       	subi	r24, 0x73	; 115
    14a6:	9f 4f       	sbci	r25, 0xFF	; 255
    14a8:	21 e0       	ldi	r18, 0x01	; 1
    14aa:	fc 01       	movw	r30, r24
    14ac:	20 83       	st	Z, r18
    14ae:	99 c1       	rjmp	.+818    	; 0x17e2 <lcd_init+0x47c>
	else if (__tmp2 > 65535)
    14b0:	ce 01       	movw	r24, r28
    14b2:	87 57       	subi	r24, 0x77	; 119
    14b4:	9f 4f       	sbci	r25, 0xFF	; 255
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	3f ef       	ldi	r19, 0xFF	; 255
    14ba:	4f e7       	ldi	r20, 0x7F	; 127
    14bc:	57 e4       	ldi	r21, 0x47	; 71
    14be:	dc 01       	movw	r26, r24
    14c0:	6d 91       	ld	r22, X+
    14c2:	7d 91       	ld	r23, X+
    14c4:	8d 91       	ld	r24, X+
    14c6:	9c 91       	ld	r25, X
    14c8:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    14cc:	18 16       	cp	r1, r24
    14ce:	0c f0       	brlt	.+2      	; 0x14d2 <lcd_init+0x16c>
    14d0:	22 c1       	rjmp	.+580    	; 0x1716 <lcd_init+0x3b0>
		_delay_ms(__us / 1000.0);
    14d2:	ce 01       	movw	r24, r28
    14d4:	8f 57       	subi	r24, 0x7F	; 127
    14d6:	9f 4f       	sbci	r25, 0xFF	; 255
    14d8:	20 e0       	ldi	r18, 0x00	; 0
    14da:	30 e0       	ldi	r19, 0x00	; 0
    14dc:	4a e7       	ldi	r20, 0x7A	; 122
    14de:	54 e4       	ldi	r21, 0x44	; 68
    14e0:	fc 01       	movw	r30, r24
    14e2:	60 81       	ld	r22, Z
    14e4:	71 81       	ldd	r23, Z+1	; 0x01
    14e6:	82 81       	ldd	r24, Z+2	; 0x02
    14e8:	93 81       	ldd	r25, Z+3	; 0x03
    14ea:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
    14ee:	c2 54       	subi	r28, 0x42	; 66
    14f0:	df 4f       	sbci	r29, 0xFF	; 255
    14f2:	68 83       	st	Y, r22
    14f4:	79 83       	std	Y+1, r23	; 0x01
    14f6:	8a 83       	std	Y+2, r24	; 0x02
    14f8:	9b 83       	std	Y+3, r25	; 0x03
    14fa:	ce 5b       	subi	r28, 0xBE	; 190
    14fc:	d0 40       	sbci	r29, 0x00	; 0
    14fe:	c2 54       	subi	r28, 0x42	; 66
    1500:	df 4f       	sbci	r29, 0xFF	; 255
    1502:	88 81       	ld	r24, Y
    1504:	99 81       	ldd	r25, Y+1	; 0x01
    1506:	aa 81       	ldd	r26, Y+2	; 0x02
    1508:	bb 81       	ldd	r27, Y+3	; 0x03
    150a:	ce 5b       	subi	r28, 0xBE	; 190
    150c:	d0 40       	sbci	r29, 0x00	; 0
    150e:	9e 01       	movw	r18, r28
    1510:	22 57       	subi	r18, 0x72	; 114
    1512:	3f 4f       	sbci	r19, 0xFF	; 255
    1514:	f9 01       	movw	r30, r18
    1516:	80 83       	st	Z, r24
    1518:	91 83       	std	Z+1, r25	; 0x01
    151a:	a2 83       	std	Z+2, r26	; 0x02
    151c:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
    151e:	8e 01       	movw	r16, r28
    1520:	0e 56       	subi	r16, 0x6E	; 110
    1522:	1f 4f       	sbci	r17, 0xFF	; 255
    1524:	ce 01       	movw	r24, r28
    1526:	82 57       	subi	r24, 0x72	; 114
    1528:	9f 4f       	sbci	r25, 0xFF	; 255
    152a:	20 e0       	ldi	r18, 0x00	; 0
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	4a e7       	ldi	r20, 0x7A	; 122
    1530:	55 e4       	ldi	r21, 0x45	; 69
    1532:	dc 01       	movw	r26, r24
    1534:	6d 91       	ld	r22, X+
    1536:	7d 91       	ld	r23, X+
    1538:	8d 91       	ld	r24, X+
    153a:	9c 91       	ld	r25, X
    153c:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1540:	ce 53       	subi	r28, 0x3E	; 62
    1542:	df 4f       	sbci	r29, 0xFF	; 255
    1544:	68 83       	st	Y, r22
    1546:	79 83       	std	Y+1, r23	; 0x01
    1548:	8a 83       	std	Y+2, r24	; 0x02
    154a:	9b 83       	std	Y+3, r25	; 0x03
    154c:	c2 5c       	subi	r28, 0xC2	; 194
    154e:	d0 40       	sbci	r29, 0x00	; 0
    1550:	ce 53       	subi	r28, 0x3E	; 62
    1552:	df 4f       	sbci	r29, 0xFF	; 255
    1554:	88 81       	ld	r24, Y
    1556:	99 81       	ldd	r25, Y+1	; 0x01
    1558:	aa 81       	ldd	r26, Y+2	; 0x02
    155a:	bb 81       	ldd	r27, Y+3	; 0x03
    155c:	c2 5c       	subi	r28, 0xC2	; 194
    155e:	d0 40       	sbci	r29, 0x00	; 0
    1560:	f8 01       	movw	r30, r16
    1562:	80 83       	st	Z, r24
    1564:	91 83       	std	Z+1, r25	; 0x01
    1566:	a2 83       	std	Z+2, r26	; 0x02
    1568:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    156a:	ce 01       	movw	r24, r28
    156c:	8e 56       	subi	r24, 0x6E	; 110
    156e:	9f 4f       	sbci	r25, 0xFF	; 255
    1570:	20 e0       	ldi	r18, 0x00	; 0
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	40 e8       	ldi	r20, 0x80	; 128
    1576:	5f e3       	ldi	r21, 0x3F	; 63
    1578:	dc 01       	movw	r26, r24
    157a:	6d 91       	ld	r22, X+
    157c:	7d 91       	ld	r23, X+
    157e:	8d 91       	ld	r24, X+
    1580:	9c 91       	ld	r25, X
    1582:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    1586:	88 23       	and	r24, r24
    1588:	4c f4       	brge	.+18     	; 0x159c <lcd_init+0x236>
		__ticks = 1;
    158a:	ce 01       	movw	r24, r28
    158c:	8a 56       	subi	r24, 0x6A	; 106
    158e:	9f 4f       	sbci	r25, 0xFF	; 255
    1590:	21 e0       	ldi	r18, 0x01	; 1
    1592:	30 e0       	ldi	r19, 0x00	; 0
    1594:	fc 01       	movw	r30, r24
    1596:	31 83       	std	Z+1, r19	; 0x01
    1598:	20 83       	st	Z, r18
    159a:	a2 c0       	rjmp	.+324    	; 0x16e0 <lcd_init+0x37a>
	else if (__tmp > 65535)
    159c:	ce 01       	movw	r24, r28
    159e:	8e 56       	subi	r24, 0x6E	; 110
    15a0:	9f 4f       	sbci	r25, 0xFF	; 255
    15a2:	20 e0       	ldi	r18, 0x00	; 0
    15a4:	3f ef       	ldi	r19, 0xFF	; 255
    15a6:	4f e7       	ldi	r20, 0x7F	; 127
    15a8:	57 e4       	ldi	r21, 0x47	; 71
    15aa:	dc 01       	movw	r26, r24
    15ac:	6d 91       	ld	r22, X+
    15ae:	7d 91       	ld	r23, X+
    15b0:	8d 91       	ld	r24, X+
    15b2:	9c 91       	ld	r25, X
    15b4:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    15b8:	18 16       	cp	r1, r24
    15ba:	0c f0       	brlt	.+2      	; 0x15be <lcd_init+0x258>
    15bc:	73 c0       	rjmp	.+230    	; 0x16a4 <lcd_init+0x33e>
		__ticks = (uint16_t) (__ms * 10.0);
    15be:	ce 01       	movw	r24, r28
    15c0:	82 57       	subi	r24, 0x72	; 114
    15c2:	9f 4f       	sbci	r25, 0xFF	; 255
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	30 e0       	ldi	r19, 0x00	; 0
    15c8:	40 e2       	ldi	r20, 0x20	; 32
    15ca:	51 e4       	ldi	r21, 0x41	; 65
    15cc:	fc 01       	movw	r30, r24
    15ce:	60 81       	ld	r22, Z
    15d0:	71 81       	ldd	r23, Z+1	; 0x01
    15d2:	82 81       	ldd	r24, Z+2	; 0x02
    15d4:	93 81       	ldd	r25, Z+3	; 0x03
    15d6:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    15da:	ca 53       	subi	r28, 0x3A	; 58
    15dc:	df 4f       	sbci	r29, 0xFF	; 255
    15de:	68 83       	st	Y, r22
    15e0:	79 83       	std	Y+1, r23	; 0x01
    15e2:	8a 83       	std	Y+2, r24	; 0x02
    15e4:	9b 83       	std	Y+3, r25	; 0x03
    15e6:	c6 5c       	subi	r28, 0xC6	; 198
    15e8:	d0 40       	sbci	r29, 0x00	; 0
    15ea:	ca 53       	subi	r28, 0x3A	; 58
    15ec:	df 4f       	sbci	r29, 0xFF	; 255
    15ee:	88 81       	ld	r24, Y
    15f0:	99 81       	ldd	r25, Y+1	; 0x01
    15f2:	aa 81       	ldd	r26, Y+2	; 0x02
    15f4:	bb 81       	ldd	r27, Y+3	; 0x03
    15f6:	c6 5c       	subi	r28, 0xC6	; 198
    15f8:	d0 40       	sbci	r29, 0x00	; 0
    15fa:	ce 54       	subi	r28, 0x4E	; 78
    15fc:	df 4f       	sbci	r29, 0xFF	; 255
    15fe:	88 83       	st	Y, r24
    1600:	99 83       	std	Y+1, r25	; 0x01
    1602:	aa 83       	std	Y+2, r26	; 0x02
    1604:	bb 83       	std	Y+3, r27	; 0x03
    1606:	c2 5b       	subi	r28, 0xB2	; 178
    1608:	d0 40       	sbci	r29, 0x00	; 0
    160a:	8e 01       	movw	r16, r28
    160c:	0a 56       	subi	r16, 0x6A	; 106
    160e:	1f 4f       	sbci	r17, 0xFF	; 255
    1610:	ce 54       	subi	r28, 0x4E	; 78
    1612:	df 4f       	sbci	r29, 0xFF	; 255
    1614:	68 81       	ld	r22, Y
    1616:	79 81       	ldd	r23, Y+1	; 0x01
    1618:	8a 81       	ldd	r24, Y+2	; 0x02
    161a:	9b 81       	ldd	r25, Y+3	; 0x03
    161c:	c2 5b       	subi	r28, 0xB2	; 178
    161e:	d0 40       	sbci	r29, 0x00	; 0
    1620:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1624:	c6 53       	subi	r28, 0x36	; 54
    1626:	df 4f       	sbci	r29, 0xFF	; 255
    1628:	68 83       	st	Y, r22
    162a:	79 83       	std	Y+1, r23	; 0x01
    162c:	8a 83       	std	Y+2, r24	; 0x02
    162e:	9b 83       	std	Y+3, r25	; 0x03
    1630:	ca 5c       	subi	r28, 0xCA	; 202
    1632:	d0 40       	sbci	r29, 0x00	; 0
    1634:	c6 53       	subi	r28, 0x36	; 54
    1636:	df 4f       	sbci	r29, 0xFF	; 255
    1638:	e8 81       	ld	r30, Y
    163a:	f9 81       	ldd	r31, Y+1	; 0x01
    163c:	ca 5c       	subi	r28, 0xCA	; 202
    163e:	d0 40       	sbci	r29, 0x00	; 0
    1640:	d8 01       	movw	r26, r16
    1642:	ed 93       	st	X+, r30
    1644:	fc 93       	st	X, r31
		while(__ticks)
    1646:	25 c0       	rjmp	.+74     	; 0x1692 <lcd_init+0x32c>
    1648:	ce 01       	movw	r24, r28
    164a:	88 56       	subi	r24, 0x68	; 104
    164c:	9f 4f       	sbci	r25, 0xFF	; 255
    164e:	20 e9       	ldi	r18, 0x90	; 144
    1650:	31 e0       	ldi	r19, 0x01	; 1
    1652:	dc 01       	movw	r26, r24
    1654:	2d 93       	st	X+, r18
    1656:	3c 93       	st	X, r19
	__asm__ volatile (
    1658:	ce 01       	movw	r24, r28
    165a:	88 56       	subi	r24, 0x68	; 104
    165c:	9f 4f       	sbci	r25, 0xFF	; 255
    165e:	fc 01       	movw	r30, r24
    1660:	80 81       	ld	r24, Z
    1662:	91 81       	ldd	r25, Z+1	; 0x01
    1664:	01 97       	sbiw	r24, 0x01	; 1
    1666:	f1 f7       	brne	.-4      	; 0x1664 <lcd_init+0x2fe>
    1668:	9e 01       	movw	r18, r28
    166a:	28 56       	subi	r18, 0x68	; 104
    166c:	3f 4f       	sbci	r19, 0xFF	; 255
    166e:	d9 01       	movw	r26, r18
    1670:	8d 93       	st	X+, r24
    1672:	9c 93       	st	X, r25
}
    1674:	00 00       	nop
			__ticks --;
    1676:	ce 01       	movw	r24, r28
    1678:	8a 56       	subi	r24, 0x6A	; 106
    167a:	9f 4f       	sbci	r25, 0xFF	; 255
    167c:	9e 01       	movw	r18, r28
    167e:	2a 56       	subi	r18, 0x6A	; 106
    1680:	3f 4f       	sbci	r19, 0xFF	; 255
    1682:	f9 01       	movw	r30, r18
    1684:	20 81       	ld	r18, Z
    1686:	31 81       	ldd	r19, Z+1	; 0x01
    1688:	21 50       	subi	r18, 0x01	; 1
    168a:	31 09       	sbc	r19, r1
    168c:	dc 01       	movw	r26, r24
    168e:	2d 93       	st	X+, r18
    1690:	3c 93       	st	X, r19
		while(__ticks)
    1692:	ce 01       	movw	r24, r28
    1694:	8a 56       	subi	r24, 0x6A	; 106
    1696:	9f 4f       	sbci	r25, 0xFF	; 255
    1698:	fc 01       	movw	r30, r24
    169a:	80 81       	ld	r24, Z
    169c:	91 81       	ldd	r25, Z+1	; 0x01
    169e:	89 2b       	or	r24, r25
    16a0:	99 f6       	brne	.-90     	; 0x1648 <lcd_init+0x2e2>
		return;
    16a2:	9f c0       	rjmp	.+318    	; 0x17e2 <lcd_init+0x47c>
		__ticks = (uint16_t)__tmp;
    16a4:	8e 01       	movw	r16, r28
    16a6:	0a 56       	subi	r16, 0x6A	; 106
    16a8:	1f 4f       	sbci	r17, 0xFF	; 255
    16aa:	ce 01       	movw	r24, r28
    16ac:	8e 56       	subi	r24, 0x6E	; 110
    16ae:	9f 4f       	sbci	r25, 0xFF	; 255
    16b0:	dc 01       	movw	r26, r24
    16b2:	6d 91       	ld	r22, X+
    16b4:	7d 91       	ld	r23, X+
    16b6:	8d 91       	ld	r24, X+
    16b8:	9c 91       	ld	r25, X
    16ba:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    16be:	c2 53       	subi	r28, 0x32	; 50
    16c0:	df 4f       	sbci	r29, 0xFF	; 255
    16c2:	68 83       	st	Y, r22
    16c4:	79 83       	std	Y+1, r23	; 0x01
    16c6:	8a 83       	std	Y+2, r24	; 0x02
    16c8:	9b 83       	std	Y+3, r25	; 0x03
    16ca:	ce 5c       	subi	r28, 0xCE	; 206
    16cc:	d0 40       	sbci	r29, 0x00	; 0
    16ce:	c2 53       	subi	r28, 0x32	; 50
    16d0:	df 4f       	sbci	r29, 0xFF	; 255
    16d2:	88 81       	ld	r24, Y
    16d4:	99 81       	ldd	r25, Y+1	; 0x01
    16d6:	ce 5c       	subi	r28, 0xCE	; 206
    16d8:	d0 40       	sbci	r29, 0x00	; 0
    16da:	f8 01       	movw	r30, r16
    16dc:	91 83       	std	Z+1, r25	; 0x01
    16de:	80 83       	st	Z, r24
    16e0:	ce 01       	movw	r24, r28
    16e2:	86 56       	subi	r24, 0x66	; 102
    16e4:	9f 4f       	sbci	r25, 0xFF	; 255
    16e6:	9e 01       	movw	r18, r28
    16e8:	2a 56       	subi	r18, 0x6A	; 106
    16ea:	3f 4f       	sbci	r19, 0xFF	; 255
    16ec:	d9 01       	movw	r26, r18
    16ee:	2d 91       	ld	r18, X+
    16f0:	3c 91       	ld	r19, X
    16f2:	fc 01       	movw	r30, r24
    16f4:	31 83       	std	Z+1, r19	; 0x01
    16f6:	20 83       	st	Z, r18
	__asm__ volatile (
    16f8:	ce 01       	movw	r24, r28
    16fa:	86 56       	subi	r24, 0x66	; 102
    16fc:	9f 4f       	sbci	r25, 0xFF	; 255
    16fe:	dc 01       	movw	r26, r24
    1700:	8d 91       	ld	r24, X+
    1702:	9c 91       	ld	r25, X
    1704:	01 97       	sbiw	r24, 0x01	; 1
    1706:	f1 f7       	brne	.-4      	; 0x1704 <lcd_init+0x39e>
    1708:	9e 01       	movw	r18, r28
    170a:	26 56       	subi	r18, 0x66	; 102
    170c:	3f 4f       	sbci	r19, 0xFF	; 255
    170e:	f9 01       	movw	r30, r18
    1710:	91 83       	std	Z+1, r25	; 0x01
    1712:	80 83       	st	Z, r24
}
    1714:	66 c0       	rjmp	.+204    	; 0x17e2 <lcd_init+0x47c>
	else if (__tmp > 255)
    1716:	ce 01       	movw	r24, r28
    1718:	8b 57       	subi	r24, 0x7B	; 123
    171a:	9f 4f       	sbci	r25, 0xFF	; 255
    171c:	20 e0       	ldi	r18, 0x00	; 0
    171e:	30 e0       	ldi	r19, 0x00	; 0
    1720:	4f e7       	ldi	r20, 0x7F	; 127
    1722:	53 e4       	ldi	r21, 0x43	; 67
    1724:	dc 01       	movw	r26, r24
    1726:	6d 91       	ld	r22, X+
    1728:	7d 91       	ld	r23, X+
    172a:	8d 91       	ld	r24, X+
    172c:	9c 91       	ld	r25, X
    172e:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    1732:	18 16       	cp	r1, r24
    1734:	d4 f5       	brge	.+116    	; 0x17aa <lcd_init+0x444>
		uint16_t __ticks=(uint16_t)__tmp2;
    1736:	8e 01       	movw	r16, r28
    1738:	04 56       	subi	r16, 0x64	; 100
    173a:	1f 4f       	sbci	r17, 0xFF	; 255
    173c:	ce 01       	movw	r24, r28
    173e:	87 57       	subi	r24, 0x77	; 119
    1740:	9f 4f       	sbci	r25, 0xFF	; 255
    1742:	fc 01       	movw	r30, r24
    1744:	60 81       	ld	r22, Z
    1746:	71 81       	ldd	r23, Z+1	; 0x01
    1748:	82 81       	ldd	r24, Z+2	; 0x02
    174a:	93 81       	ldd	r25, Z+3	; 0x03
    174c:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1750:	ce 52       	subi	r28, 0x2E	; 46
    1752:	df 4f       	sbci	r29, 0xFF	; 255
    1754:	68 83       	st	Y, r22
    1756:	79 83       	std	Y+1, r23	; 0x01
    1758:	8a 83       	std	Y+2, r24	; 0x02
    175a:	9b 83       	std	Y+3, r25	; 0x03
    175c:	c2 5d       	subi	r28, 0xD2	; 210
    175e:	d0 40       	sbci	r29, 0x00	; 0
    1760:	ce 52       	subi	r28, 0x2E	; 46
    1762:	df 4f       	sbci	r29, 0xFF	; 255
    1764:	e8 81       	ld	r30, Y
    1766:	f9 81       	ldd	r31, Y+1	; 0x01
    1768:	c2 5d       	subi	r28, 0xD2	; 210
    176a:	d0 40       	sbci	r29, 0x00	; 0
    176c:	d8 01       	movw	r26, r16
    176e:	ed 93       	st	X+, r30
    1770:	fc 93       	st	X, r31
    1772:	ce 01       	movw	r24, r28
    1774:	82 56       	subi	r24, 0x62	; 98
    1776:	9f 4f       	sbci	r25, 0xFF	; 255
    1778:	9e 01       	movw	r18, r28
    177a:	24 56       	subi	r18, 0x64	; 100
    177c:	3f 4f       	sbci	r19, 0xFF	; 255
    177e:	d9 01       	movw	r26, r18
    1780:	2d 91       	ld	r18, X+
    1782:	3c 91       	ld	r19, X
    1784:	fc 01       	movw	r30, r24
    1786:	31 83       	std	Z+1, r19	; 0x01
    1788:	20 83       	st	Z, r18
	__asm__ volatile (
    178a:	ce 01       	movw	r24, r28
    178c:	82 56       	subi	r24, 0x62	; 98
    178e:	9f 4f       	sbci	r25, 0xFF	; 255
    1790:	dc 01       	movw	r26, r24
    1792:	8d 91       	ld	r24, X+
    1794:	9c 91       	ld	r25, X
    1796:	01 97       	sbiw	r24, 0x01	; 1
    1798:	f1 f7       	brne	.-4      	; 0x1796 <lcd_init+0x430>
    179a:	9e 01       	movw	r18, r28
    179c:	22 56       	subi	r18, 0x62	; 98
    179e:	3f 4f       	sbci	r19, 0xFF	; 255
    17a0:	f9 01       	movw	r30, r18
    17a2:	91 83       	std	Z+1, r25	; 0x01
    17a4:	80 83       	st	Z, r24
}
    17a6:	00 00       	nop
		return;
    17a8:	34 c0       	rjmp	.+104    	; 0x1812 <lcd_init+0x4ac>
		__ticks = (uint8_t)__tmp;
    17aa:	8e 01       	movw	r16, r28
    17ac:	03 57       	subi	r16, 0x73	; 115
    17ae:	1f 4f       	sbci	r17, 0xFF	; 255
    17b0:	ce 01       	movw	r24, r28
    17b2:	8b 57       	subi	r24, 0x7B	; 123
    17b4:	9f 4f       	sbci	r25, 0xFF	; 255
    17b6:	dc 01       	movw	r26, r24
    17b8:	6d 91       	ld	r22, X+
    17ba:	7d 91       	ld	r23, X+
    17bc:	8d 91       	ld	r24, X+
    17be:	9c 91       	ld	r25, X
    17c0:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    17c4:	ca 52       	subi	r28, 0x2A	; 42
    17c6:	df 4f       	sbci	r29, 0xFF	; 255
    17c8:	68 83       	st	Y, r22
    17ca:	79 83       	std	Y+1, r23	; 0x01
    17cc:	8a 83       	std	Y+2, r24	; 0x02
    17ce:	9b 83       	std	Y+3, r25	; 0x03
    17d0:	c6 5d       	subi	r28, 0xD6	; 214
    17d2:	d0 40       	sbci	r29, 0x00	; 0
    17d4:	ca 52       	subi	r28, 0x2A	; 42
    17d6:	df 4f       	sbci	r29, 0xFF	; 255
    17d8:	88 81       	ld	r24, Y
    17da:	c6 5d       	subi	r28, 0xD6	; 214
    17dc:	d0 40       	sbci	r29, 0x00	; 0
    17de:	f8 01       	movw	r30, r16
    17e0:	80 83       	st	Z, r24
    17e2:	ce 01       	movw	r24, r28
    17e4:	80 56       	subi	r24, 0x60	; 96
    17e6:	9f 4f       	sbci	r25, 0xFF	; 255
    17e8:	9e 01       	movw	r18, r28
    17ea:	23 57       	subi	r18, 0x73	; 115
    17ec:	3f 4f       	sbci	r19, 0xFF	; 255
    17ee:	d9 01       	movw	r26, r18
    17f0:	2c 91       	ld	r18, X
    17f2:	fc 01       	movw	r30, r24
    17f4:	20 83       	st	Z, r18
	__asm__ volatile (
    17f6:	ce 01       	movw	r24, r28
    17f8:	80 56       	subi	r24, 0x60	; 96
    17fa:	9f 4f       	sbci	r25, 0xFF	; 255
    17fc:	dc 01       	movw	r26, r24
    17fe:	8c 91       	ld	r24, X
    1800:	28 2f       	mov	r18, r24
    1802:	2a 95       	dec	r18
    1804:	f1 f7       	brne	.-4      	; 0x1802 <lcd_init+0x49c>
    1806:	ce 01       	movw	r24, r28
    1808:	80 56       	subi	r24, 0x60	; 96
    180a:	9f 4f       	sbci	r25, 0xFF	; 255
    180c:	fc 01       	movw	r30, r24
    180e:	20 83       	st	Z, r18
}
    1810:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
    1812:	85 e2       	ldi	r24, 0x25	; 37
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	dc 01       	movw	r26, r24
    1818:	2c 91       	ld	r18, X
    181a:	85 e2       	ldi	r24, 0x25	; 37
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	22 60       	ori	r18, 0x02	; 2
    1820:	fc 01       	movw	r30, r24
    1822:	20 83       	st	Z, r18
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
    1824:	85 e2       	ldi	r24, 0x25	; 37
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	dc 01       	movw	r26, r24
    182a:	2c 91       	ld	r18, X
    182c:	85 e2       	ldi	r24, 0x25	; 37
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	21 60       	ori	r18, 0x01	; 1
    1832:	fc 01       	movw	r30, r24
    1834:	20 83       	st	Z, r18
    lcd_e_toggle();
    1836:	0e 94 48 00 	call	0x90	; 0x90 <toggle_e>
    183a:	9e 01       	movw	r18, r28
    183c:	2f 59       	subi	r18, 0x9F	; 159
    183e:	3f 4f       	sbci	r19, 0xFF	; 255
    1840:	80 e0       	ldi	r24, 0x00	; 0
    1842:	90 e4       	ldi	r25, 0x40	; 64
    1844:	ac e9       	ldi	r26, 0x9C	; 156
    1846:	b5 e4       	ldi	r27, 0x45	; 69
    1848:	f9 01       	movw	r30, r18
    184a:	80 83       	st	Z, r24
    184c:	91 83       	std	Z+1, r25	; 0x01
    184e:	a2 83       	std	Z+2, r26	; 0x02
    1850:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
    1852:	8e 01       	movw	r16, r28
    1854:	0b 59       	subi	r16, 0x9B	; 155
    1856:	1f 4f       	sbci	r17, 0xFF	; 255
    1858:	ce 01       	movw	r24, r28
    185a:	8f 59       	subi	r24, 0x9F	; 159
    185c:	9f 4f       	sbci	r25, 0xFF	; 255
    185e:	2b ea       	ldi	r18, 0xAB	; 171
    1860:	3a ea       	ldi	r19, 0xAA	; 170
    1862:	4a ea       	ldi	r20, 0xAA	; 170
    1864:	50 e4       	ldi	r21, 0x40	; 64
    1866:	dc 01       	movw	r26, r24
    1868:	6d 91       	ld	r22, X+
    186a:	7d 91       	ld	r23, X+
    186c:	8d 91       	ld	r24, X+
    186e:	9c 91       	ld	r25, X
    1870:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1874:	c6 52       	subi	r28, 0x26	; 38
    1876:	df 4f       	sbci	r29, 0xFF	; 255
    1878:	68 83       	st	Y, r22
    187a:	79 83       	std	Y+1, r23	; 0x01
    187c:	8a 83       	std	Y+2, r24	; 0x02
    187e:	9b 83       	std	Y+3, r25	; 0x03
    1880:	ca 5d       	subi	r28, 0xDA	; 218
    1882:	d0 40       	sbci	r29, 0x00	; 0
    1884:	c6 52       	subi	r28, 0x26	; 38
    1886:	df 4f       	sbci	r29, 0xFF	; 255
    1888:	88 81       	ld	r24, Y
    188a:	99 81       	ldd	r25, Y+1	; 0x01
    188c:	aa 81       	ldd	r26, Y+2	; 0x02
    188e:	bb 81       	ldd	r27, Y+3	; 0x03
    1890:	ca 5d       	subi	r28, 0xDA	; 218
    1892:	d0 40       	sbci	r29, 0x00	; 0
    1894:	f8 01       	movw	r30, r16
    1896:	80 83       	st	Z, r24
    1898:	91 83       	std	Z+1, r25	; 0x01
    189a:	a2 83       	std	Z+2, r26	; 0x02
    189c:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    189e:	8e 01       	movw	r16, r28
    18a0:	07 59       	subi	r16, 0x97	; 151
    18a2:	1f 4f       	sbci	r17, 0xFF	; 255
    18a4:	ce 01       	movw	r24, r28
    18a6:	8f 59       	subi	r24, 0x9F	; 159
    18a8:	9f 4f       	sbci	r25, 0xFF	; 255
    18aa:	20 e0       	ldi	r18, 0x00	; 0
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	40 e8       	ldi	r20, 0x80	; 128
    18b0:	50 e4       	ldi	r21, 0x40	; 64
    18b2:	dc 01       	movw	r26, r24
    18b4:	6d 91       	ld	r22, X+
    18b6:	7d 91       	ld	r23, X+
    18b8:	8d 91       	ld	r24, X+
    18ba:	9c 91       	ld	r25, X
    18bc:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    18c0:	c2 52       	subi	r28, 0x22	; 34
    18c2:	df 4f       	sbci	r29, 0xFF	; 255
    18c4:	68 83       	st	Y, r22
    18c6:	79 83       	std	Y+1, r23	; 0x01
    18c8:	8a 83       	std	Y+2, r24	; 0x02
    18ca:	9b 83       	std	Y+3, r25	; 0x03
    18cc:	ce 5d       	subi	r28, 0xDE	; 222
    18ce:	d0 40       	sbci	r29, 0x00	; 0
    18d0:	c2 52       	subi	r28, 0x22	; 34
    18d2:	df 4f       	sbci	r29, 0xFF	; 255
    18d4:	88 81       	ld	r24, Y
    18d6:	99 81       	ldd	r25, Y+1	; 0x01
    18d8:	aa 81       	ldd	r26, Y+2	; 0x02
    18da:	bb 81       	ldd	r27, Y+3	; 0x03
    18dc:	ce 5d       	subi	r28, 0xDE	; 222
    18de:	d0 40       	sbci	r29, 0x00	; 0
    18e0:	f8 01       	movw	r30, r16
    18e2:	80 83       	st	Z, r24
    18e4:	91 83       	std	Z+1, r25	; 0x01
    18e6:	a2 83       	std	Z+2, r26	; 0x02
    18e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18ea:	ce 01       	movw	r24, r28
    18ec:	8b 59       	subi	r24, 0x9B	; 155
    18ee:	9f 4f       	sbci	r25, 0xFF	; 255
    18f0:	20 e0       	ldi	r18, 0x00	; 0
    18f2:	30 e0       	ldi	r19, 0x00	; 0
    18f4:	40 e8       	ldi	r20, 0x80	; 128
    18f6:	5f e3       	ldi	r21, 0x3F	; 63
    18f8:	dc 01       	movw	r26, r24
    18fa:	6d 91       	ld	r22, X+
    18fc:	7d 91       	ld	r23, X+
    18fe:	8d 91       	ld	r24, X+
    1900:	9c 91       	ld	r25, X
    1902:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    1906:	88 23       	and	r24, r24
    1908:	3c f4       	brge	.+14     	; 0x1918 <lcd_init+0x5b2>
		__ticks = 1;
    190a:	ce 01       	movw	r24, r28
    190c:	83 59       	subi	r24, 0x93	; 147
    190e:	9f 4f       	sbci	r25, 0xFF	; 255
    1910:	21 e0       	ldi	r18, 0x01	; 1
    1912:	fc 01       	movw	r30, r24
    1914:	20 83       	st	Z, r18
    1916:	99 c1       	rjmp	.+818    	; 0x1c4a <lcd_init+0x8e4>
	else if (__tmp2 > 65535)
    1918:	ce 01       	movw	r24, r28
    191a:	87 59       	subi	r24, 0x97	; 151
    191c:	9f 4f       	sbci	r25, 0xFF	; 255
    191e:	20 e0       	ldi	r18, 0x00	; 0
    1920:	3f ef       	ldi	r19, 0xFF	; 255
    1922:	4f e7       	ldi	r20, 0x7F	; 127
    1924:	57 e4       	ldi	r21, 0x47	; 71
    1926:	dc 01       	movw	r26, r24
    1928:	6d 91       	ld	r22, X+
    192a:	7d 91       	ld	r23, X+
    192c:	8d 91       	ld	r24, X+
    192e:	9c 91       	ld	r25, X
    1930:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    1934:	18 16       	cp	r1, r24
    1936:	0c f0       	brlt	.+2      	; 0x193a <lcd_init+0x5d4>
    1938:	22 c1       	rjmp	.+580    	; 0x1b7e <lcd_init+0x818>
		_delay_ms(__us / 1000.0);
    193a:	ce 01       	movw	r24, r28
    193c:	8f 59       	subi	r24, 0x9F	; 159
    193e:	9f 4f       	sbci	r25, 0xFF	; 255
    1940:	20 e0       	ldi	r18, 0x00	; 0
    1942:	30 e0       	ldi	r19, 0x00	; 0
    1944:	4a e7       	ldi	r20, 0x7A	; 122
    1946:	54 e4       	ldi	r21, 0x44	; 68
    1948:	fc 01       	movw	r30, r24
    194a:	60 81       	ld	r22, Z
    194c:	71 81       	ldd	r23, Z+1	; 0x01
    194e:	82 81       	ldd	r24, Z+2	; 0x02
    1950:	93 81       	ldd	r25, Z+3	; 0x03
    1952:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
    1956:	ce 51       	subi	r28, 0x1E	; 30
    1958:	df 4f       	sbci	r29, 0xFF	; 255
    195a:	68 83       	st	Y, r22
    195c:	79 83       	std	Y+1, r23	; 0x01
    195e:	8a 83       	std	Y+2, r24	; 0x02
    1960:	9b 83       	std	Y+3, r25	; 0x03
    1962:	c2 5e       	subi	r28, 0xE2	; 226
    1964:	d0 40       	sbci	r29, 0x00	; 0
    1966:	ce 51       	subi	r28, 0x1E	; 30
    1968:	df 4f       	sbci	r29, 0xFF	; 255
    196a:	88 81       	ld	r24, Y
    196c:	99 81       	ldd	r25, Y+1	; 0x01
    196e:	aa 81       	ldd	r26, Y+2	; 0x02
    1970:	bb 81       	ldd	r27, Y+3	; 0x03
    1972:	c2 5e       	subi	r28, 0xE2	; 226
    1974:	d0 40       	sbci	r29, 0x00	; 0
    1976:	9e 01       	movw	r18, r28
    1978:	22 59       	subi	r18, 0x92	; 146
    197a:	3f 4f       	sbci	r19, 0xFF	; 255
    197c:	f9 01       	movw	r30, r18
    197e:	80 83       	st	Z, r24
    1980:	91 83       	std	Z+1, r25	; 0x01
    1982:	a2 83       	std	Z+2, r26	; 0x02
    1984:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
    1986:	8e 01       	movw	r16, r28
    1988:	0e 58       	subi	r16, 0x8E	; 142
    198a:	1f 4f       	sbci	r17, 0xFF	; 255
    198c:	ce 01       	movw	r24, r28
    198e:	82 59       	subi	r24, 0x92	; 146
    1990:	9f 4f       	sbci	r25, 0xFF	; 255
    1992:	20 e0       	ldi	r18, 0x00	; 0
    1994:	30 e0       	ldi	r19, 0x00	; 0
    1996:	4a e7       	ldi	r20, 0x7A	; 122
    1998:	55 e4       	ldi	r21, 0x45	; 69
    199a:	dc 01       	movw	r26, r24
    199c:	6d 91       	ld	r22, X+
    199e:	7d 91       	ld	r23, X+
    19a0:	8d 91       	ld	r24, X+
    19a2:	9c 91       	ld	r25, X
    19a4:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    19a8:	ca 51       	subi	r28, 0x1A	; 26
    19aa:	df 4f       	sbci	r29, 0xFF	; 255
    19ac:	68 83       	st	Y, r22
    19ae:	79 83       	std	Y+1, r23	; 0x01
    19b0:	8a 83       	std	Y+2, r24	; 0x02
    19b2:	9b 83       	std	Y+3, r25	; 0x03
    19b4:	c6 5e       	subi	r28, 0xE6	; 230
    19b6:	d0 40       	sbci	r29, 0x00	; 0
    19b8:	ca 51       	subi	r28, 0x1A	; 26
    19ba:	df 4f       	sbci	r29, 0xFF	; 255
    19bc:	88 81       	ld	r24, Y
    19be:	99 81       	ldd	r25, Y+1	; 0x01
    19c0:	aa 81       	ldd	r26, Y+2	; 0x02
    19c2:	bb 81       	ldd	r27, Y+3	; 0x03
    19c4:	c6 5e       	subi	r28, 0xE6	; 230
    19c6:	d0 40       	sbci	r29, 0x00	; 0
    19c8:	f8 01       	movw	r30, r16
    19ca:	80 83       	st	Z, r24
    19cc:	91 83       	std	Z+1, r25	; 0x01
    19ce:	a2 83       	std	Z+2, r26	; 0x02
    19d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19d2:	ce 01       	movw	r24, r28
    19d4:	8e 58       	subi	r24, 0x8E	; 142
    19d6:	9f 4f       	sbci	r25, 0xFF	; 255
    19d8:	20 e0       	ldi	r18, 0x00	; 0
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	40 e8       	ldi	r20, 0x80	; 128
    19de:	5f e3       	ldi	r21, 0x3F	; 63
    19e0:	dc 01       	movw	r26, r24
    19e2:	6d 91       	ld	r22, X+
    19e4:	7d 91       	ld	r23, X+
    19e6:	8d 91       	ld	r24, X+
    19e8:	9c 91       	ld	r25, X
    19ea:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    19ee:	88 23       	and	r24, r24
    19f0:	4c f4       	brge	.+18     	; 0x1a04 <lcd_init+0x69e>
		__ticks = 1;
    19f2:	ce 01       	movw	r24, r28
    19f4:	8a 58       	subi	r24, 0x8A	; 138
    19f6:	9f 4f       	sbci	r25, 0xFF	; 255
    19f8:	21 e0       	ldi	r18, 0x01	; 1
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	fc 01       	movw	r30, r24
    19fe:	31 83       	std	Z+1, r19	; 0x01
    1a00:	20 83       	st	Z, r18
    1a02:	a2 c0       	rjmp	.+324    	; 0x1b48 <lcd_init+0x7e2>
	else if (__tmp > 65535)
    1a04:	ce 01       	movw	r24, r28
    1a06:	8e 58       	subi	r24, 0x8E	; 142
    1a08:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0a:	20 e0       	ldi	r18, 0x00	; 0
    1a0c:	3f ef       	ldi	r19, 0xFF	; 255
    1a0e:	4f e7       	ldi	r20, 0x7F	; 127
    1a10:	57 e4       	ldi	r21, 0x47	; 71
    1a12:	dc 01       	movw	r26, r24
    1a14:	6d 91       	ld	r22, X+
    1a16:	7d 91       	ld	r23, X+
    1a18:	8d 91       	ld	r24, X+
    1a1a:	9c 91       	ld	r25, X
    1a1c:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    1a20:	18 16       	cp	r1, r24
    1a22:	0c f0       	brlt	.+2      	; 0x1a26 <lcd_init+0x6c0>
    1a24:	73 c0       	rjmp	.+230    	; 0x1b0c <lcd_init+0x7a6>
		__ticks = (uint16_t) (__ms * 10.0);
    1a26:	ce 01       	movw	r24, r28
    1a28:	82 59       	subi	r24, 0x92	; 146
    1a2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a2c:	20 e0       	ldi	r18, 0x00	; 0
    1a2e:	30 e0       	ldi	r19, 0x00	; 0
    1a30:	40 e2       	ldi	r20, 0x20	; 32
    1a32:	51 e4       	ldi	r21, 0x41	; 65
    1a34:	fc 01       	movw	r30, r24
    1a36:	60 81       	ld	r22, Z
    1a38:	71 81       	ldd	r23, Z+1	; 0x01
    1a3a:	82 81       	ldd	r24, Z+2	; 0x02
    1a3c:	93 81       	ldd	r25, Z+3	; 0x03
    1a3e:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1a42:	c6 51       	subi	r28, 0x16	; 22
    1a44:	df 4f       	sbci	r29, 0xFF	; 255
    1a46:	68 83       	st	Y, r22
    1a48:	79 83       	std	Y+1, r23	; 0x01
    1a4a:	8a 83       	std	Y+2, r24	; 0x02
    1a4c:	9b 83       	std	Y+3, r25	; 0x03
    1a4e:	ca 5e       	subi	r28, 0xEA	; 234
    1a50:	d0 40       	sbci	r29, 0x00	; 0
    1a52:	c6 51       	subi	r28, 0x16	; 22
    1a54:	df 4f       	sbci	r29, 0xFF	; 255
    1a56:	88 81       	ld	r24, Y
    1a58:	99 81       	ldd	r25, Y+1	; 0x01
    1a5a:	aa 81       	ldd	r26, Y+2	; 0x02
    1a5c:	bb 81       	ldd	r27, Y+3	; 0x03
    1a5e:	ca 5e       	subi	r28, 0xEA	; 234
    1a60:	d0 40       	sbci	r29, 0x00	; 0
    1a62:	c2 55       	subi	r28, 0x52	; 82
    1a64:	df 4f       	sbci	r29, 0xFF	; 255
    1a66:	88 83       	st	Y, r24
    1a68:	99 83       	std	Y+1, r25	; 0x01
    1a6a:	aa 83       	std	Y+2, r26	; 0x02
    1a6c:	bb 83       	std	Y+3, r27	; 0x03
    1a6e:	ce 5a       	subi	r28, 0xAE	; 174
    1a70:	d0 40       	sbci	r29, 0x00	; 0
    1a72:	8e 01       	movw	r16, r28
    1a74:	0a 58       	subi	r16, 0x8A	; 138
    1a76:	1f 4f       	sbci	r17, 0xFF	; 255
    1a78:	c2 55       	subi	r28, 0x52	; 82
    1a7a:	df 4f       	sbci	r29, 0xFF	; 255
    1a7c:	68 81       	ld	r22, Y
    1a7e:	79 81       	ldd	r23, Y+1	; 0x01
    1a80:	8a 81       	ldd	r24, Y+2	; 0x02
    1a82:	9b 81       	ldd	r25, Y+3	; 0x03
    1a84:	ce 5a       	subi	r28, 0xAE	; 174
    1a86:	d0 40       	sbci	r29, 0x00	; 0
    1a88:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1a8c:	c2 51       	subi	r28, 0x12	; 18
    1a8e:	df 4f       	sbci	r29, 0xFF	; 255
    1a90:	68 83       	st	Y, r22
    1a92:	79 83       	std	Y+1, r23	; 0x01
    1a94:	8a 83       	std	Y+2, r24	; 0x02
    1a96:	9b 83       	std	Y+3, r25	; 0x03
    1a98:	ce 5e       	subi	r28, 0xEE	; 238
    1a9a:	d0 40       	sbci	r29, 0x00	; 0
    1a9c:	c2 51       	subi	r28, 0x12	; 18
    1a9e:	df 4f       	sbci	r29, 0xFF	; 255
    1aa0:	e8 81       	ld	r30, Y
    1aa2:	f9 81       	ldd	r31, Y+1	; 0x01
    1aa4:	ce 5e       	subi	r28, 0xEE	; 238
    1aa6:	d0 40       	sbci	r29, 0x00	; 0
    1aa8:	d8 01       	movw	r26, r16
    1aaa:	ed 93       	st	X+, r30
    1aac:	fc 93       	st	X, r31
		while(__ticks)
    1aae:	25 c0       	rjmp	.+74     	; 0x1afa <lcd_init+0x794>
    1ab0:	ce 01       	movw	r24, r28
    1ab2:	88 58       	subi	r24, 0x88	; 136
    1ab4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab6:	20 e9       	ldi	r18, 0x90	; 144
    1ab8:	31 e0       	ldi	r19, 0x01	; 1
    1aba:	dc 01       	movw	r26, r24
    1abc:	2d 93       	st	X+, r18
    1abe:	3c 93       	st	X, r19
	__asm__ volatile (
    1ac0:	ce 01       	movw	r24, r28
    1ac2:	88 58       	subi	r24, 0x88	; 136
    1ac4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac6:	fc 01       	movw	r30, r24
    1ac8:	80 81       	ld	r24, Z
    1aca:	91 81       	ldd	r25, Z+1	; 0x01
    1acc:	01 97       	sbiw	r24, 0x01	; 1
    1ace:	f1 f7       	brne	.-4      	; 0x1acc <lcd_init+0x766>
    1ad0:	9e 01       	movw	r18, r28
    1ad2:	28 58       	subi	r18, 0x88	; 136
    1ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad6:	d9 01       	movw	r26, r18
    1ad8:	8d 93       	st	X+, r24
    1ada:	9c 93       	st	X, r25
}
    1adc:	00 00       	nop
			__ticks --;
    1ade:	ce 01       	movw	r24, r28
    1ae0:	8a 58       	subi	r24, 0x8A	; 138
    1ae2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae4:	9e 01       	movw	r18, r28
    1ae6:	2a 58       	subi	r18, 0x8A	; 138
    1ae8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aea:	f9 01       	movw	r30, r18
    1aec:	20 81       	ld	r18, Z
    1aee:	31 81       	ldd	r19, Z+1	; 0x01
    1af0:	21 50       	subi	r18, 0x01	; 1
    1af2:	31 09       	sbc	r19, r1
    1af4:	dc 01       	movw	r26, r24
    1af6:	2d 93       	st	X+, r18
    1af8:	3c 93       	st	X, r19
		while(__ticks)
    1afa:	ce 01       	movw	r24, r28
    1afc:	8a 58       	subi	r24, 0x8A	; 138
    1afe:	9f 4f       	sbci	r25, 0xFF	; 255
    1b00:	fc 01       	movw	r30, r24
    1b02:	80 81       	ld	r24, Z
    1b04:	91 81       	ldd	r25, Z+1	; 0x01
    1b06:	89 2b       	or	r24, r25
    1b08:	99 f6       	brne	.-90     	; 0x1ab0 <lcd_init+0x74a>
		return;
    1b0a:	9f c0       	rjmp	.+318    	; 0x1c4a <lcd_init+0x8e4>
		__ticks = (uint16_t)__tmp;
    1b0c:	8e 01       	movw	r16, r28
    1b0e:	0a 58       	subi	r16, 0x8A	; 138
    1b10:	1f 4f       	sbci	r17, 0xFF	; 255
    1b12:	ce 01       	movw	r24, r28
    1b14:	8e 58       	subi	r24, 0x8E	; 142
    1b16:	9f 4f       	sbci	r25, 0xFF	; 255
    1b18:	dc 01       	movw	r26, r24
    1b1a:	6d 91       	ld	r22, X+
    1b1c:	7d 91       	ld	r23, X+
    1b1e:	8d 91       	ld	r24, X+
    1b20:	9c 91       	ld	r25, X
    1b22:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1b26:	ce 50       	subi	r28, 0x0E	; 14
    1b28:	df 4f       	sbci	r29, 0xFF	; 255
    1b2a:	68 83       	st	Y, r22
    1b2c:	79 83       	std	Y+1, r23	; 0x01
    1b2e:	8a 83       	std	Y+2, r24	; 0x02
    1b30:	9b 83       	std	Y+3, r25	; 0x03
    1b32:	c2 5f       	subi	r28, 0xF2	; 242
    1b34:	d0 40       	sbci	r29, 0x00	; 0
    1b36:	ce 50       	subi	r28, 0x0E	; 14
    1b38:	df 4f       	sbci	r29, 0xFF	; 255
    1b3a:	88 81       	ld	r24, Y
    1b3c:	99 81       	ldd	r25, Y+1	; 0x01
    1b3e:	c2 5f       	subi	r28, 0xF2	; 242
    1b40:	d0 40       	sbci	r29, 0x00	; 0
    1b42:	f8 01       	movw	r30, r16
    1b44:	91 83       	std	Z+1, r25	; 0x01
    1b46:	80 83       	st	Z, r24
    1b48:	ce 01       	movw	r24, r28
    1b4a:	86 58       	subi	r24, 0x86	; 134
    1b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4e:	9e 01       	movw	r18, r28
    1b50:	2a 58       	subi	r18, 0x8A	; 138
    1b52:	3f 4f       	sbci	r19, 0xFF	; 255
    1b54:	d9 01       	movw	r26, r18
    1b56:	2d 91       	ld	r18, X+
    1b58:	3c 91       	ld	r19, X
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	31 83       	std	Z+1, r19	; 0x01
    1b5e:	20 83       	st	Z, r18
	__asm__ volatile (
    1b60:	ce 01       	movw	r24, r28
    1b62:	86 58       	subi	r24, 0x86	; 134
    1b64:	9f 4f       	sbci	r25, 0xFF	; 255
    1b66:	dc 01       	movw	r26, r24
    1b68:	8d 91       	ld	r24, X+
    1b6a:	9c 91       	ld	r25, X
    1b6c:	01 97       	sbiw	r24, 0x01	; 1
    1b6e:	f1 f7       	brne	.-4      	; 0x1b6c <lcd_init+0x806>
    1b70:	9e 01       	movw	r18, r28
    1b72:	26 58       	subi	r18, 0x86	; 134
    1b74:	3f 4f       	sbci	r19, 0xFF	; 255
    1b76:	f9 01       	movw	r30, r18
    1b78:	91 83       	std	Z+1, r25	; 0x01
    1b7a:	80 83       	st	Z, r24
}
    1b7c:	66 c0       	rjmp	.+204    	; 0x1c4a <lcd_init+0x8e4>
	else if (__tmp > 255)
    1b7e:	ce 01       	movw	r24, r28
    1b80:	8b 59       	subi	r24, 0x9B	; 155
    1b82:	9f 4f       	sbci	r25, 0xFF	; 255
    1b84:	20 e0       	ldi	r18, 0x00	; 0
    1b86:	30 e0       	ldi	r19, 0x00	; 0
    1b88:	4f e7       	ldi	r20, 0x7F	; 127
    1b8a:	53 e4       	ldi	r21, 0x43	; 67
    1b8c:	dc 01       	movw	r26, r24
    1b8e:	6d 91       	ld	r22, X+
    1b90:	7d 91       	ld	r23, X+
    1b92:	8d 91       	ld	r24, X+
    1b94:	9c 91       	ld	r25, X
    1b96:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    1b9a:	18 16       	cp	r1, r24
    1b9c:	d4 f5       	brge	.+116    	; 0x1c12 <lcd_init+0x8ac>
		uint16_t __ticks=(uint16_t)__tmp2;
    1b9e:	8e 01       	movw	r16, r28
    1ba0:	04 58       	subi	r16, 0x84	; 132
    1ba2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba4:	ce 01       	movw	r24, r28
    1ba6:	87 59       	subi	r24, 0x97	; 151
    1ba8:	9f 4f       	sbci	r25, 0xFF	; 255
    1baa:	fc 01       	movw	r30, r24
    1bac:	60 81       	ld	r22, Z
    1bae:	71 81       	ldd	r23, Z+1	; 0x01
    1bb0:	82 81       	ldd	r24, Z+2	; 0x02
    1bb2:	93 81       	ldd	r25, Z+3	; 0x03
    1bb4:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1bb8:	ca 50       	subi	r28, 0x0A	; 10
    1bba:	df 4f       	sbci	r29, 0xFF	; 255
    1bbc:	68 83       	st	Y, r22
    1bbe:	79 83       	std	Y+1, r23	; 0x01
    1bc0:	8a 83       	std	Y+2, r24	; 0x02
    1bc2:	9b 83       	std	Y+3, r25	; 0x03
    1bc4:	c6 5f       	subi	r28, 0xF6	; 246
    1bc6:	d0 40       	sbci	r29, 0x00	; 0
    1bc8:	ca 50       	subi	r28, 0x0A	; 10
    1bca:	df 4f       	sbci	r29, 0xFF	; 255
    1bcc:	e8 81       	ld	r30, Y
    1bce:	f9 81       	ldd	r31, Y+1	; 0x01
    1bd0:	c6 5f       	subi	r28, 0xF6	; 246
    1bd2:	d0 40       	sbci	r29, 0x00	; 0
    1bd4:	d8 01       	movw	r26, r16
    1bd6:	ed 93       	st	X+, r30
    1bd8:	fc 93       	st	X, r31
    1bda:	ce 01       	movw	r24, r28
    1bdc:	82 58       	subi	r24, 0x82	; 130
    1bde:	9f 4f       	sbci	r25, 0xFF	; 255
    1be0:	9e 01       	movw	r18, r28
    1be2:	24 58       	subi	r18, 0x84	; 132
    1be4:	3f 4f       	sbci	r19, 0xFF	; 255
    1be6:	d9 01       	movw	r26, r18
    1be8:	2d 91       	ld	r18, X+
    1bea:	3c 91       	ld	r19, X
    1bec:	fc 01       	movw	r30, r24
    1bee:	31 83       	std	Z+1, r19	; 0x01
    1bf0:	20 83       	st	Z, r18
	__asm__ volatile (
    1bf2:	ce 01       	movw	r24, r28
    1bf4:	82 58       	subi	r24, 0x82	; 130
    1bf6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf8:	dc 01       	movw	r26, r24
    1bfa:	8d 91       	ld	r24, X+
    1bfc:	9c 91       	ld	r25, X
    1bfe:	01 97       	sbiw	r24, 0x01	; 1
    1c00:	f1 f7       	brne	.-4      	; 0x1bfe <lcd_init+0x898>
    1c02:	9e 01       	movw	r18, r28
    1c04:	22 58       	subi	r18, 0x82	; 130
    1c06:	3f 4f       	sbci	r19, 0xFF	; 255
    1c08:	f9 01       	movw	r30, r18
    1c0a:	91 83       	std	Z+1, r25	; 0x01
    1c0c:	80 83       	st	Z, r24
}
    1c0e:	00 00       	nop
		return;
    1c10:	34 c0       	rjmp	.+104    	; 0x1c7a <lcd_init+0x914>
		__ticks = (uint8_t)__tmp;
    1c12:	8e 01       	movw	r16, r28
    1c14:	03 59       	subi	r16, 0x93	; 147
    1c16:	1f 4f       	sbci	r17, 0xFF	; 255
    1c18:	ce 01       	movw	r24, r28
    1c1a:	8b 59       	subi	r24, 0x9B	; 155
    1c1c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c1e:	dc 01       	movw	r26, r24
    1c20:	6d 91       	ld	r22, X+
    1c22:	7d 91       	ld	r23, X+
    1c24:	8d 91       	ld	r24, X+
    1c26:	9c 91       	ld	r25, X
    1c28:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1c2c:	c6 50       	subi	r28, 0x06	; 6
    1c2e:	df 4f       	sbci	r29, 0xFF	; 255
    1c30:	68 83       	st	Y, r22
    1c32:	79 83       	std	Y+1, r23	; 0x01
    1c34:	8a 83       	std	Y+2, r24	; 0x02
    1c36:	9b 83       	std	Y+3, r25	; 0x03
    1c38:	ca 5f       	subi	r28, 0xFA	; 250
    1c3a:	d0 40       	sbci	r29, 0x00	; 0
    1c3c:	c6 50       	subi	r28, 0x06	; 6
    1c3e:	df 4f       	sbci	r29, 0xFF	; 255
    1c40:	88 81       	ld	r24, Y
    1c42:	ca 5f       	subi	r28, 0xFA	; 250
    1c44:	d0 40       	sbci	r29, 0x00	; 0
    1c46:	f8 01       	movw	r30, r16
    1c48:	80 83       	st	Z, r24
    1c4a:	ce 01       	movw	r24, r28
    1c4c:	80 58       	subi	r24, 0x80	; 128
    1c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c50:	9e 01       	movw	r18, r28
    1c52:	23 59       	subi	r18, 0x93	; 147
    1c54:	3f 4f       	sbci	r19, 0xFF	; 255
    1c56:	d9 01       	movw	r26, r18
    1c58:	2c 91       	ld	r18, X
    1c5a:	fc 01       	movw	r30, r24
    1c5c:	20 83       	st	Z, r18
	__asm__ volatile (
    1c5e:	ce 01       	movw	r24, r28
    1c60:	80 58       	subi	r24, 0x80	; 128
    1c62:	9f 4f       	sbci	r25, 0xFF	; 255
    1c64:	dc 01       	movw	r26, r24
    1c66:	8c 91       	ld	r24, X
    1c68:	28 2f       	mov	r18, r24
    1c6a:	2a 95       	dec	r18
    1c6c:	f1 f7       	brne	.-4      	; 0x1c6a <lcd_init+0x904>
    1c6e:	ce 01       	movw	r24, r28
    1c70:	80 58       	subi	r24, 0x80	; 128
    1c72:	9f 4f       	sbci	r25, 0xFF	; 255
    1c74:	fc 01       	movw	r30, r24
    1c76:	20 83       	st	Z, r18
}
    1c78:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
    1c7a:	0e 94 48 00 	call	0x90	; 0x90 <toggle_e>
    1c7e:	9e 01       	movw	r18, r28
    1c80:	2f 5b       	subi	r18, 0xBF	; 191
    1c82:	3f 4f       	sbci	r19, 0xFF	; 255
    1c84:	80 e0       	ldi	r24, 0x00	; 0
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	a0 e8       	ldi	r26, 0x80	; 128
    1c8a:	b2 e4       	ldi	r27, 0x42	; 66
    1c8c:	f9 01       	movw	r30, r18
    1c8e:	80 83       	st	Z, r24
    1c90:	91 83       	std	Z+1, r25	; 0x01
    1c92:	a2 83       	std	Z+2, r26	; 0x02
    1c94:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
    1c96:	8e 01       	movw	r16, r28
    1c98:	0b 5b       	subi	r16, 0xBB	; 187
    1c9a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c9c:	ce 01       	movw	r24, r28
    1c9e:	8f 5b       	subi	r24, 0xBF	; 191
    1ca0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca2:	2b ea       	ldi	r18, 0xAB	; 171
    1ca4:	3a ea       	ldi	r19, 0xAA	; 170
    1ca6:	4a ea       	ldi	r20, 0xAA	; 170
    1ca8:	50 e4       	ldi	r21, 0x40	; 64
    1caa:	dc 01       	movw	r26, r24
    1cac:	6d 91       	ld	r22, X+
    1cae:	7d 91       	ld	r23, X+
    1cb0:	8d 91       	ld	r24, X+
    1cb2:	9c 91       	ld	r25, X
    1cb4:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1cb8:	c2 50       	subi	r28, 0x02	; 2
    1cba:	df 4f       	sbci	r29, 0xFF	; 255
    1cbc:	68 83       	st	Y, r22
    1cbe:	79 83       	std	Y+1, r23	; 0x01
    1cc0:	8a 83       	std	Y+2, r24	; 0x02
    1cc2:	9b 83       	std	Y+3, r25	; 0x03
    1cc4:	ce 5f       	subi	r28, 0xFE	; 254
    1cc6:	d0 40       	sbci	r29, 0x00	; 0
    1cc8:	c2 50       	subi	r28, 0x02	; 2
    1cca:	df 4f       	sbci	r29, 0xFF	; 255
    1ccc:	88 81       	ld	r24, Y
    1cce:	99 81       	ldd	r25, Y+1	; 0x01
    1cd0:	aa 81       	ldd	r26, Y+2	; 0x02
    1cd2:	bb 81       	ldd	r27, Y+3	; 0x03
    1cd4:	ce 5f       	subi	r28, 0xFE	; 254
    1cd6:	d0 40       	sbci	r29, 0x00	; 0
    1cd8:	f8 01       	movw	r30, r16
    1cda:	80 83       	st	Z, r24
    1cdc:	91 83       	std	Z+1, r25	; 0x01
    1cde:	a2 83       	std	Z+2, r26	; 0x02
    1ce0:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1ce2:	8e 01       	movw	r16, r28
    1ce4:	07 5b       	subi	r16, 0xB7	; 183
    1ce6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ce8:	ce 01       	movw	r24, r28
    1cea:	8f 5b       	subi	r24, 0xBF	; 191
    1cec:	9f 4f       	sbci	r25, 0xFF	; 255
    1cee:	20 e0       	ldi	r18, 0x00	; 0
    1cf0:	30 e0       	ldi	r19, 0x00	; 0
    1cf2:	40 e8       	ldi	r20, 0x80	; 128
    1cf4:	50 e4       	ldi	r21, 0x40	; 64
    1cf6:	dc 01       	movw	r26, r24
    1cf8:	6d 91       	ld	r22, X+
    1cfa:	7d 91       	ld	r23, X+
    1cfc:	8d 91       	ld	r24, X+
    1cfe:	9c 91       	ld	r25, X
    1d00:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1d04:	ce 5f       	subi	r28, 0xFE	; 254
    1d06:	de 4f       	sbci	r29, 0xFE	; 254
    1d08:	68 83       	st	Y, r22
    1d0a:	79 83       	std	Y+1, r23	; 0x01
    1d0c:	8a 83       	std	Y+2, r24	; 0x02
    1d0e:	9b 83       	std	Y+3, r25	; 0x03
    1d10:	c2 50       	subi	r28, 0x02	; 2
    1d12:	d1 40       	sbci	r29, 0x01	; 1
    1d14:	ce 5f       	subi	r28, 0xFE	; 254
    1d16:	de 4f       	sbci	r29, 0xFE	; 254
    1d18:	88 81       	ld	r24, Y
    1d1a:	99 81       	ldd	r25, Y+1	; 0x01
    1d1c:	aa 81       	ldd	r26, Y+2	; 0x02
    1d1e:	bb 81       	ldd	r27, Y+3	; 0x03
    1d20:	c2 50       	subi	r28, 0x02	; 2
    1d22:	d1 40       	sbci	r29, 0x01	; 1
    1d24:	f8 01       	movw	r30, r16
    1d26:	80 83       	st	Z, r24
    1d28:	91 83       	std	Z+1, r25	; 0x01
    1d2a:	a2 83       	std	Z+2, r26	; 0x02
    1d2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d2e:	ce 01       	movw	r24, r28
    1d30:	8b 5b       	subi	r24, 0xBB	; 187
    1d32:	9f 4f       	sbci	r25, 0xFF	; 255
    1d34:	20 e0       	ldi	r18, 0x00	; 0
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	40 e8       	ldi	r20, 0x80	; 128
    1d3a:	5f e3       	ldi	r21, 0x3F	; 63
    1d3c:	dc 01       	movw	r26, r24
    1d3e:	6d 91       	ld	r22, X+
    1d40:	7d 91       	ld	r23, X+
    1d42:	8d 91       	ld	r24, X+
    1d44:	9c 91       	ld	r25, X
    1d46:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    1d4a:	88 23       	and	r24, r24
    1d4c:	3c f4       	brge	.+14     	; 0x1d5c <lcd_init+0x9f6>
		__ticks = 1;
    1d4e:	ce 01       	movw	r24, r28
    1d50:	83 5b       	subi	r24, 0xB3	; 179
    1d52:	9f 4f       	sbci	r25, 0xFF	; 255
    1d54:	21 e0       	ldi	r18, 0x01	; 1
    1d56:	fc 01       	movw	r30, r24
    1d58:	20 83       	st	Z, r18
    1d5a:	99 c1       	rjmp	.+818    	; 0x208e <lcd_init+0xd28>
	else if (__tmp2 > 65535)
    1d5c:	ce 01       	movw	r24, r28
    1d5e:	87 5b       	subi	r24, 0xB7	; 183
    1d60:	9f 4f       	sbci	r25, 0xFF	; 255
    1d62:	20 e0       	ldi	r18, 0x00	; 0
    1d64:	3f ef       	ldi	r19, 0xFF	; 255
    1d66:	4f e7       	ldi	r20, 0x7F	; 127
    1d68:	57 e4       	ldi	r21, 0x47	; 71
    1d6a:	dc 01       	movw	r26, r24
    1d6c:	6d 91       	ld	r22, X+
    1d6e:	7d 91       	ld	r23, X+
    1d70:	8d 91       	ld	r24, X+
    1d72:	9c 91       	ld	r25, X
    1d74:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    1d78:	18 16       	cp	r1, r24
    1d7a:	0c f0       	brlt	.+2      	; 0x1d7e <lcd_init+0xa18>
    1d7c:	22 c1       	rjmp	.+580    	; 0x1fc2 <lcd_init+0xc5c>
		_delay_ms(__us / 1000.0);
    1d7e:	ce 01       	movw	r24, r28
    1d80:	8f 5b       	subi	r24, 0xBF	; 191
    1d82:	9f 4f       	sbci	r25, 0xFF	; 255
    1d84:	20 e0       	ldi	r18, 0x00	; 0
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	4a e7       	ldi	r20, 0x7A	; 122
    1d8a:	54 e4       	ldi	r21, 0x44	; 68
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	60 81       	ld	r22, Z
    1d90:	71 81       	ldd	r23, Z+1	; 0x01
    1d92:	82 81       	ldd	r24, Z+2	; 0x02
    1d94:	93 81       	ldd	r25, Z+3	; 0x03
    1d96:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
    1d9a:	ca 5f       	subi	r28, 0xFA	; 250
    1d9c:	de 4f       	sbci	r29, 0xFE	; 254
    1d9e:	68 83       	st	Y, r22
    1da0:	79 83       	std	Y+1, r23	; 0x01
    1da2:	8a 83       	std	Y+2, r24	; 0x02
    1da4:	9b 83       	std	Y+3, r25	; 0x03
    1da6:	c6 50       	subi	r28, 0x06	; 6
    1da8:	d1 40       	sbci	r29, 0x01	; 1
    1daa:	ca 5f       	subi	r28, 0xFA	; 250
    1dac:	de 4f       	sbci	r29, 0xFE	; 254
    1dae:	88 81       	ld	r24, Y
    1db0:	99 81       	ldd	r25, Y+1	; 0x01
    1db2:	aa 81       	ldd	r26, Y+2	; 0x02
    1db4:	bb 81       	ldd	r27, Y+3	; 0x03
    1db6:	c6 50       	subi	r28, 0x06	; 6
    1db8:	d1 40       	sbci	r29, 0x01	; 1
    1dba:	9e 01       	movw	r18, r28
    1dbc:	22 5b       	subi	r18, 0xB2	; 178
    1dbe:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc0:	f9 01       	movw	r30, r18
    1dc2:	80 83       	st	Z, r24
    1dc4:	91 83       	std	Z+1, r25	; 0x01
    1dc6:	a2 83       	std	Z+2, r26	; 0x02
    1dc8:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
    1dca:	8e 01       	movw	r16, r28
    1dcc:	0e 5a       	subi	r16, 0xAE	; 174
    1dce:	1f 4f       	sbci	r17, 0xFF	; 255
    1dd0:	ce 01       	movw	r24, r28
    1dd2:	82 5b       	subi	r24, 0xB2	; 178
    1dd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd6:	20 e0       	ldi	r18, 0x00	; 0
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	4a e7       	ldi	r20, 0x7A	; 122
    1ddc:	55 e4       	ldi	r21, 0x45	; 69
    1dde:	dc 01       	movw	r26, r24
    1de0:	6d 91       	ld	r22, X+
    1de2:	7d 91       	ld	r23, X+
    1de4:	8d 91       	ld	r24, X+
    1de6:	9c 91       	ld	r25, X
    1de8:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1dec:	c6 5f       	subi	r28, 0xF6	; 246
    1dee:	de 4f       	sbci	r29, 0xFE	; 254
    1df0:	68 83       	st	Y, r22
    1df2:	79 83       	std	Y+1, r23	; 0x01
    1df4:	8a 83       	std	Y+2, r24	; 0x02
    1df6:	9b 83       	std	Y+3, r25	; 0x03
    1df8:	ca 50       	subi	r28, 0x0A	; 10
    1dfa:	d1 40       	sbci	r29, 0x01	; 1
    1dfc:	c6 5f       	subi	r28, 0xF6	; 246
    1dfe:	de 4f       	sbci	r29, 0xFE	; 254
    1e00:	88 81       	ld	r24, Y
    1e02:	99 81       	ldd	r25, Y+1	; 0x01
    1e04:	aa 81       	ldd	r26, Y+2	; 0x02
    1e06:	bb 81       	ldd	r27, Y+3	; 0x03
    1e08:	ca 50       	subi	r28, 0x0A	; 10
    1e0a:	d1 40       	sbci	r29, 0x01	; 1
    1e0c:	f8 01       	movw	r30, r16
    1e0e:	80 83       	st	Z, r24
    1e10:	91 83       	std	Z+1, r25	; 0x01
    1e12:	a2 83       	std	Z+2, r26	; 0x02
    1e14:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e16:	ce 01       	movw	r24, r28
    1e18:	8e 5a       	subi	r24, 0xAE	; 174
    1e1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	40 e8       	ldi	r20, 0x80	; 128
    1e22:	5f e3       	ldi	r21, 0x3F	; 63
    1e24:	dc 01       	movw	r26, r24
    1e26:	6d 91       	ld	r22, X+
    1e28:	7d 91       	ld	r23, X+
    1e2a:	8d 91       	ld	r24, X+
    1e2c:	9c 91       	ld	r25, X
    1e2e:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    1e32:	88 23       	and	r24, r24
    1e34:	4c f4       	brge	.+18     	; 0x1e48 <lcd_init+0xae2>
		__ticks = 1;
    1e36:	ce 01       	movw	r24, r28
    1e38:	8a 5a       	subi	r24, 0xAA	; 170
    1e3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e3c:	21 e0       	ldi	r18, 0x01	; 1
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	fc 01       	movw	r30, r24
    1e42:	31 83       	std	Z+1, r19	; 0x01
    1e44:	20 83       	st	Z, r18
    1e46:	a2 c0       	rjmp	.+324    	; 0x1f8c <lcd_init+0xc26>
	else if (__tmp > 65535)
    1e48:	ce 01       	movw	r24, r28
    1e4a:	8e 5a       	subi	r24, 0xAE	; 174
    1e4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e4e:	20 e0       	ldi	r18, 0x00	; 0
    1e50:	3f ef       	ldi	r19, 0xFF	; 255
    1e52:	4f e7       	ldi	r20, 0x7F	; 127
    1e54:	57 e4       	ldi	r21, 0x47	; 71
    1e56:	dc 01       	movw	r26, r24
    1e58:	6d 91       	ld	r22, X+
    1e5a:	7d 91       	ld	r23, X+
    1e5c:	8d 91       	ld	r24, X+
    1e5e:	9c 91       	ld	r25, X
    1e60:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    1e64:	18 16       	cp	r1, r24
    1e66:	0c f0       	brlt	.+2      	; 0x1e6a <lcd_init+0xb04>
    1e68:	73 c0       	rjmp	.+230    	; 0x1f50 <lcd_init+0xbea>
		__ticks = (uint16_t) (__ms * 10.0);
    1e6a:	ce 01       	movw	r24, r28
    1e6c:	82 5b       	subi	r24, 0xB2	; 178
    1e6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e70:	20 e0       	ldi	r18, 0x00	; 0
    1e72:	30 e0       	ldi	r19, 0x00	; 0
    1e74:	40 e2       	ldi	r20, 0x20	; 32
    1e76:	51 e4       	ldi	r21, 0x41	; 65
    1e78:	fc 01       	movw	r30, r24
    1e7a:	60 81       	ld	r22, Z
    1e7c:	71 81       	ldd	r23, Z+1	; 0x01
    1e7e:	82 81       	ldd	r24, Z+2	; 0x02
    1e80:	93 81       	ldd	r25, Z+3	; 0x03
    1e82:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    1e86:	c2 5f       	subi	r28, 0xF2	; 242
    1e88:	de 4f       	sbci	r29, 0xFE	; 254
    1e8a:	68 83       	st	Y, r22
    1e8c:	79 83       	std	Y+1, r23	; 0x01
    1e8e:	8a 83       	std	Y+2, r24	; 0x02
    1e90:	9b 83       	std	Y+3, r25	; 0x03
    1e92:	ce 50       	subi	r28, 0x0E	; 14
    1e94:	d1 40       	sbci	r29, 0x01	; 1
    1e96:	c2 5f       	subi	r28, 0xF2	; 242
    1e98:	de 4f       	sbci	r29, 0xFE	; 254
    1e9a:	88 81       	ld	r24, Y
    1e9c:	99 81       	ldd	r25, Y+1	; 0x01
    1e9e:	aa 81       	ldd	r26, Y+2	; 0x02
    1ea0:	bb 81       	ldd	r27, Y+3	; 0x03
    1ea2:	ce 50       	subi	r28, 0x0E	; 14
    1ea4:	d1 40       	sbci	r29, 0x01	; 1
    1ea6:	c6 55       	subi	r28, 0x56	; 86
    1ea8:	df 4f       	sbci	r29, 0xFF	; 255
    1eaa:	88 83       	st	Y, r24
    1eac:	99 83       	std	Y+1, r25	; 0x01
    1eae:	aa 83       	std	Y+2, r26	; 0x02
    1eb0:	bb 83       	std	Y+3, r27	; 0x03
    1eb2:	ca 5a       	subi	r28, 0xAA	; 170
    1eb4:	d0 40       	sbci	r29, 0x00	; 0
    1eb6:	8e 01       	movw	r16, r28
    1eb8:	0a 5a       	subi	r16, 0xAA	; 170
    1eba:	1f 4f       	sbci	r17, 0xFF	; 255
    1ebc:	c6 55       	subi	r28, 0x56	; 86
    1ebe:	df 4f       	sbci	r29, 0xFF	; 255
    1ec0:	68 81       	ld	r22, Y
    1ec2:	79 81       	ldd	r23, Y+1	; 0x01
    1ec4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ec8:	ca 5a       	subi	r28, 0xAA	; 170
    1eca:	d0 40       	sbci	r29, 0x00	; 0
    1ecc:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1ed0:	ce 5e       	subi	r28, 0xEE	; 238
    1ed2:	de 4f       	sbci	r29, 0xFE	; 254
    1ed4:	68 83       	st	Y, r22
    1ed6:	79 83       	std	Y+1, r23	; 0x01
    1ed8:	8a 83       	std	Y+2, r24	; 0x02
    1eda:	9b 83       	std	Y+3, r25	; 0x03
    1edc:	c2 51       	subi	r28, 0x12	; 18
    1ede:	d1 40       	sbci	r29, 0x01	; 1
    1ee0:	ce 5e       	subi	r28, 0xEE	; 238
    1ee2:	de 4f       	sbci	r29, 0xFE	; 254
    1ee4:	e8 81       	ld	r30, Y
    1ee6:	f9 81       	ldd	r31, Y+1	; 0x01
    1ee8:	c2 51       	subi	r28, 0x12	; 18
    1eea:	d1 40       	sbci	r29, 0x01	; 1
    1eec:	d8 01       	movw	r26, r16
    1eee:	ed 93       	st	X+, r30
    1ef0:	fc 93       	st	X, r31
		while(__ticks)
    1ef2:	25 c0       	rjmp	.+74     	; 0x1f3e <lcd_init+0xbd8>
    1ef4:	ce 01       	movw	r24, r28
    1ef6:	88 5a       	subi	r24, 0xA8	; 168
    1ef8:	9f 4f       	sbci	r25, 0xFF	; 255
    1efa:	20 e9       	ldi	r18, 0x90	; 144
    1efc:	31 e0       	ldi	r19, 0x01	; 1
    1efe:	dc 01       	movw	r26, r24
    1f00:	2d 93       	st	X+, r18
    1f02:	3c 93       	st	X, r19
	__asm__ volatile (
    1f04:	ce 01       	movw	r24, r28
    1f06:	88 5a       	subi	r24, 0xA8	; 168
    1f08:	9f 4f       	sbci	r25, 0xFF	; 255
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	80 81       	ld	r24, Z
    1f0e:	91 81       	ldd	r25, Z+1	; 0x01
    1f10:	01 97       	sbiw	r24, 0x01	; 1
    1f12:	f1 f7       	brne	.-4      	; 0x1f10 <lcd_init+0xbaa>
    1f14:	9e 01       	movw	r18, r28
    1f16:	28 5a       	subi	r18, 0xA8	; 168
    1f18:	3f 4f       	sbci	r19, 0xFF	; 255
    1f1a:	d9 01       	movw	r26, r18
    1f1c:	8d 93       	st	X+, r24
    1f1e:	9c 93       	st	X, r25
}
    1f20:	00 00       	nop
			__ticks --;
    1f22:	ce 01       	movw	r24, r28
    1f24:	8a 5a       	subi	r24, 0xAA	; 170
    1f26:	9f 4f       	sbci	r25, 0xFF	; 255
    1f28:	9e 01       	movw	r18, r28
    1f2a:	2a 5a       	subi	r18, 0xAA	; 170
    1f2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f2e:	f9 01       	movw	r30, r18
    1f30:	20 81       	ld	r18, Z
    1f32:	31 81       	ldd	r19, Z+1	; 0x01
    1f34:	21 50       	subi	r18, 0x01	; 1
    1f36:	31 09       	sbc	r19, r1
    1f38:	dc 01       	movw	r26, r24
    1f3a:	2d 93       	st	X+, r18
    1f3c:	3c 93       	st	X, r19
		while(__ticks)
    1f3e:	ce 01       	movw	r24, r28
    1f40:	8a 5a       	subi	r24, 0xAA	; 170
    1f42:	9f 4f       	sbci	r25, 0xFF	; 255
    1f44:	fc 01       	movw	r30, r24
    1f46:	80 81       	ld	r24, Z
    1f48:	91 81       	ldd	r25, Z+1	; 0x01
    1f4a:	89 2b       	or	r24, r25
    1f4c:	99 f6       	brne	.-90     	; 0x1ef4 <lcd_init+0xb8e>
		return;
    1f4e:	9f c0       	rjmp	.+318    	; 0x208e <lcd_init+0xd28>
		__ticks = (uint16_t)__tmp;
    1f50:	8e 01       	movw	r16, r28
    1f52:	0a 5a       	subi	r16, 0xAA	; 170
    1f54:	1f 4f       	sbci	r17, 0xFF	; 255
    1f56:	ce 01       	movw	r24, r28
    1f58:	8e 5a       	subi	r24, 0xAE	; 174
    1f5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f5c:	dc 01       	movw	r26, r24
    1f5e:	6d 91       	ld	r22, X+
    1f60:	7d 91       	ld	r23, X+
    1f62:	8d 91       	ld	r24, X+
    1f64:	9c 91       	ld	r25, X
    1f66:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1f6a:	ca 5e       	subi	r28, 0xEA	; 234
    1f6c:	de 4f       	sbci	r29, 0xFE	; 254
    1f6e:	68 83       	st	Y, r22
    1f70:	79 83       	std	Y+1, r23	; 0x01
    1f72:	8a 83       	std	Y+2, r24	; 0x02
    1f74:	9b 83       	std	Y+3, r25	; 0x03
    1f76:	c6 51       	subi	r28, 0x16	; 22
    1f78:	d1 40       	sbci	r29, 0x01	; 1
    1f7a:	ca 5e       	subi	r28, 0xEA	; 234
    1f7c:	de 4f       	sbci	r29, 0xFE	; 254
    1f7e:	88 81       	ld	r24, Y
    1f80:	99 81       	ldd	r25, Y+1	; 0x01
    1f82:	c6 51       	subi	r28, 0x16	; 22
    1f84:	d1 40       	sbci	r29, 0x01	; 1
    1f86:	f8 01       	movw	r30, r16
    1f88:	91 83       	std	Z+1, r25	; 0x01
    1f8a:	80 83       	st	Z, r24
    1f8c:	ce 01       	movw	r24, r28
    1f8e:	86 5a       	subi	r24, 0xA6	; 166
    1f90:	9f 4f       	sbci	r25, 0xFF	; 255
    1f92:	9e 01       	movw	r18, r28
    1f94:	2a 5a       	subi	r18, 0xAA	; 170
    1f96:	3f 4f       	sbci	r19, 0xFF	; 255
    1f98:	d9 01       	movw	r26, r18
    1f9a:	2d 91       	ld	r18, X+
    1f9c:	3c 91       	ld	r19, X
    1f9e:	fc 01       	movw	r30, r24
    1fa0:	31 83       	std	Z+1, r19	; 0x01
    1fa2:	20 83       	st	Z, r18
	__asm__ volatile (
    1fa4:	ce 01       	movw	r24, r28
    1fa6:	86 5a       	subi	r24, 0xA6	; 166
    1fa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1faa:	dc 01       	movw	r26, r24
    1fac:	8d 91       	ld	r24, X+
    1fae:	9c 91       	ld	r25, X
    1fb0:	01 97       	sbiw	r24, 0x01	; 1
    1fb2:	f1 f7       	brne	.-4      	; 0x1fb0 <lcd_init+0xc4a>
    1fb4:	9e 01       	movw	r18, r28
    1fb6:	26 5a       	subi	r18, 0xA6	; 166
    1fb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1fba:	f9 01       	movw	r30, r18
    1fbc:	91 83       	std	Z+1, r25	; 0x01
    1fbe:	80 83       	st	Z, r24
}
    1fc0:	66 c0       	rjmp	.+204    	; 0x208e <lcd_init+0xd28>
	else if (__tmp > 255)
    1fc2:	ce 01       	movw	r24, r28
    1fc4:	8b 5b       	subi	r24, 0xBB	; 187
    1fc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc8:	20 e0       	ldi	r18, 0x00	; 0
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	4f e7       	ldi	r20, 0x7F	; 127
    1fce:	53 e4       	ldi	r21, 0x43	; 67
    1fd0:	dc 01       	movw	r26, r24
    1fd2:	6d 91       	ld	r22, X+
    1fd4:	7d 91       	ld	r23, X+
    1fd6:	8d 91       	ld	r24, X+
    1fd8:	9c 91       	ld	r25, X
    1fda:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    1fde:	18 16       	cp	r1, r24
    1fe0:	d4 f5       	brge	.+116    	; 0x2056 <lcd_init+0xcf0>
		uint16_t __ticks=(uint16_t)__tmp2;
    1fe2:	8e 01       	movw	r16, r28
    1fe4:	04 5a       	subi	r16, 0xA4	; 164
    1fe6:	1f 4f       	sbci	r17, 0xFF	; 255
    1fe8:	ce 01       	movw	r24, r28
    1fea:	87 5b       	subi	r24, 0xB7	; 183
    1fec:	9f 4f       	sbci	r25, 0xFF	; 255
    1fee:	fc 01       	movw	r30, r24
    1ff0:	60 81       	ld	r22, Z
    1ff2:	71 81       	ldd	r23, Z+1	; 0x01
    1ff4:	82 81       	ldd	r24, Z+2	; 0x02
    1ff6:	93 81       	ldd	r25, Z+3	; 0x03
    1ff8:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    1ffc:	c6 5e       	subi	r28, 0xE6	; 230
    1ffe:	de 4f       	sbci	r29, 0xFE	; 254
    2000:	68 83       	st	Y, r22
    2002:	79 83       	std	Y+1, r23	; 0x01
    2004:	8a 83       	std	Y+2, r24	; 0x02
    2006:	9b 83       	std	Y+3, r25	; 0x03
    2008:	ca 51       	subi	r28, 0x1A	; 26
    200a:	d1 40       	sbci	r29, 0x01	; 1
    200c:	c6 5e       	subi	r28, 0xE6	; 230
    200e:	de 4f       	sbci	r29, 0xFE	; 254
    2010:	e8 81       	ld	r30, Y
    2012:	f9 81       	ldd	r31, Y+1	; 0x01
    2014:	ca 51       	subi	r28, 0x1A	; 26
    2016:	d1 40       	sbci	r29, 0x01	; 1
    2018:	d8 01       	movw	r26, r16
    201a:	ed 93       	st	X+, r30
    201c:	fc 93       	st	X, r31
    201e:	ce 01       	movw	r24, r28
    2020:	82 5a       	subi	r24, 0xA2	; 162
    2022:	9f 4f       	sbci	r25, 0xFF	; 255
    2024:	9e 01       	movw	r18, r28
    2026:	24 5a       	subi	r18, 0xA4	; 164
    2028:	3f 4f       	sbci	r19, 0xFF	; 255
    202a:	d9 01       	movw	r26, r18
    202c:	2d 91       	ld	r18, X+
    202e:	3c 91       	ld	r19, X
    2030:	fc 01       	movw	r30, r24
    2032:	31 83       	std	Z+1, r19	; 0x01
    2034:	20 83       	st	Z, r18
	__asm__ volatile (
    2036:	ce 01       	movw	r24, r28
    2038:	82 5a       	subi	r24, 0xA2	; 162
    203a:	9f 4f       	sbci	r25, 0xFF	; 255
    203c:	dc 01       	movw	r26, r24
    203e:	8d 91       	ld	r24, X+
    2040:	9c 91       	ld	r25, X
    2042:	01 97       	sbiw	r24, 0x01	; 1
    2044:	f1 f7       	brne	.-4      	; 0x2042 <lcd_init+0xcdc>
    2046:	9e 01       	movw	r18, r28
    2048:	22 5a       	subi	r18, 0xA2	; 162
    204a:	3f 4f       	sbci	r19, 0xFF	; 255
    204c:	f9 01       	movw	r30, r18
    204e:	91 83       	std	Z+1, r25	; 0x01
    2050:	80 83       	st	Z, r24
}
    2052:	00 00       	nop
		return;
    2054:	34 c0       	rjmp	.+104    	; 0x20be <lcd_init+0xd58>
		__ticks = (uint8_t)__tmp;
    2056:	8e 01       	movw	r16, r28
    2058:	03 5b       	subi	r16, 0xB3	; 179
    205a:	1f 4f       	sbci	r17, 0xFF	; 255
    205c:	ce 01       	movw	r24, r28
    205e:	8b 5b       	subi	r24, 0xBB	; 187
    2060:	9f 4f       	sbci	r25, 0xFF	; 255
    2062:	dc 01       	movw	r26, r24
    2064:	6d 91       	ld	r22, X+
    2066:	7d 91       	ld	r23, X+
    2068:	8d 91       	ld	r24, X+
    206a:	9c 91       	ld	r25, X
    206c:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    2070:	c2 5e       	subi	r28, 0xE2	; 226
    2072:	de 4f       	sbci	r29, 0xFE	; 254
    2074:	68 83       	st	Y, r22
    2076:	79 83       	std	Y+1, r23	; 0x01
    2078:	8a 83       	std	Y+2, r24	; 0x02
    207a:	9b 83       	std	Y+3, r25	; 0x03
    207c:	ce 51       	subi	r28, 0x1E	; 30
    207e:	d1 40       	sbci	r29, 0x01	; 1
    2080:	c2 5e       	subi	r28, 0xE2	; 226
    2082:	de 4f       	sbci	r29, 0xFE	; 254
    2084:	88 81       	ld	r24, Y
    2086:	ce 51       	subi	r28, 0x1E	; 30
    2088:	d1 40       	sbci	r29, 0x01	; 1
    208a:	f8 01       	movw	r30, r16
    208c:	80 83       	st	Z, r24
    208e:	ce 01       	movw	r24, r28
    2090:	80 5a       	subi	r24, 0xA0	; 160
    2092:	9f 4f       	sbci	r25, 0xFF	; 255
    2094:	9e 01       	movw	r18, r28
    2096:	23 5b       	subi	r18, 0xB3	; 179
    2098:	3f 4f       	sbci	r19, 0xFF	; 255
    209a:	d9 01       	movw	r26, r18
    209c:	2c 91       	ld	r18, X
    209e:	fc 01       	movw	r30, r24
    20a0:	20 83       	st	Z, r18
	__asm__ volatile (
    20a2:	ce 01       	movw	r24, r28
    20a4:	80 5a       	subi	r24, 0xA0	; 160
    20a6:	9f 4f       	sbci	r25, 0xFF	; 255
    20a8:	dc 01       	movw	r26, r24
    20aa:	8c 91       	ld	r24, X
    20ac:	28 2f       	mov	r18, r24
    20ae:	2a 95       	dec	r18
    20b0:	f1 f7       	brne	.-4      	; 0x20ae <lcd_init+0xd48>
    20b2:	ce 01       	movw	r24, r28
    20b4:	80 5a       	subi	r24, 0xA0	; 160
    20b6:	9f 4f       	sbci	r25, 0xFF	; 255
    20b8:	fc 01       	movw	r30, r24
    20ba:	20 83       	st	Z, r18
}
    20bc:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
    20be:	0e 94 48 00 	call	0x90	; 0x90 <toggle_e>
    20c2:	80 e0       	ldi	r24, 0x00	; 0
    20c4:	90 e0       	ldi	r25, 0x00	; 0
    20c6:	a0 e8       	ldi	r26, 0x80	; 128
    20c8:	b2 e4       	ldi	r27, 0x42	; 66
    20ca:	89 a3       	std	Y+33, r24	; 0x21
    20cc:	9a a3       	std	Y+34, r25	; 0x22
    20ce:	ab a3       	std	Y+35, r26	; 0x23
    20d0:	bc a3       	std	Y+36, r27	; 0x24
	__tmp = ((F_CPU) / 3e6) * __us;
    20d2:	2b ea       	ldi	r18, 0xAB	; 171
    20d4:	3a ea       	ldi	r19, 0xAA	; 170
    20d6:	4a ea       	ldi	r20, 0xAA	; 170
    20d8:	50 e4       	ldi	r21, 0x40	; 64
    20da:	69 a1       	ldd	r22, Y+33	; 0x21
    20dc:	7a a1       	ldd	r23, Y+34	; 0x22
    20de:	8b a1       	ldd	r24, Y+35	; 0x23
    20e0:	9c a1       	ldd	r25, Y+36	; 0x24
    20e2:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    20e6:	ce 5d       	subi	r28, 0xDE	; 222
    20e8:	de 4f       	sbci	r29, 0xFE	; 254
    20ea:	68 83       	st	Y, r22
    20ec:	79 83       	std	Y+1, r23	; 0x01
    20ee:	8a 83       	std	Y+2, r24	; 0x02
    20f0:	9b 83       	std	Y+3, r25	; 0x03
    20f2:	c2 52       	subi	r28, 0x22	; 34
    20f4:	d1 40       	sbci	r29, 0x01	; 1
    20f6:	ce 5d       	subi	r28, 0xDE	; 222
    20f8:	de 4f       	sbci	r29, 0xFE	; 254
    20fa:	88 81       	ld	r24, Y
    20fc:	99 81       	ldd	r25, Y+1	; 0x01
    20fe:	aa 81       	ldd	r26, Y+2	; 0x02
    2100:	bb 81       	ldd	r27, Y+3	; 0x03
    2102:	c2 52       	subi	r28, 0x22	; 34
    2104:	d1 40       	sbci	r29, 0x01	; 1
    2106:	8d a3       	std	Y+37, r24	; 0x25
    2108:	9e a3       	std	Y+38, r25	; 0x26
    210a:	af a3       	std	Y+39, r26	; 0x27
    210c:	b8 a7       	std	Y+40, r27	; 0x28
	__tmp2 = ((F_CPU) / 4e6) * __us;
    210e:	20 e0       	ldi	r18, 0x00	; 0
    2110:	30 e0       	ldi	r19, 0x00	; 0
    2112:	40 e8       	ldi	r20, 0x80	; 128
    2114:	50 e4       	ldi	r21, 0x40	; 64
    2116:	69 a1       	ldd	r22, Y+33	; 0x21
    2118:	7a a1       	ldd	r23, Y+34	; 0x22
    211a:	8b a1       	ldd	r24, Y+35	; 0x23
    211c:	9c a1       	ldd	r25, Y+36	; 0x24
    211e:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    2122:	ca 5d       	subi	r28, 0xDA	; 218
    2124:	de 4f       	sbci	r29, 0xFE	; 254
    2126:	68 83       	st	Y, r22
    2128:	79 83       	std	Y+1, r23	; 0x01
    212a:	8a 83       	std	Y+2, r24	; 0x02
    212c:	9b 83       	std	Y+3, r25	; 0x03
    212e:	c6 52       	subi	r28, 0x26	; 38
    2130:	d1 40       	sbci	r29, 0x01	; 1
    2132:	ca 5d       	subi	r28, 0xDA	; 218
    2134:	de 4f       	sbci	r29, 0xFE	; 254
    2136:	88 81       	ld	r24, Y
    2138:	99 81       	ldd	r25, Y+1	; 0x01
    213a:	aa 81       	ldd	r26, Y+2	; 0x02
    213c:	bb 81       	ldd	r27, Y+3	; 0x03
    213e:	c6 52       	subi	r28, 0x26	; 38
    2140:	d1 40       	sbci	r29, 0x01	; 1
    2142:	89 a7       	std	Y+41, r24	; 0x29
    2144:	9a a7       	std	Y+42, r25	; 0x2a
    2146:	ab a7       	std	Y+43, r26	; 0x2b
    2148:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	30 e0       	ldi	r19, 0x00	; 0
    214e:	40 e8       	ldi	r20, 0x80	; 128
    2150:	5f e3       	ldi	r21, 0x3F	; 63
    2152:	6d a1       	ldd	r22, Y+37	; 0x25
    2154:	7e a1       	ldd	r23, Y+38	; 0x26
    2156:	8f a1       	ldd	r24, Y+39	; 0x27
    2158:	98 a5       	ldd	r25, Y+40	; 0x28
    215a:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    215e:	88 23       	and	r24, r24
    2160:	1c f4       	brge	.+6      	; 0x2168 <lcd_init+0xe02>
		__ticks = 1;
    2162:	81 e0       	ldi	r24, 0x01	; 1
    2164:	8d a7       	std	Y+45, r24	; 0x2d
    2166:	1c c1       	rjmp	.+568    	; 0x23a0 <lcd_init+0x103a>
	else if (__tmp2 > 65535)
    2168:	20 e0       	ldi	r18, 0x00	; 0
    216a:	3f ef       	ldi	r19, 0xFF	; 255
    216c:	4f e7       	ldi	r20, 0x7F	; 127
    216e:	57 e4       	ldi	r21, 0x47	; 71
    2170:	69 a5       	ldd	r22, Y+41	; 0x29
    2172:	7a a5       	ldd	r23, Y+42	; 0x2a
    2174:	8b a5       	ldd	r24, Y+43	; 0x2b
    2176:	9c a5       	ldd	r25, Y+44	; 0x2c
    2178:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    217c:	18 16       	cp	r1, r24
    217e:	0c f0       	brlt	.+2      	; 0x2182 <lcd_init+0xe1c>
    2180:	cd c0       	rjmp	.+410    	; 0x231c <lcd_init+0xfb6>
		_delay_ms(__us / 1000.0);
    2182:	20 e0       	ldi	r18, 0x00	; 0
    2184:	30 e0       	ldi	r19, 0x00	; 0
    2186:	4a e7       	ldi	r20, 0x7A	; 122
    2188:	54 e4       	ldi	r21, 0x44	; 68
    218a:	69 a1       	ldd	r22, Y+33	; 0x21
    218c:	7a a1       	ldd	r23, Y+34	; 0x22
    218e:	8b a1       	ldd	r24, Y+35	; 0x23
    2190:	9c a1       	ldd	r25, Y+36	; 0x24
    2192:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
    2196:	c6 5d       	subi	r28, 0xD6	; 214
    2198:	de 4f       	sbci	r29, 0xFE	; 254
    219a:	68 83       	st	Y, r22
    219c:	79 83       	std	Y+1, r23	; 0x01
    219e:	8a 83       	std	Y+2, r24	; 0x02
    21a0:	9b 83       	std	Y+3, r25	; 0x03
    21a2:	ca 52       	subi	r28, 0x2A	; 42
    21a4:	d1 40       	sbci	r29, 0x01	; 1
    21a6:	c6 5d       	subi	r28, 0xD6	; 214
    21a8:	de 4f       	sbci	r29, 0xFE	; 254
    21aa:	88 81       	ld	r24, Y
    21ac:	99 81       	ldd	r25, Y+1	; 0x01
    21ae:	aa 81       	ldd	r26, Y+2	; 0x02
    21b0:	bb 81       	ldd	r27, Y+3	; 0x03
    21b2:	ca 52       	subi	r28, 0x2A	; 42
    21b4:	d1 40       	sbci	r29, 0x01	; 1
    21b6:	8e a7       	std	Y+46, r24	; 0x2e
    21b8:	9f a7       	std	Y+47, r25	; 0x2f
    21ba:	a8 ab       	std	Y+48, r26	; 0x30
    21bc:	b9 ab       	std	Y+49, r27	; 0x31
	__tmp = ((F_CPU) / 4e3) * __ms;
    21be:	20 e0       	ldi	r18, 0x00	; 0
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	4a e7       	ldi	r20, 0x7A	; 122
    21c4:	55 e4       	ldi	r21, 0x45	; 69
    21c6:	6e a5       	ldd	r22, Y+46	; 0x2e
    21c8:	7f a5       	ldd	r23, Y+47	; 0x2f
    21ca:	88 a9       	ldd	r24, Y+48	; 0x30
    21cc:	99 a9       	ldd	r25, Y+49	; 0x31
    21ce:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    21d2:	c2 5d       	subi	r28, 0xD2	; 210
    21d4:	de 4f       	sbci	r29, 0xFE	; 254
    21d6:	68 83       	st	Y, r22
    21d8:	79 83       	std	Y+1, r23	; 0x01
    21da:	8a 83       	std	Y+2, r24	; 0x02
    21dc:	9b 83       	std	Y+3, r25	; 0x03
    21de:	ce 52       	subi	r28, 0x2E	; 46
    21e0:	d1 40       	sbci	r29, 0x01	; 1
    21e2:	c2 5d       	subi	r28, 0xD2	; 210
    21e4:	de 4f       	sbci	r29, 0xFE	; 254
    21e6:	88 81       	ld	r24, Y
    21e8:	99 81       	ldd	r25, Y+1	; 0x01
    21ea:	aa 81       	ldd	r26, Y+2	; 0x02
    21ec:	bb 81       	ldd	r27, Y+3	; 0x03
    21ee:	ce 52       	subi	r28, 0x2E	; 46
    21f0:	d1 40       	sbci	r29, 0x01	; 1
    21f2:	8a ab       	std	Y+50, r24	; 0x32
    21f4:	9b ab       	std	Y+51, r25	; 0x33
    21f6:	ac ab       	std	Y+52, r26	; 0x34
    21f8:	bd ab       	std	Y+53, r27	; 0x35
	if (__tmp < 1.0)
    21fa:	20 e0       	ldi	r18, 0x00	; 0
    21fc:	30 e0       	ldi	r19, 0x00	; 0
    21fe:	40 e8       	ldi	r20, 0x80	; 128
    2200:	5f e3       	ldi	r21, 0x3F	; 63
    2202:	6a a9       	ldd	r22, Y+50	; 0x32
    2204:	7b a9       	ldd	r23, Y+51	; 0x33
    2206:	8c a9       	ldd	r24, Y+52	; 0x34
    2208:	9d a9       	ldd	r25, Y+53	; 0x35
    220a:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    220e:	88 23       	and	r24, r24
    2210:	2c f4       	brge	.+10     	; 0x221c <lcd_init+0xeb6>
		__ticks = 1;
    2212:	81 e0       	ldi	r24, 0x01	; 1
    2214:	90 e0       	ldi	r25, 0x00	; 0
    2216:	9f ab       	std	Y+55, r25	; 0x37
    2218:	8e ab       	std	Y+54, r24	; 0x36
    221a:	75 c0       	rjmp	.+234    	; 0x2306 <lcd_init+0xfa0>
	else if (__tmp > 65535)
    221c:	20 e0       	ldi	r18, 0x00	; 0
    221e:	3f ef       	ldi	r19, 0xFF	; 255
    2220:	4f e7       	ldi	r20, 0x7F	; 127
    2222:	57 e4       	ldi	r21, 0x47	; 71
    2224:	6a a9       	ldd	r22, Y+50	; 0x32
    2226:	7b a9       	ldd	r23, Y+51	; 0x33
    2228:	8c a9       	ldd	r24, Y+52	; 0x34
    222a:	9d a9       	ldd	r25, Y+53	; 0x35
    222c:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    2230:	18 16       	cp	r1, r24
    2232:	0c f0       	brlt	.+2      	; 0x2236 <lcd_init+0xed0>
    2234:	52 c0       	rjmp	.+164    	; 0x22da <lcd_init+0xf74>
		__ticks = (uint16_t) (__ms * 10.0);
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	30 e0       	ldi	r19, 0x00	; 0
    223a:	40 e2       	ldi	r20, 0x20	; 32
    223c:	51 e4       	ldi	r21, 0x41	; 65
    223e:	6e a5       	ldd	r22, Y+46	; 0x2e
    2240:	7f a5       	ldd	r23, Y+47	; 0x2f
    2242:	88 a9       	ldd	r24, Y+48	; 0x30
    2244:	99 a9       	ldd	r25, Y+49	; 0x31
    2246:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    224a:	ce 5c       	subi	r28, 0xCE	; 206
    224c:	de 4f       	sbci	r29, 0xFE	; 254
    224e:	68 83       	st	Y, r22
    2250:	79 83       	std	Y+1, r23	; 0x01
    2252:	8a 83       	std	Y+2, r24	; 0x02
    2254:	9b 83       	std	Y+3, r25	; 0x03
    2256:	c2 53       	subi	r28, 0x32	; 50
    2258:	d1 40       	sbci	r29, 0x01	; 1
    225a:	ce 5c       	subi	r28, 0xCE	; 206
    225c:	de 4f       	sbci	r29, 0xFE	; 254
    225e:	88 81       	ld	r24, Y
    2260:	99 81       	ldd	r25, Y+1	; 0x01
    2262:	aa 81       	ldd	r26, Y+2	; 0x02
    2264:	bb 81       	ldd	r27, Y+3	; 0x03
    2266:	c2 53       	subi	r28, 0x32	; 50
    2268:	d1 40       	sbci	r29, 0x01	; 1
    226a:	ca 55       	subi	r28, 0x5A	; 90
    226c:	df 4f       	sbci	r29, 0xFF	; 255
    226e:	88 83       	st	Y, r24
    2270:	99 83       	std	Y+1, r25	; 0x01
    2272:	aa 83       	std	Y+2, r26	; 0x02
    2274:	bb 83       	std	Y+3, r27	; 0x03
    2276:	c6 5a       	subi	r28, 0xA6	; 166
    2278:	d0 40       	sbci	r29, 0x00	; 0
    227a:	ca 55       	subi	r28, 0x5A	; 90
    227c:	df 4f       	sbci	r29, 0xFF	; 255
    227e:	68 81       	ld	r22, Y
    2280:	79 81       	ldd	r23, Y+1	; 0x01
    2282:	8a 81       	ldd	r24, Y+2	; 0x02
    2284:	9b 81       	ldd	r25, Y+3	; 0x03
    2286:	c6 5a       	subi	r28, 0xA6	; 166
    2288:	d0 40       	sbci	r29, 0x00	; 0
    228a:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    228e:	ca 5c       	subi	r28, 0xCA	; 202
    2290:	de 4f       	sbci	r29, 0xFE	; 254
    2292:	68 83       	st	Y, r22
    2294:	79 83       	std	Y+1, r23	; 0x01
    2296:	8a 83       	std	Y+2, r24	; 0x02
    2298:	9b 83       	std	Y+3, r25	; 0x03
    229a:	c6 53       	subi	r28, 0x36	; 54
    229c:	d1 40       	sbci	r29, 0x01	; 1
    229e:	ca 5c       	subi	r28, 0xCA	; 202
    22a0:	de 4f       	sbci	r29, 0xFE	; 254
    22a2:	a8 81       	ld	r26, Y
    22a4:	b9 81       	ldd	r27, Y+1	; 0x01
    22a6:	c6 53       	subi	r28, 0x36	; 54
    22a8:	d1 40       	sbci	r29, 0x01	; 1
    22aa:	bf ab       	std	Y+55, r27	; 0x37
    22ac:	ae ab       	std	Y+54, r26	; 0x36
		while(__ticks)
    22ae:	10 c0       	rjmp	.+32     	; 0x22d0 <lcd_init+0xf6a>
    22b0:	80 e9       	ldi	r24, 0x90	; 144
    22b2:	91 e0       	ldi	r25, 0x01	; 1
    22b4:	99 af       	std	Y+57, r25	; 0x39
    22b6:	88 af       	std	Y+56, r24	; 0x38
	__asm__ volatile (
    22b8:	88 ad       	ldd	r24, Y+56	; 0x38
    22ba:	99 ad       	ldd	r25, Y+57	; 0x39
    22bc:	01 97       	sbiw	r24, 0x01	; 1
    22be:	f1 f7       	brne	.-4      	; 0x22bc <lcd_init+0xf56>
    22c0:	99 af       	std	Y+57, r25	; 0x39
    22c2:	88 af       	std	Y+56, r24	; 0x38
}
    22c4:	00 00       	nop
			__ticks --;
    22c6:	8e a9       	ldd	r24, Y+54	; 0x36
    22c8:	9f a9       	ldd	r25, Y+55	; 0x37
    22ca:	01 97       	sbiw	r24, 0x01	; 1
    22cc:	9f ab       	std	Y+55, r25	; 0x37
    22ce:	8e ab       	std	Y+54, r24	; 0x36
		while(__ticks)
    22d0:	8e a9       	ldd	r24, Y+54	; 0x36
    22d2:	9f a9       	ldd	r25, Y+55	; 0x37
    22d4:	89 2b       	or	r24, r25
    22d6:	61 f7       	brne	.-40     	; 0x22b0 <lcd_init+0xf4a>
		return;
    22d8:	63 c0       	rjmp	.+198    	; 0x23a0 <lcd_init+0x103a>
		__ticks = (uint16_t)__tmp;
    22da:	6a a9       	ldd	r22, Y+50	; 0x32
    22dc:	7b a9       	ldd	r23, Y+51	; 0x33
    22de:	8c a9       	ldd	r24, Y+52	; 0x34
    22e0:	9d a9       	ldd	r25, Y+53	; 0x35
    22e2:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    22e6:	c6 5c       	subi	r28, 0xC6	; 198
    22e8:	de 4f       	sbci	r29, 0xFE	; 254
    22ea:	68 83       	st	Y, r22
    22ec:	79 83       	std	Y+1, r23	; 0x01
    22ee:	8a 83       	std	Y+2, r24	; 0x02
    22f0:	9b 83       	std	Y+3, r25	; 0x03
    22f2:	ca 53       	subi	r28, 0x3A	; 58
    22f4:	d1 40       	sbci	r29, 0x01	; 1
    22f6:	c6 5c       	subi	r28, 0xC6	; 198
    22f8:	de 4f       	sbci	r29, 0xFE	; 254
    22fa:	e8 81       	ld	r30, Y
    22fc:	f9 81       	ldd	r31, Y+1	; 0x01
    22fe:	ca 53       	subi	r28, 0x3A	; 58
    2300:	d1 40       	sbci	r29, 0x01	; 1
    2302:	ff ab       	std	Y+55, r31	; 0x37
    2304:	ee ab       	std	Y+54, r30	; 0x36
    2306:	8e a9       	ldd	r24, Y+54	; 0x36
    2308:	9f a9       	ldd	r25, Y+55	; 0x37
    230a:	9b af       	std	Y+59, r25	; 0x3b
    230c:	8a af       	std	Y+58, r24	; 0x3a
	__asm__ volatile (
    230e:	8a ad       	ldd	r24, Y+58	; 0x3a
    2310:	9b ad       	ldd	r25, Y+59	; 0x3b
    2312:	01 97       	sbiw	r24, 0x01	; 1
    2314:	f1 f7       	brne	.-4      	; 0x2312 <lcd_init+0xfac>
    2316:	9b af       	std	Y+59, r25	; 0x3b
    2318:	8a af       	std	Y+58, r24	; 0x3a
}
    231a:	42 c0       	rjmp	.+132    	; 0x23a0 <lcd_init+0x103a>
	else if (__tmp > 255)
    231c:	20 e0       	ldi	r18, 0x00	; 0
    231e:	30 e0       	ldi	r19, 0x00	; 0
    2320:	4f e7       	ldi	r20, 0x7F	; 127
    2322:	53 e4       	ldi	r21, 0x43	; 67
    2324:	6d a1       	ldd	r22, Y+37	; 0x25
    2326:	7e a1       	ldd	r23, Y+38	; 0x26
    2328:	8f a1       	ldd	r24, Y+39	; 0x27
    232a:	98 a5       	ldd	r25, Y+40	; 0x28
    232c:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    2330:	18 16       	cp	r1, r24
    2332:	14 f5       	brge	.+68     	; 0x2378 <lcd_init+0x1012>
		uint16_t __ticks=(uint16_t)__tmp2;
    2334:	69 a5       	ldd	r22, Y+41	; 0x29
    2336:	7a a5       	ldd	r23, Y+42	; 0x2a
    2338:	8b a5       	ldd	r24, Y+43	; 0x2b
    233a:	9c a5       	ldd	r25, Y+44	; 0x2c
    233c:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    2340:	c2 5c       	subi	r28, 0xC2	; 194
    2342:	de 4f       	sbci	r29, 0xFE	; 254
    2344:	68 83       	st	Y, r22
    2346:	79 83       	std	Y+1, r23	; 0x01
    2348:	8a 83       	std	Y+2, r24	; 0x02
    234a:	9b 83       	std	Y+3, r25	; 0x03
    234c:	ce 53       	subi	r28, 0x3E	; 62
    234e:	d1 40       	sbci	r29, 0x01	; 1
    2350:	c2 5c       	subi	r28, 0xC2	; 194
    2352:	de 4f       	sbci	r29, 0xFE	; 254
    2354:	88 81       	ld	r24, Y
    2356:	99 81       	ldd	r25, Y+1	; 0x01
    2358:	ce 53       	subi	r28, 0x3E	; 62
    235a:	d1 40       	sbci	r29, 0x01	; 1
    235c:	9d af       	std	Y+61, r25	; 0x3d
    235e:	8c af       	std	Y+60, r24	; 0x3c
    2360:	8c ad       	ldd	r24, Y+60	; 0x3c
    2362:	9d ad       	ldd	r25, Y+61	; 0x3d
    2364:	9f af       	std	Y+63, r25	; 0x3f
    2366:	8e af       	std	Y+62, r24	; 0x3e
	__asm__ volatile (
    2368:	8e ad       	ldd	r24, Y+62	; 0x3e
    236a:	9f ad       	ldd	r25, Y+63	; 0x3f
    236c:	01 97       	sbiw	r24, 0x01	; 1
    236e:	f1 f7       	brne	.-4      	; 0x236c <lcd_init+0x1006>
    2370:	9f af       	std	Y+63, r25	; 0x3f
    2372:	8e af       	std	Y+62, r24	; 0x3e
}
    2374:	00 00       	nop
		return;
    2376:	28 c0       	rjmp	.+80     	; 0x23c8 <lcd_init+0x1062>
		__ticks = (uint8_t)__tmp;
    2378:	6d a1       	ldd	r22, Y+37	; 0x25
    237a:	7e a1       	ldd	r23, Y+38	; 0x26
    237c:	8f a1       	ldd	r24, Y+39	; 0x27
    237e:	98 a5       	ldd	r25, Y+40	; 0x28
    2380:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    2384:	ce 5b       	subi	r28, 0xBE	; 190
    2386:	de 4f       	sbci	r29, 0xFE	; 254
    2388:	68 83       	st	Y, r22
    238a:	79 83       	std	Y+1, r23	; 0x01
    238c:	8a 83       	std	Y+2, r24	; 0x02
    238e:	9b 83       	std	Y+3, r25	; 0x03
    2390:	c2 54       	subi	r28, 0x42	; 66
    2392:	d1 40       	sbci	r29, 0x01	; 1
    2394:	ce 5b       	subi	r28, 0xBE	; 190
    2396:	de 4f       	sbci	r29, 0xFE	; 254
    2398:	98 81       	ld	r25, Y
    239a:	c2 54       	subi	r28, 0x42	; 66
    239c:	d1 40       	sbci	r29, 0x01	; 1
    239e:	9d a7       	std	Y+45, r25	; 0x2d
    23a0:	2d a5       	ldd	r18, Y+45	; 0x2d
    23a2:	ce 01       	movw	r24, r28
    23a4:	80 5c       	subi	r24, 0xC0	; 192
    23a6:	9f 4f       	sbci	r25, 0xFF	; 255
    23a8:	dc 01       	movw	r26, r24
    23aa:	2c 93       	st	X, r18
	__asm__ volatile (
    23ac:	ce 01       	movw	r24, r28
    23ae:	80 5c       	subi	r24, 0xC0	; 192
    23b0:	9f 4f       	sbci	r25, 0xFF	; 255
    23b2:	fc 01       	movw	r30, r24
    23b4:	80 81       	ld	r24, Z
    23b6:	28 2f       	mov	r18, r24
    23b8:	2a 95       	dec	r18
    23ba:	f1 f7       	brne	.-4      	; 0x23b8 <lcd_init+0x1052>
    23bc:	ce 01       	movw	r24, r28
    23be:	80 5c       	subi	r24, 0xC0	; 192
    23c0:	9f 4f       	sbci	r25, 0xFF	; 255
    23c2:	dc 01       	movw	r26, r24
    23c4:	2c 93       	st	X, r18
}
    23c6:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
    23c8:	85 e2       	ldi	r24, 0x25	; 37
    23ca:	90 e0       	ldi	r25, 0x00	; 0
    23cc:	fc 01       	movw	r30, r24
    23ce:	20 81       	ld	r18, Z
    23d0:	85 e2       	ldi	r24, 0x25	; 37
    23d2:	90 e0       	ldi	r25, 0x00	; 0
    23d4:	2e 7f       	andi	r18, 0xFE	; 254
    23d6:	dc 01       	movw	r26, r24
    23d8:	2c 93       	st	X, r18
    lcd_e_toggle();
    23da:	0e 94 48 00 	call	0x90	; 0x90 <toggle_e>
    23de:	80 e0       	ldi	r24, 0x00	; 0
    23e0:	90 e0       	ldi	r25, 0x00	; 0
    23e2:	a0 e8       	ldi	r26, 0x80	; 128
    23e4:	b2 e4       	ldi	r27, 0x42	; 66
    23e6:	8b 87       	std	Y+11, r24	; 0x0b
    23e8:	9c 87       	std	Y+12, r25	; 0x0c
    23ea:	ad 87       	std	Y+13, r26	; 0x0d
    23ec:	be 87       	std	Y+14, r27	; 0x0e
	__tmp = ((F_CPU) / 3e6) * __us;
    23ee:	2b ea       	ldi	r18, 0xAB	; 171
    23f0:	3a ea       	ldi	r19, 0xAA	; 170
    23f2:	4a ea       	ldi	r20, 0xAA	; 170
    23f4:	50 e4       	ldi	r21, 0x40	; 64
    23f6:	6b 85       	ldd	r22, Y+11	; 0x0b
    23f8:	7c 85       	ldd	r23, Y+12	; 0x0c
    23fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    23fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    23fe:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    2402:	ca 5b       	subi	r28, 0xBA	; 186
    2404:	de 4f       	sbci	r29, 0xFE	; 254
    2406:	68 83       	st	Y, r22
    2408:	79 83       	std	Y+1, r23	; 0x01
    240a:	8a 83       	std	Y+2, r24	; 0x02
    240c:	9b 83       	std	Y+3, r25	; 0x03
    240e:	c6 54       	subi	r28, 0x46	; 70
    2410:	d1 40       	sbci	r29, 0x01	; 1
    2412:	ca 5b       	subi	r28, 0xBA	; 186
    2414:	de 4f       	sbci	r29, 0xFE	; 254
    2416:	88 81       	ld	r24, Y
    2418:	99 81       	ldd	r25, Y+1	; 0x01
    241a:	aa 81       	ldd	r26, Y+2	; 0x02
    241c:	bb 81       	ldd	r27, Y+3	; 0x03
    241e:	c6 54       	subi	r28, 0x46	; 70
    2420:	d1 40       	sbci	r29, 0x01	; 1
    2422:	8f 87       	std	Y+15, r24	; 0x0f
    2424:	98 8b       	std	Y+16, r25	; 0x10
    2426:	a9 8b       	std	Y+17, r26	; 0x11
    2428:	ba 8b       	std	Y+18, r27	; 0x12
	__tmp2 = ((F_CPU) / 4e6) * __us;
    242a:	20 e0       	ldi	r18, 0x00	; 0
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	40 e8       	ldi	r20, 0x80	; 128
    2430:	50 e4       	ldi	r21, 0x40	; 64
    2432:	6b 85       	ldd	r22, Y+11	; 0x0b
    2434:	7c 85       	ldd	r23, Y+12	; 0x0c
    2436:	8d 85       	ldd	r24, Y+13	; 0x0d
    2438:	9e 85       	ldd	r25, Y+14	; 0x0e
    243a:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    243e:	c6 5b       	subi	r28, 0xB6	; 182
    2440:	de 4f       	sbci	r29, 0xFE	; 254
    2442:	68 83       	st	Y, r22
    2444:	79 83       	std	Y+1, r23	; 0x01
    2446:	8a 83       	std	Y+2, r24	; 0x02
    2448:	9b 83       	std	Y+3, r25	; 0x03
    244a:	ca 54       	subi	r28, 0x4A	; 74
    244c:	d1 40       	sbci	r29, 0x01	; 1
    244e:	c6 5b       	subi	r28, 0xB6	; 182
    2450:	de 4f       	sbci	r29, 0xFE	; 254
    2452:	88 81       	ld	r24, Y
    2454:	99 81       	ldd	r25, Y+1	; 0x01
    2456:	aa 81       	ldd	r26, Y+2	; 0x02
    2458:	bb 81       	ldd	r27, Y+3	; 0x03
    245a:	ca 54       	subi	r28, 0x4A	; 74
    245c:	d1 40       	sbci	r29, 0x01	; 1
    245e:	8b 8b       	std	Y+19, r24	; 0x13
    2460:	9c 8b       	std	Y+20, r25	; 0x14
    2462:	ad 8b       	std	Y+21, r26	; 0x15
    2464:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    2466:	20 e0       	ldi	r18, 0x00	; 0
    2468:	30 e0       	ldi	r19, 0x00	; 0
    246a:	40 e8       	ldi	r20, 0x80	; 128
    246c:	5f e3       	ldi	r21, 0x3F	; 63
    246e:	6f 85       	ldd	r22, Y+15	; 0x0f
    2470:	78 89       	ldd	r23, Y+16	; 0x10
    2472:	89 89       	ldd	r24, Y+17	; 0x11
    2474:	9a 89       	ldd	r25, Y+18	; 0x12
    2476:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    247a:	88 23       	and	r24, r24
    247c:	1c f4       	brge	.+6      	; 0x2484 <lcd_init+0x111e>
		__ticks = 1;
    247e:	81 e0       	ldi	r24, 0x01	; 1
    2480:	8f 8b       	std	Y+23, r24	; 0x17
    2482:	1c c1       	rjmp	.+568    	; 0x26bc <lcd_init+0x1356>
	else if (__tmp2 > 65535)
    2484:	20 e0       	ldi	r18, 0x00	; 0
    2486:	3f ef       	ldi	r19, 0xFF	; 255
    2488:	4f e7       	ldi	r20, 0x7F	; 127
    248a:	57 e4       	ldi	r21, 0x47	; 71
    248c:	6b 89       	ldd	r22, Y+19	; 0x13
    248e:	7c 89       	ldd	r23, Y+20	; 0x14
    2490:	8d 89       	ldd	r24, Y+21	; 0x15
    2492:	9e 89       	ldd	r25, Y+22	; 0x16
    2494:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    2498:	18 16       	cp	r1, r24
    249a:	0c f0       	brlt	.+2      	; 0x249e <lcd_init+0x1138>
    249c:	cd c0       	rjmp	.+410    	; 0x2638 <lcd_init+0x12d2>
		_delay_ms(__us / 1000.0);
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	4a e7       	ldi	r20, 0x7A	; 122
    24a4:	54 e4       	ldi	r21, 0x44	; 68
    24a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    24a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    24aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    24ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    24ae:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__divsf3>
    24b2:	c2 5b       	subi	r28, 0xB2	; 178
    24b4:	de 4f       	sbci	r29, 0xFE	; 254
    24b6:	68 83       	st	Y, r22
    24b8:	79 83       	std	Y+1, r23	; 0x01
    24ba:	8a 83       	std	Y+2, r24	; 0x02
    24bc:	9b 83       	std	Y+3, r25	; 0x03
    24be:	ce 54       	subi	r28, 0x4E	; 78
    24c0:	d1 40       	sbci	r29, 0x01	; 1
    24c2:	c2 5b       	subi	r28, 0xB2	; 178
    24c4:	de 4f       	sbci	r29, 0xFE	; 254
    24c6:	88 81       	ld	r24, Y
    24c8:	99 81       	ldd	r25, Y+1	; 0x01
    24ca:	aa 81       	ldd	r26, Y+2	; 0x02
    24cc:	bb 81       	ldd	r27, Y+3	; 0x03
    24ce:	ce 54       	subi	r28, 0x4E	; 78
    24d0:	d1 40       	sbci	r29, 0x01	; 1
    24d2:	89 83       	std	Y+1, r24	; 0x01
    24d4:	9a 83       	std	Y+2, r25	; 0x02
    24d6:	ab 83       	std	Y+3, r26	; 0x03
    24d8:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 4e3) * __ms;
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	30 e0       	ldi	r19, 0x00	; 0
    24de:	4a e7       	ldi	r20, 0x7A	; 122
    24e0:	55 e4       	ldi	r21, 0x45	; 69
    24e2:	69 81       	ldd	r22, Y+1	; 0x01
    24e4:	7a 81       	ldd	r23, Y+2	; 0x02
    24e6:	8b 81       	ldd	r24, Y+3	; 0x03
    24e8:	9c 81       	ldd	r25, Y+4	; 0x04
    24ea:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    24ee:	ce 5a       	subi	r28, 0xAE	; 174
    24f0:	de 4f       	sbci	r29, 0xFE	; 254
    24f2:	68 83       	st	Y, r22
    24f4:	79 83       	std	Y+1, r23	; 0x01
    24f6:	8a 83       	std	Y+2, r24	; 0x02
    24f8:	9b 83       	std	Y+3, r25	; 0x03
    24fa:	c2 55       	subi	r28, 0x52	; 82
    24fc:	d1 40       	sbci	r29, 0x01	; 1
    24fe:	ce 5a       	subi	r28, 0xAE	; 174
    2500:	de 4f       	sbci	r29, 0xFE	; 254
    2502:	88 81       	ld	r24, Y
    2504:	99 81       	ldd	r25, Y+1	; 0x01
    2506:	aa 81       	ldd	r26, Y+2	; 0x02
    2508:	bb 81       	ldd	r27, Y+3	; 0x03
    250a:	c2 55       	subi	r28, 0x52	; 82
    250c:	d1 40       	sbci	r29, 0x01	; 1
    250e:	8d 83       	std	Y+5, r24	; 0x05
    2510:	9e 83       	std	Y+6, r25	; 0x06
    2512:	af 83       	std	Y+7, r26	; 0x07
    2514:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    2516:	20 e0       	ldi	r18, 0x00	; 0
    2518:	30 e0       	ldi	r19, 0x00	; 0
    251a:	40 e8       	ldi	r20, 0x80	; 128
    251c:	5f e3       	ldi	r21, 0x3F	; 63
    251e:	6d 81       	ldd	r22, Y+5	; 0x05
    2520:	7e 81       	ldd	r23, Y+6	; 0x06
    2522:	8f 81       	ldd	r24, Y+7	; 0x07
    2524:	98 85       	ldd	r25, Y+8	; 0x08
    2526:	0e 94 3c 16 	call	0x2c78	; 0x2c78 <__cmpsf2>
    252a:	88 23       	and	r24, r24
    252c:	2c f4       	brge	.+10     	; 0x2538 <lcd_init+0x11d2>
		__ticks = 1;
    252e:	81 e0       	ldi	r24, 0x01	; 1
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	9a 87       	std	Y+10, r25	; 0x0a
    2534:	89 87       	std	Y+9, r24	; 0x09
    2536:	75 c0       	rjmp	.+234    	; 0x2622 <lcd_init+0x12bc>
	else if (__tmp > 65535)
    2538:	20 e0       	ldi	r18, 0x00	; 0
    253a:	3f ef       	ldi	r19, 0xFF	; 255
    253c:	4f e7       	ldi	r20, 0x7F	; 127
    253e:	57 e4       	ldi	r21, 0x47	; 71
    2540:	6d 81       	ldd	r22, Y+5	; 0x05
    2542:	7e 81       	ldd	r23, Y+6	; 0x06
    2544:	8f 81       	ldd	r24, Y+7	; 0x07
    2546:	98 85       	ldd	r25, Y+8	; 0x08
    2548:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    254c:	18 16       	cp	r1, r24
    254e:	0c f0       	brlt	.+2      	; 0x2552 <lcd_init+0x11ec>
    2550:	52 c0       	rjmp	.+164    	; 0x25f6 <lcd_init+0x1290>
		__ticks = (uint16_t) (__ms * 10.0);
    2552:	20 e0       	ldi	r18, 0x00	; 0
    2554:	30 e0       	ldi	r19, 0x00	; 0
    2556:	40 e2       	ldi	r20, 0x20	; 32
    2558:	51 e4       	ldi	r21, 0x41	; 65
    255a:	69 81       	ldd	r22, Y+1	; 0x01
    255c:	7a 81       	ldd	r23, Y+2	; 0x02
    255e:	8b 81       	ldd	r24, Y+3	; 0x03
    2560:	9c 81       	ldd	r25, Y+4	; 0x04
    2562:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <__mulsf3>
    2566:	ca 5a       	subi	r28, 0xAA	; 170
    2568:	de 4f       	sbci	r29, 0xFE	; 254
    256a:	68 83       	st	Y, r22
    256c:	79 83       	std	Y+1, r23	; 0x01
    256e:	8a 83       	std	Y+2, r24	; 0x02
    2570:	9b 83       	std	Y+3, r25	; 0x03
    2572:	c6 55       	subi	r28, 0x56	; 86
    2574:	d1 40       	sbci	r29, 0x01	; 1
    2576:	ca 5a       	subi	r28, 0xAA	; 170
    2578:	de 4f       	sbci	r29, 0xFE	; 254
    257a:	88 81       	ld	r24, Y
    257c:	99 81       	ldd	r25, Y+1	; 0x01
    257e:	aa 81       	ldd	r26, Y+2	; 0x02
    2580:	bb 81       	ldd	r27, Y+3	; 0x03
    2582:	c6 55       	subi	r28, 0x56	; 86
    2584:	d1 40       	sbci	r29, 0x01	; 1
    2586:	ce 55       	subi	r28, 0x5E	; 94
    2588:	df 4f       	sbci	r29, 0xFF	; 255
    258a:	88 83       	st	Y, r24
    258c:	99 83       	std	Y+1, r25	; 0x01
    258e:	aa 83       	std	Y+2, r26	; 0x02
    2590:	bb 83       	std	Y+3, r27	; 0x03
    2592:	c2 5a       	subi	r28, 0xA2	; 162
    2594:	d0 40       	sbci	r29, 0x00	; 0
    2596:	ce 55       	subi	r28, 0x5E	; 94
    2598:	df 4f       	sbci	r29, 0xFF	; 255
    259a:	68 81       	ld	r22, Y
    259c:	79 81       	ldd	r23, Y+1	; 0x01
    259e:	8a 81       	ldd	r24, Y+2	; 0x02
    25a0:	9b 81       	ldd	r25, Y+3	; 0x03
    25a2:	c2 5a       	subi	r28, 0xA2	; 162
    25a4:	d0 40       	sbci	r29, 0x00	; 0
    25a6:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    25aa:	c6 5a       	subi	r28, 0xA6	; 166
    25ac:	de 4f       	sbci	r29, 0xFE	; 254
    25ae:	68 83       	st	Y, r22
    25b0:	79 83       	std	Y+1, r23	; 0x01
    25b2:	8a 83       	std	Y+2, r24	; 0x02
    25b4:	9b 83       	std	Y+3, r25	; 0x03
    25b6:	ca 55       	subi	r28, 0x5A	; 90
    25b8:	d1 40       	sbci	r29, 0x01	; 1
    25ba:	c6 5a       	subi	r28, 0xA6	; 166
    25bc:	de 4f       	sbci	r29, 0xFE	; 254
    25be:	a8 81       	ld	r26, Y
    25c0:	b9 81       	ldd	r27, Y+1	; 0x01
    25c2:	ca 55       	subi	r28, 0x5A	; 90
    25c4:	d1 40       	sbci	r29, 0x01	; 1
    25c6:	ba 87       	std	Y+10, r27	; 0x0a
    25c8:	a9 87       	std	Y+9, r26	; 0x09
		while(__ticks)
    25ca:	10 c0       	rjmp	.+32     	; 0x25ec <lcd_init+0x1286>
    25cc:	80 e9       	ldi	r24, 0x90	; 144
    25ce:	91 e0       	ldi	r25, 0x01	; 1
    25d0:	99 8f       	std	Y+25, r25	; 0x19
    25d2:	88 8f       	std	Y+24, r24	; 0x18
	__asm__ volatile (
    25d4:	88 8d       	ldd	r24, Y+24	; 0x18
    25d6:	99 8d       	ldd	r25, Y+25	; 0x19
    25d8:	01 97       	sbiw	r24, 0x01	; 1
    25da:	f1 f7       	brne	.-4      	; 0x25d8 <lcd_init+0x1272>
    25dc:	99 8f       	std	Y+25, r25	; 0x19
    25de:	88 8f       	std	Y+24, r24	; 0x18
}
    25e0:	00 00       	nop
			__ticks --;
    25e2:	89 85       	ldd	r24, Y+9	; 0x09
    25e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    25e6:	01 97       	sbiw	r24, 0x01	; 1
    25e8:	9a 87       	std	Y+10, r25	; 0x0a
    25ea:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
    25ec:	89 85       	ldd	r24, Y+9	; 0x09
    25ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    25f0:	89 2b       	or	r24, r25
    25f2:	61 f7       	brne	.-40     	; 0x25cc <lcd_init+0x1266>
		return;
    25f4:	63 c0       	rjmp	.+198    	; 0x26bc <lcd_init+0x1356>
		__ticks = (uint16_t)__tmp;
    25f6:	6d 81       	ldd	r22, Y+5	; 0x05
    25f8:	7e 81       	ldd	r23, Y+6	; 0x06
    25fa:	8f 81       	ldd	r24, Y+7	; 0x07
    25fc:	98 85       	ldd	r25, Y+8	; 0x08
    25fe:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    2602:	c2 5a       	subi	r28, 0xA2	; 162
    2604:	de 4f       	sbci	r29, 0xFE	; 254
    2606:	68 83       	st	Y, r22
    2608:	79 83       	std	Y+1, r23	; 0x01
    260a:	8a 83       	std	Y+2, r24	; 0x02
    260c:	9b 83       	std	Y+3, r25	; 0x03
    260e:	ce 55       	subi	r28, 0x5E	; 94
    2610:	d1 40       	sbci	r29, 0x01	; 1
    2612:	c2 5a       	subi	r28, 0xA2	; 162
    2614:	de 4f       	sbci	r29, 0xFE	; 254
    2616:	e8 81       	ld	r30, Y
    2618:	f9 81       	ldd	r31, Y+1	; 0x01
    261a:	ce 55       	subi	r28, 0x5E	; 94
    261c:	d1 40       	sbci	r29, 0x01	; 1
    261e:	fa 87       	std	Y+10, r31	; 0x0a
    2620:	e9 87       	std	Y+9, r30	; 0x09
    2622:	89 85       	ldd	r24, Y+9	; 0x09
    2624:	9a 85       	ldd	r25, Y+10	; 0x0a
    2626:	9b 8f       	std	Y+27, r25	; 0x1b
    2628:	8a 8f       	std	Y+26, r24	; 0x1a
	__asm__ volatile (
    262a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    262c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    262e:	01 97       	sbiw	r24, 0x01	; 1
    2630:	f1 f7       	brne	.-4      	; 0x262e <lcd_init+0x12c8>
    2632:	9b 8f       	std	Y+27, r25	; 0x1b
    2634:	8a 8f       	std	Y+26, r24	; 0x1a
}
    2636:	42 c0       	rjmp	.+132    	; 0x26bc <lcd_init+0x1356>
	else if (__tmp > 255)
    2638:	20 e0       	ldi	r18, 0x00	; 0
    263a:	30 e0       	ldi	r19, 0x00	; 0
    263c:	4f e7       	ldi	r20, 0x7F	; 127
    263e:	53 e4       	ldi	r21, 0x43	; 67
    2640:	6f 85       	ldd	r22, Y+15	; 0x0f
    2642:	78 89       	ldd	r23, Y+16	; 0x10
    2644:	89 89       	ldd	r24, Y+17	; 0x11
    2646:	9a 89       	ldd	r25, Y+18	; 0x12
    2648:	0e 94 57 17 	call	0x2eae	; 0x2eae <__gesf2>
    264c:	18 16       	cp	r1, r24
    264e:	14 f5       	brge	.+68     	; 0x2694 <lcd_init+0x132e>
		uint16_t __ticks=(uint16_t)__tmp2;
    2650:	6b 89       	ldd	r22, Y+19	; 0x13
    2652:	7c 89       	ldd	r23, Y+20	; 0x14
    2654:	8d 89       	ldd	r24, Y+21	; 0x15
    2656:	9e 89       	ldd	r25, Y+22	; 0x16
    2658:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    265c:	ce 59       	subi	r28, 0x9E	; 158
    265e:	de 4f       	sbci	r29, 0xFE	; 254
    2660:	68 83       	st	Y, r22
    2662:	79 83       	std	Y+1, r23	; 0x01
    2664:	8a 83       	std	Y+2, r24	; 0x02
    2666:	9b 83       	std	Y+3, r25	; 0x03
    2668:	c2 56       	subi	r28, 0x62	; 98
    266a:	d1 40       	sbci	r29, 0x01	; 1
    266c:	ce 59       	subi	r28, 0x9E	; 158
    266e:	de 4f       	sbci	r29, 0xFE	; 254
    2670:	88 81       	ld	r24, Y
    2672:	99 81       	ldd	r25, Y+1	; 0x01
    2674:	c2 56       	subi	r28, 0x62	; 98
    2676:	d1 40       	sbci	r29, 0x01	; 1
    2678:	9d 8f       	std	Y+29, r25	; 0x1d
    267a:	8c 8f       	std	Y+28, r24	; 0x1c
    267c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    267e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2680:	9f 8f       	std	Y+31, r25	; 0x1f
    2682:	8e 8f       	std	Y+30, r24	; 0x1e
	__asm__ volatile (
    2684:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2686:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2688:	01 97       	sbiw	r24, 0x01	; 1
    268a:	f1 f7       	brne	.-4      	; 0x2688 <lcd_init+0x1322>
    268c:	9f 8f       	std	Y+31, r25	; 0x1f
    268e:	8e 8f       	std	Y+30, r24	; 0x1e
}
    2690:	00 00       	nop
		return;
    2692:	1b c0       	rjmp	.+54     	; 0x26ca <lcd_init+0x1364>
		__ticks = (uint8_t)__tmp;
    2694:	6f 85       	ldd	r22, Y+15	; 0x0f
    2696:	78 89       	ldd	r23, Y+16	; 0x10
    2698:	89 89       	ldd	r24, Y+17	; 0x11
    269a:	9a 89       	ldd	r25, Y+18	; 0x12
    269c:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <__fixunssfsi>
    26a0:	ca 59       	subi	r28, 0x9A	; 154
    26a2:	de 4f       	sbci	r29, 0xFE	; 254
    26a4:	68 83       	st	Y, r22
    26a6:	79 83       	std	Y+1, r23	; 0x01
    26a8:	8a 83       	std	Y+2, r24	; 0x02
    26aa:	9b 83       	std	Y+3, r25	; 0x03
    26ac:	c6 56       	subi	r28, 0x66	; 102
    26ae:	d1 40       	sbci	r29, 0x01	; 1
    26b0:	ca 59       	subi	r28, 0x9A	; 154
    26b2:	de 4f       	sbci	r29, 0xFE	; 254
    26b4:	98 81       	ld	r25, Y
    26b6:	c6 56       	subi	r28, 0x66	; 102
    26b8:	d1 40       	sbci	r29, 0x01	; 1
    26ba:	9f 8b       	std	Y+23, r25	; 0x17
    26bc:	8f 89       	ldd	r24, Y+23	; 0x17
    26be:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
    26c0:	88 a1       	ldd	r24, Y+32	; 0x20
    26c2:	8a 95       	dec	r24
    26c4:	f1 f7       	brne	.-4      	; 0x26c2 <lcd_init+0x135c>
    26c6:	88 a3       	std	Y+32, r24	; 0x20
}
    26c8:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
    26ca:	88 e2       	ldi	r24, 0x28	; 40
    26cc:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
    26d0:	88 e0       	ldi	r24, 0x08	; 8
    26d2:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
    26d6:	0e 94 39 09 	call	0x1272	; 0x1272 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
    26da:	86 e0       	ldi	r24, 0x06	; 6
    26dc:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
    26e0:	ce 01       	movw	r24, r28
    26e2:	8f 55       	subi	r24, 0x5F	; 95
    26e4:	9f 4f       	sbci	r25, 0xFF	; 255
    26e6:	dc 01       	movw	r26, r24
    26e8:	8c 91       	ld	r24, X
    26ea:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <lcd_command>

}/* lcd_init */
    26ee:	00 00       	nop
    26f0:	c7 59       	subi	r28, 0x97	; 151
    26f2:	de 4f       	sbci	r29, 0xFE	; 254
    26f4:	0f b6       	in	r0, 0x3f	; 63
    26f6:	f8 94       	cli
    26f8:	de bf       	out	0x3e, r29	; 62
    26fa:	0f be       	out	0x3f, r0	; 63
    26fc:	cd bf       	out	0x3d, r28	; 61
    26fe:	df 91       	pop	r29
    2700:	cf 91       	pop	r28
    2702:	1f 91       	pop	r17
    2704:	0f 91       	pop	r16
    2706:	08 95       	ret

00002708 <init_usart>:
#ifndef UART_H_INCLUDED
#define UART_H_INCLUDED
#include <avr/io.h>

void init_usart(uint32_t baud)
{
    2708:	0f 93       	push	r16
    270a:	1f 93       	push	r17
    270c:	cf 93       	push	r28
    270e:	df 93       	push	r29
    2710:	cd b7       	in	r28, 0x3d	; 61
    2712:	de b7       	in	r29, 0x3e	; 62
    2714:	28 97       	sbiw	r28, 0x08	; 8
    2716:	0f b6       	in	r0, 0x3f	; 63
    2718:	f8 94       	cli
    271a:	de bf       	out	0x3e, r29	; 62
    271c:	0f be       	out	0x3f, r0	; 63
    271e:	cd bf       	out	0x3d, r28	; 61
    2720:	69 83       	std	Y+1, r22	; 0x01
    2722:	7a 83       	std	Y+2, r23	; 0x02
    2724:	8b 83       	std	Y+3, r24	; 0x03
    2726:	9c 83       	std	Y+4, r25	; 0x04
    UBRR0L = (16000000ul/(16ul*baud))-1;
    2728:	89 81       	ldd	r24, Y+1	; 0x01
    272a:	9a 81       	ldd	r25, Y+2	; 0x02
    272c:	ab 81       	ldd	r26, Y+3	; 0x03
    272e:	bc 81       	ldd	r27, Y+4	; 0x04
    2730:	88 0f       	add	r24, r24
    2732:	99 1f       	adc	r25, r25
    2734:	aa 1f       	adc	r26, r26
    2736:	bb 1f       	adc	r27, r27
    2738:	88 0f       	add	r24, r24
    273a:	99 1f       	adc	r25, r25
    273c:	aa 1f       	adc	r26, r26
    273e:	bb 1f       	adc	r27, r27
    2740:	88 0f       	add	r24, r24
    2742:	99 1f       	adc	r25, r25
    2744:	aa 1f       	adc	r26, r26
    2746:	bb 1f       	adc	r27, r27
    2748:	88 0f       	add	r24, r24
    274a:	99 1f       	adc	r25, r25
    274c:	aa 1f       	adc	r26, r26
    274e:	bb 1f       	adc	r27, r27
    2750:	8c 01       	movw	r16, r24
    2752:	9d 01       	movw	r18, r26
    2754:	80 e0       	ldi	r24, 0x00	; 0
    2756:	94 e2       	ldi	r25, 0x24	; 36
    2758:	a4 ef       	ldi	r26, 0xF4	; 244
    275a:	b0 e0       	ldi	r27, 0x00	; 0
    275c:	8d 83       	std	Y+5, r24	; 0x05
    275e:	9e 83       	std	Y+6, r25	; 0x06
    2760:	af 83       	std	Y+7, r26	; 0x07
    2762:	b8 87       	std	Y+8, r27	; 0x08
    2764:	6d 81       	ldd	r22, Y+5	; 0x05
    2766:	7e 81       	ldd	r23, Y+6	; 0x06
    2768:	8f 81       	ldd	r24, Y+7	; 0x07
    276a:	98 85       	ldd	r25, Y+8	; 0x08
    276c:	a9 01       	movw	r20, r18
    276e:	98 01       	movw	r18, r16
    2770:	0e 94 0b 16 	call	0x2c16	; 0x2c16 <__udivmodsi4>
    2774:	da 01       	movw	r26, r20
    2776:	c9 01       	movw	r24, r18
    2778:	28 2f       	mov	r18, r24
    277a:	84 ec       	ldi	r24, 0xC4	; 196
    277c:	90 e0       	ldi	r25, 0x00	; 0
    277e:	21 50       	subi	r18, 0x01	; 1
    2780:	dc 01       	movw	r26, r24
    2782:	2c 93       	st	X, r18
    UBRR0H = 0;
    2784:	85 ec       	ldi	r24, 0xC5	; 197
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	fc 01       	movw	r30, r24
    278a:	10 82       	st	Z, r1
    UCSR0B |= (1<<TXEN0) | (1<<RXEN0)|(1<<RXCIE0);           // Sender und Empfänger aktivieren
    278c:	81 ec       	ldi	r24, 0xC1	; 193
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	dc 01       	movw	r26, r24
    2792:	2c 91       	ld	r18, X
    2794:	81 ec       	ldi	r24, 0xC1	; 193
    2796:	90 e0       	ldi	r25, 0x00	; 0
    2798:	28 69       	ori	r18, 0x98	; 152
    279a:	fc 01       	movw	r30, r24
    279c:	20 83       	st	Z, r18
    UCSR0C = (1<<UCSZ01) | (1<<UCSZ00);         // 8-Bit Übertragung
    279e:	82 ec       	ldi	r24, 0xC2	; 194
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	26 e0       	ldi	r18, 0x06	; 6
    27a4:	dc 01       	movw	r26, r24
    27a6:	2c 93       	st	X, r18
 // Asynchrone Übertragung (UMSEL00=0 und UMSEL01=0)
}
    27a8:	00 00       	nop
    27aa:	28 96       	adiw	r28, 0x08	; 8
    27ac:	0f b6       	in	r0, 0x3f	; 63
    27ae:	f8 94       	cli
    27b0:	de bf       	out	0x3e, r29	; 62
    27b2:	0f be       	out	0x3f, r0	; 63
    27b4:	cd bf       	out	0x3d, r28	; 61
    27b6:	df 91       	pop	r29
    27b8:	cf 91       	pop	r28
    27ba:	1f 91       	pop	r17
    27bc:	0f 91       	pop	r16
    27be:	08 95       	ret

000027c0 <_putch>:
void _putch(char ch)
{
    27c0:	cf 93       	push	r28
    27c2:	df 93       	push	r29
    27c4:	0f 92       	push	r0
    27c6:	cd b7       	in	r28, 0x3d	; 61
    27c8:	de b7       	in	r29, 0x3e	; 62
    27ca:	89 83       	std	Y+1, r24	; 0x01
    while(!(UCSR0A & (1<<UDRE0)));
    27cc:	00 00       	nop
    27ce:	80 ec       	ldi	r24, 0xC0	; 192
    27d0:	90 e0       	ldi	r25, 0x00	; 0
    27d2:	fc 01       	movw	r30, r24
    27d4:	80 81       	ld	r24, Z
    27d6:	88 2f       	mov	r24, r24
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	80 72       	andi	r24, 0x20	; 32
    27dc:	99 27       	eor	r25, r25
    27de:	89 2b       	or	r24, r25
    27e0:	b1 f3       	breq	.-20     	; 0x27ce <_putch+0xe>
    UDR0 = ch;
    27e2:	86 ec       	ldi	r24, 0xC6	; 198
    27e4:	90 e0       	ldi	r25, 0x00	; 0
    27e6:	29 81       	ldd	r18, Y+1	; 0x01
    27e8:	fc 01       	movw	r30, r24
    27ea:	20 83       	st	Z, r18
}
    27ec:	00 00       	nop
    27ee:	0f 90       	pop	r0
    27f0:	df 91       	pop	r29
    27f2:	cf 91       	pop	r28
    27f4:	08 95       	ret

000027f6 <_puts>:
void _puts(char st[])
{
    27f6:	cf 93       	push	r28
    27f8:	df 93       	push	r29
    27fa:	00 d0       	rcall	.+0      	; 0x27fc <_puts+0x6>
    27fc:	0f 92       	push	r0
    27fe:	cd b7       	in	r28, 0x3d	; 61
    2800:	de b7       	in	r29, 0x3e	; 62
    2802:	9b 83       	std	Y+3, r25	; 0x03
    2804:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t i=0;
    2806:	19 82       	std	Y+1, r1	; 0x01
    while(st[i])
    2808:	0e c0       	rjmp	.+28     	; 0x2826 <_puts+0x30>
        _putch(st[i++]);
    280a:	89 81       	ldd	r24, Y+1	; 0x01
    280c:	91 e0       	ldi	r25, 0x01	; 1
    280e:	98 0f       	add	r25, r24
    2810:	99 83       	std	Y+1, r25	; 0x01
    2812:	88 2f       	mov	r24, r24
    2814:	90 e0       	ldi	r25, 0x00	; 0
    2816:	2a 81       	ldd	r18, Y+2	; 0x02
    2818:	3b 81       	ldd	r19, Y+3	; 0x03
    281a:	82 0f       	add	r24, r18
    281c:	93 1f       	adc	r25, r19
    281e:	fc 01       	movw	r30, r24
    2820:	80 81       	ld	r24, Z
    2822:	0e 94 e0 13 	call	0x27c0	; 0x27c0 <_putch>
    while(st[i])
    2826:	89 81       	ldd	r24, Y+1	; 0x01
    2828:	88 2f       	mov	r24, r24
    282a:	90 e0       	ldi	r25, 0x00	; 0
    282c:	2a 81       	ldd	r18, Y+2	; 0x02
    282e:	3b 81       	ldd	r19, Y+3	; 0x03
    2830:	82 0f       	add	r24, r18
    2832:	93 1f       	adc	r25, r19
    2834:	fc 01       	movw	r30, r24
    2836:	80 81       	ld	r24, Z
    2838:	88 23       	and	r24, r24
    283a:	39 f7       	brne	.-50     	; 0x280a <_puts+0x14>
    _putch(32);
    283c:	80 e2       	ldi	r24, 0x20	; 32
    283e:	0e 94 e0 13 	call	0x27c0	; 0x27c0 <_putch>
}
    2842:	00 00       	nop
    2844:	0f 90       	pop	r0
    2846:	0f 90       	pop	r0
    2848:	0f 90       	pop	r0
    284a:	df 91       	pop	r29
    284c:	cf 91       	pop	r28
    284e:	08 95       	ret

00002850 <_getch>:
char _getch(void)
{
    2850:	cf 93       	push	r28
    2852:	df 93       	push	r29
    2854:	cd b7       	in	r28, 0x3d	; 61
    2856:	de b7       	in	r29, 0x3e	; 62
    while(!(UCSR0A & (1<<RXC0)));
    2858:	00 00       	nop
    285a:	80 ec       	ldi	r24, 0xC0	; 192
    285c:	90 e0       	ldi	r25, 0x00	; 0
    285e:	fc 01       	movw	r30, r24
    2860:	80 81       	ld	r24, Z
    2862:	88 23       	and	r24, r24
    2864:	d4 f7       	brge	.-12     	; 0x285a <_getch+0xa>
    return UDR0;
    2866:	86 ec       	ldi	r24, 0xC6	; 198
    2868:	90 e0       	ldi	r25, 0x00	; 0
    286a:	fc 01       	movw	r30, r24
    286c:	80 81       	ld	r24, Z
}
    286e:	df 91       	pop	r29
    2870:	cf 91       	pop	r28
    2872:	08 95       	ret

00002874 <_gets>:

void _gets(char* st)
{
    2874:	cf 93       	push	r28
    2876:	df 93       	push	r29
    2878:	00 d0       	rcall	.+0      	; 0x287a <_gets+0x6>
    287a:	cd b7       	in	r28, 0x3d	; 61
    287c:	de b7       	in	r29, 0x3e	; 62
    287e:	9a 83       	std	Y+2, r25	; 0x02
    2880:	89 83       	std	Y+1, r24	; 0x01
    do
    {
        *st=_getch();
    2882:	0e 94 28 14 	call	0x2850	; 0x2850 <_getch>
    2886:	28 2f       	mov	r18, r24
    2888:	89 81       	ldd	r24, Y+1	; 0x01
    288a:	9a 81       	ldd	r25, Y+2	; 0x02
    288c:	fc 01       	movw	r30, r24
    288e:	20 83       	st	Z, r18
    } while (*st++!=10);  // die Funktion WriteLine von C# schickt einen String,
    2890:	89 81       	ldd	r24, Y+1	; 0x01
    2892:	9a 81       	ldd	r25, Y+2	; 0x02
    2894:	9c 01       	movw	r18, r24
    2896:	2f 5f       	subi	r18, 0xFF	; 255
    2898:	3f 4f       	sbci	r19, 0xFF	; 255
    289a:	3a 83       	std	Y+2, r19	; 0x02
    289c:	29 83       	std	Y+1, r18	; 0x01
    289e:	fc 01       	movw	r30, r24
    28a0:	80 81       	ld	r24, Z
    28a2:	8a 30       	cpi	r24, 0x0A	; 10
    28a4:	71 f7       	brne	.-36     	; 0x2882 <_gets+0xe>
    *--st=0;			  // der mit New Line (\n, ASCII: 10) abschlossen ist.
    28a6:	89 81       	ldd	r24, Y+1	; 0x01
    28a8:	9a 81       	ldd	r25, Y+2	; 0x02
    28aa:	01 97       	sbiw	r24, 0x01	; 1
    28ac:	9a 83       	std	Y+2, r25	; 0x02
    28ae:	89 83       	std	Y+1, r24	; 0x01
    28b0:	89 81       	ldd	r24, Y+1	; 0x01
    28b2:	9a 81       	ldd	r25, Y+2	; 0x02
    28b4:	fc 01       	movw	r30, r24
    28b6:	10 82       	st	Z, r1
}
    28b8:	00 00       	nop
    28ba:	0f 90       	pop	r0
    28bc:	0f 90       	pop	r0
    28be:	df 91       	pop	r29
    28c0:	cf 91       	pop	r28
    28c2:	08 95       	ret

000028c4 <_newline>:
void _newline()
{
    28c4:	cf 93       	push	r28
    28c6:	df 93       	push	r29
    28c8:	cd b7       	in	r28, 0x3d	; 61
    28ca:	de b7       	in	r29, 0x3e	; 62
    _putch(13);   // CR
    28cc:	8d e0       	ldi	r24, 0x0D	; 13
    28ce:	0e 94 e0 13 	call	0x27c0	; 0x27c0 <_putch>
    _putch(10);   // LF
    28d2:	8a e0       	ldi	r24, 0x0A	; 10
    28d4:	0e 94 e0 13 	call	0x27c0	; 0x27c0 <_putch>
}
    28d8:	00 00       	nop
    28da:	df 91       	pop	r29
    28dc:	cf 91       	pop	r28
    28de:	08 95       	ret

000028e0 <itoa8>:
void itoa8(uint16_t val,char *stringa)
{
    28e0:	cf 93       	push	r28
    28e2:	df 93       	push	r29
    28e4:	00 d0       	rcall	.+0      	; 0x28e6 <itoa8+0x6>
    28e6:	00 d0       	rcall	.+0      	; 0x28e8 <itoa8+0x8>
    28e8:	cd b7       	in	r28, 0x3d	; 61
    28ea:	de b7       	in	r29, 0x3e	; 62
    28ec:	9a 83       	std	Y+2, r25	; 0x02
    28ee:	89 83       	std	Y+1, r24	; 0x01
    28f0:	7c 83       	std	Y+4, r23	; 0x04
    28f2:	6b 83       	std	Y+3, r22	; 0x03
    stringa[0]=(val%10000)/1000+48;
    28f4:	49 81       	ldd	r20, Y+1	; 0x01
    28f6:	5a 81       	ldd	r21, Y+2	; 0x02
    28f8:	ca 01       	movw	r24, r20
    28fa:	92 95       	swap	r25
    28fc:	82 95       	swap	r24
    28fe:	8f 70       	andi	r24, 0x0F	; 15
    2900:	89 27       	eor	r24, r25
    2902:	9f 70       	andi	r25, 0x0F	; 15
    2904:	89 27       	eor	r24, r25
    2906:	9c 01       	movw	r18, r24
    2908:	a7 e4       	ldi	r26, 0x47	; 71
    290a:	b3 e0       	ldi	r27, 0x03	; 3
    290c:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__umulhisi3>
    2910:	96 95       	lsr	r25
    2912:	87 95       	ror	r24
    2914:	96 95       	lsr	r25
    2916:	87 95       	ror	r24
    2918:	96 95       	lsr	r25
    291a:	87 95       	ror	r24
    291c:	60 e1       	ldi	r22, 0x10	; 16
    291e:	77 e2       	ldi	r23, 0x27	; 39
    2920:	86 9f       	mul	r24, r22
    2922:	90 01       	movw	r18, r0
    2924:	87 9f       	mul	r24, r23
    2926:	30 0d       	add	r19, r0
    2928:	96 9f       	mul	r25, r22
    292a:	30 0d       	add	r19, r0
    292c:	11 24       	eor	r1, r1
    292e:	ca 01       	movw	r24, r20
    2930:	82 1b       	sub	r24, r18
    2932:	93 0b       	sbc	r25, r19
    2934:	96 95       	lsr	r25
    2936:	87 95       	ror	r24
    2938:	96 95       	lsr	r25
    293a:	87 95       	ror	r24
    293c:	96 95       	lsr	r25
    293e:	87 95       	ror	r24
    2940:	9c 01       	movw	r18, r24
    2942:	a5 ec       	ldi	r26, 0xC5	; 197
    2944:	b0 e2       	ldi	r27, 0x20	; 32
    2946:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__umulhisi3>
    294a:	92 95       	swap	r25
    294c:	82 95       	swap	r24
    294e:	8f 70       	andi	r24, 0x0F	; 15
    2950:	89 27       	eor	r24, r25
    2952:	9f 70       	andi	r25, 0x0F	; 15
    2954:	89 27       	eor	r24, r25
    2956:	80 5d       	subi	r24, 0xD0	; 208
    2958:	28 2f       	mov	r18, r24
    295a:	8b 81       	ldd	r24, Y+3	; 0x03
    295c:	9c 81       	ldd	r25, Y+4	; 0x04
    295e:	fc 01       	movw	r30, r24
    2960:	20 83       	st	Z, r18
    stringa[1]=(val%1000)/100+48;
    2962:	49 81       	ldd	r20, Y+1	; 0x01
    2964:	5a 81       	ldd	r21, Y+2	; 0x02
    2966:	ca 01       	movw	r24, r20
    2968:	96 95       	lsr	r25
    296a:	87 95       	ror	r24
    296c:	96 95       	lsr	r25
    296e:	87 95       	ror	r24
    2970:	96 95       	lsr	r25
    2972:	87 95       	ror	r24
    2974:	9c 01       	movw	r18, r24
    2976:	a5 ec       	ldi	r26, 0xC5	; 197
    2978:	b0 e2       	ldi	r27, 0x20	; 32
    297a:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__umulhisi3>
    297e:	92 95       	swap	r25
    2980:	82 95       	swap	r24
    2982:	8f 70       	andi	r24, 0x0F	; 15
    2984:	89 27       	eor	r24, r25
    2986:	9f 70       	andi	r25, 0x0F	; 15
    2988:	89 27       	eor	r24, r25
    298a:	68 ee       	ldi	r22, 0xE8	; 232
    298c:	73 e0       	ldi	r23, 0x03	; 3
    298e:	86 9f       	mul	r24, r22
    2990:	90 01       	movw	r18, r0
    2992:	87 9f       	mul	r24, r23
    2994:	30 0d       	add	r19, r0
    2996:	96 9f       	mul	r25, r22
    2998:	30 0d       	add	r19, r0
    299a:	11 24       	eor	r1, r1
    299c:	ca 01       	movw	r24, r20
    299e:	82 1b       	sub	r24, r18
    29a0:	93 0b       	sbc	r25, r19
    29a2:	96 95       	lsr	r25
    29a4:	87 95       	ror	r24
    29a6:	96 95       	lsr	r25
    29a8:	87 95       	ror	r24
    29aa:	9c 01       	movw	r18, r24
    29ac:	ab e7       	ldi	r26, 0x7B	; 123
    29ae:	b4 e1       	ldi	r27, 0x14	; 20
    29b0:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__umulhisi3>
    29b4:	96 95       	lsr	r25
    29b6:	87 95       	ror	r24
    29b8:	20 e3       	ldi	r18, 0x30	; 48
    29ba:	28 0f       	add	r18, r24
    29bc:	8b 81       	ldd	r24, Y+3	; 0x03
    29be:	9c 81       	ldd	r25, Y+4	; 0x04
    29c0:	01 96       	adiw	r24, 0x01	; 1
    29c2:	fc 01       	movw	r30, r24
    29c4:	20 83       	st	Z, r18
    stringa[2]=(val%100)/10+48;
    29c6:	49 81       	ldd	r20, Y+1	; 0x01
    29c8:	5a 81       	ldd	r21, Y+2	; 0x02
    29ca:	ca 01       	movw	r24, r20
    29cc:	96 95       	lsr	r25
    29ce:	87 95       	ror	r24
    29d0:	96 95       	lsr	r25
    29d2:	87 95       	ror	r24
    29d4:	9c 01       	movw	r18, r24
    29d6:	ab e7       	ldi	r26, 0x7B	; 123
    29d8:	b4 e1       	ldi	r27, 0x14	; 20
    29da:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__umulhisi3>
    29de:	96 95       	lsr	r25
    29e0:	87 95       	ror	r24
    29e2:	64 e6       	ldi	r22, 0x64	; 100
    29e4:	68 9f       	mul	r22, r24
    29e6:	90 01       	movw	r18, r0
    29e8:	69 9f       	mul	r22, r25
    29ea:	30 0d       	add	r19, r0
    29ec:	11 24       	eor	r1, r1
    29ee:	ca 01       	movw	r24, r20
    29f0:	82 1b       	sub	r24, r18
    29f2:	93 0b       	sbc	r25, r19
    29f4:	9c 01       	movw	r18, r24
    29f6:	ad ec       	ldi	r26, 0xCD	; 205
    29f8:	bc ec       	ldi	r27, 0xCC	; 204
    29fa:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__umulhisi3>
    29fe:	96 95       	lsr	r25
    2a00:	87 95       	ror	r24
    2a02:	96 95       	lsr	r25
    2a04:	87 95       	ror	r24
    2a06:	96 95       	lsr	r25
    2a08:	87 95       	ror	r24
    2a0a:	20 e3       	ldi	r18, 0x30	; 48
    2a0c:	28 0f       	add	r18, r24
    2a0e:	8b 81       	ldd	r24, Y+3	; 0x03
    2a10:	9c 81       	ldd	r25, Y+4	; 0x04
    2a12:	02 96       	adiw	r24, 0x02	; 2
    2a14:	fc 01       	movw	r30, r24
    2a16:	20 83       	st	Z, r18
    stringa[3]=(val%10)+48;
    2a18:	49 81       	ldd	r20, Y+1	; 0x01
    2a1a:	5a 81       	ldd	r21, Y+2	; 0x02
    2a1c:	9a 01       	movw	r18, r20
    2a1e:	ad ec       	ldi	r26, 0xCD	; 205
    2a20:	bc ec       	ldi	r27, 0xCC	; 204
    2a22:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__umulhisi3>
    2a26:	9c 01       	movw	r18, r24
    2a28:	36 95       	lsr	r19
    2a2a:	27 95       	ror	r18
    2a2c:	36 95       	lsr	r19
    2a2e:	27 95       	ror	r18
    2a30:	36 95       	lsr	r19
    2a32:	27 95       	ror	r18
    2a34:	c9 01       	movw	r24, r18
    2a36:	88 0f       	add	r24, r24
    2a38:	99 1f       	adc	r25, r25
    2a3a:	88 0f       	add	r24, r24
    2a3c:	99 1f       	adc	r25, r25
    2a3e:	82 0f       	add	r24, r18
    2a40:	93 1f       	adc	r25, r19
    2a42:	88 0f       	add	r24, r24
    2a44:	99 1f       	adc	r25, r25
    2a46:	9a 01       	movw	r18, r20
    2a48:	28 1b       	sub	r18, r24
    2a4a:	39 0b       	sbc	r19, r25
    2a4c:	82 2f       	mov	r24, r18
    2a4e:	20 e3       	ldi	r18, 0x30	; 48
    2a50:	28 0f       	add	r18, r24
    2a52:	8b 81       	ldd	r24, Y+3	; 0x03
    2a54:	9c 81       	ldd	r25, Y+4	; 0x04
    2a56:	03 96       	adiw	r24, 0x03	; 3
    2a58:	fc 01       	movw	r30, r24
    2a5a:	20 83       	st	Z, r18
    stringa[4]=0;
    2a5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2a5e:	9c 81       	ldd	r25, Y+4	; 0x04
    2a60:	04 96       	adiw	r24, 0x04	; 4
    2a62:	fc 01       	movw	r30, r24
    2a64:	10 82       	st	Z, r1
}
    2a66:	00 00       	nop
    2a68:	0f 90       	pop	r0
    2a6a:	0f 90       	pop	r0
    2a6c:	0f 90       	pop	r0
    2a6e:	0f 90       	pop	r0
    2a70:	df 91       	pop	r29
    2a72:	cf 91       	pop	r28
    2a74:	08 95       	ret

00002a76 <__vector_18>:
#include <string.h>

 char koordx[5];
 char koordy[5];
ISR(USART_RX_vect)
{
    2a76:	1f 92       	push	r1
    2a78:	0f 92       	push	r0
    2a7a:	0f b6       	in	r0, 0x3f	; 63
    2a7c:	0f 92       	push	r0
    2a7e:	11 24       	eor	r1, r1
    2a80:	2f 93       	push	r18
    2a82:	3f 93       	push	r19
    2a84:	4f 93       	push	r20
    2a86:	5f 93       	push	r21
    2a88:	6f 93       	push	r22
    2a8a:	7f 93       	push	r23
    2a8c:	8f 93       	push	r24
    2a8e:	9f 93       	push	r25
    2a90:	af 93       	push	r26
    2a92:	bf 93       	push	r27
    2a94:	ef 93       	push	r30
    2a96:	ff 93       	push	r31
    2a98:	cf 93       	push	r28
    2a9a:	df 93       	push	r29
    2a9c:	0f 92       	push	r0
    2a9e:	cd b7       	in	r28, 0x3d	; 61
    2aa0:	de b7       	in	r29, 0x3e	; 62
    uint8_t sreg=SREG;
    2aa2:	8f e5       	ldi	r24, 0x5F	; 95
    2aa4:	90 e0       	ldi	r25, 0x00	; 0
    2aa6:	fc 01       	movw	r30, r24
    2aa8:	80 81       	ld	r24, Z
    2aaa:	89 83       	std	Y+1, r24	; 0x01
    SREG&=~(1<<7);
    2aac:	8f e5       	ldi	r24, 0x5F	; 95
    2aae:	90 e0       	ldi	r25, 0x00	; 0
    2ab0:	fc 01       	movw	r30, r24
    2ab2:	20 81       	ld	r18, Z
    2ab4:	8f e5       	ldi	r24, 0x5F	; 95
    2ab6:	90 e0       	ldi	r25, 0x00	; 0
    2ab8:	2f 77       	andi	r18, 0x7F	; 127
    2aba:	fc 01       	movw	r30, r24
    2abc:	20 83       	st	Z, r18
    if(UDR0==49)
    2abe:	86 ec       	ldi	r24, 0xC6	; 198
    2ac0:	90 e0       	ldi	r25, 0x00	; 0
    2ac2:	fc 01       	movw	r30, r24
    2ac4:	80 81       	ld	r24, Z
    2ac6:	81 33       	cpi	r24, 0x31	; 49
    2ac8:	51 f4       	brne	.+20     	; 0x2ade <__vector_18+0x68>
    {

//        lcd_clrscr();
//        lcd_puts(koordx);
        _puts(koordx);
    2aca:	80 e0       	ldi	r24, 0x00	; 0
    2acc:	91 e0       	ldi	r25, 0x01	; 1
    2ace:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <_puts>
        _puts(koordy);
    2ad2:	85 e0       	ldi	r24, 0x05	; 5
    2ad4:	91 e0       	ldi	r25, 0x01	; 1
    2ad6:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <_puts>
        _newline();
    2ada:	0e 94 62 14 	call	0x28c4	; 0x28c4 <_newline>

    }
    SREG=sreg;
    2ade:	8f e5       	ldi	r24, 0x5F	; 95
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	29 81       	ldd	r18, Y+1	; 0x01
    2ae4:	fc 01       	movw	r30, r24
    2ae6:	20 83       	st	Z, r18
}
    2ae8:	00 00       	nop
    2aea:	0f 90       	pop	r0
    2aec:	df 91       	pop	r29
    2aee:	cf 91       	pop	r28
    2af0:	ff 91       	pop	r31
    2af2:	ef 91       	pop	r30
    2af4:	bf 91       	pop	r27
    2af6:	af 91       	pop	r26
    2af8:	9f 91       	pop	r25
    2afa:	8f 91       	pop	r24
    2afc:	7f 91       	pop	r23
    2afe:	6f 91       	pop	r22
    2b00:	5f 91       	pop	r21
    2b02:	4f 91       	pop	r20
    2b04:	3f 91       	pop	r19
    2b06:	2f 91       	pop	r18
    2b08:	0f 90       	pop	r0
    2b0a:	0f be       	out	0x3f, r0	; 63
    2b0c:	0f 90       	pop	r0
    2b0e:	1f 90       	pop	r1
    2b10:	18 95       	reti

00002b12 <main>:
int main(void)
{
    2b12:	cf 93       	push	r28
    2b14:	df 93       	push	r29
    2b16:	00 d0       	rcall	.+0      	; 0x2b18 <main+0x6>
    2b18:	cd b7       	in	r28, 0x3d	; 61
    2b1a:	de b7       	in	r29, 0x3e	; 62
    uint8_t x;
    uint8_t y;
    ADCSRA|=0x07;
    2b1c:	8a e7       	ldi	r24, 0x7A	; 122
    2b1e:	90 e0       	ldi	r25, 0x00	; 0
    2b20:	fc 01       	movw	r30, r24
    2b22:	20 81       	ld	r18, Z
    2b24:	8a e7       	ldi	r24, 0x7A	; 122
    2b26:	90 e0       	ldi	r25, 0x00	; 0
    2b28:	27 60       	ori	r18, 0x07	; 7
    2b2a:	fc 01       	movw	r30, r24
    2b2c:	20 83       	st	Z, r18
    ADCSRA|=(1<<ADEN);
    2b2e:	8a e7       	ldi	r24, 0x7A	; 122
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	fc 01       	movw	r30, r24
    2b34:	20 81       	ld	r18, Z
    2b36:	8a e7       	ldi	r24, 0x7A	; 122
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	20 68       	ori	r18, 0x80	; 128
    2b3c:	fc 01       	movw	r30, r24
    2b3e:	20 83       	st	Z, r18
    ADMUX|=0x60;
    2b40:	8c e7       	ldi	r24, 0x7C	; 124
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	fc 01       	movw	r30, r24
    2b46:	20 81       	ld	r18, Z
    2b48:	8c e7       	ldi	r24, 0x7C	; 124
    2b4a:	90 e0       	ldi	r25, 0x00	; 0
    2b4c:	20 66       	ori	r18, 0x60	; 96
    2b4e:	fc 01       	movw	r30, r24
    2b50:	20 83       	st	Z, r18
    SREG|=(1<<7);
    2b52:	8f e5       	ldi	r24, 0x5F	; 95
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	fc 01       	movw	r30, r24
    2b58:	20 81       	ld	r18, Z
    2b5a:	8f e5       	ldi	r24, 0x5F	; 95
    2b5c:	90 e0       	ldi	r25, 0x00	; 0
    2b5e:	20 68       	ori	r18, 0x80	; 128
    2b60:	fc 01       	movw	r30, r24
    2b62:	20 83       	st	Z, r18
//    lcd_init(LCD_DISP_ON);
//    lcd_clrscr();
    init_usart(57600);
    2b64:	60 e0       	ldi	r22, 0x00	; 0
    2b66:	71 ee       	ldi	r23, 0xE1	; 225
    2b68:	80 e0       	ldi	r24, 0x00	; 0
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	0e 94 84 13 	call	0x2708	; 0x2708 <init_usart>
    while(1)
    {
        ADMUX|=1;
    2b70:	8c e7       	ldi	r24, 0x7C	; 124
    2b72:	90 e0       	ldi	r25, 0x00	; 0
    2b74:	fc 01       	movw	r30, r24
    2b76:	20 81       	ld	r18, Z
    2b78:	8c e7       	ldi	r24, 0x7C	; 124
    2b7a:	90 e0       	ldi	r25, 0x00	; 0
    2b7c:	21 60       	ori	r18, 0x01	; 1
    2b7e:	fc 01       	movw	r30, r24
    2b80:	20 83       	st	Z, r18
        ADCSRA|=(1<<ADSC);
    2b82:	8a e7       	ldi	r24, 0x7A	; 122
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	fc 01       	movw	r30, r24
    2b88:	20 81       	ld	r18, Z
    2b8a:	8a e7       	ldi	r24, 0x7A	; 122
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	20 64       	ori	r18, 0x40	; 64
    2b90:	fc 01       	movw	r30, r24
    2b92:	20 83       	st	Z, r18
        while(ADCSRA&(1<<ADSC));
    2b94:	00 00       	nop
    2b96:	8a e7       	ldi	r24, 0x7A	; 122
    2b98:	90 e0       	ldi	r25, 0x00	; 0
    2b9a:	fc 01       	movw	r30, r24
    2b9c:	80 81       	ld	r24, Z
    2b9e:	88 2f       	mov	r24, r24
    2ba0:	90 e0       	ldi	r25, 0x00	; 0
    2ba2:	80 74       	andi	r24, 0x40	; 64
    2ba4:	99 27       	eor	r25, r25
    2ba6:	89 2b       	or	r24, r25
    2ba8:	b1 f7       	brne	.-20     	; 0x2b96 <main+0x84>
        x=ADCH;
    2baa:	89 e7       	ldi	r24, 0x79	; 121
    2bac:	90 e0       	ldi	r25, 0x00	; 0
    2bae:	fc 01       	movw	r30, r24
    2bb0:	80 81       	ld	r24, Z
    2bb2:	89 83       	std	Y+1, r24	; 0x01
        itoa8(x,koordx);
    2bb4:	89 81       	ldd	r24, Y+1	; 0x01
    2bb6:	88 2f       	mov	r24, r24
    2bb8:	90 e0       	ldi	r25, 0x00	; 0
    2bba:	60 e0       	ldi	r22, 0x00	; 0
    2bbc:	71 e0       	ldi	r23, 0x01	; 1
    2bbe:	0e 94 70 14 	call	0x28e0	; 0x28e0 <itoa8>
        ADMUX&=~1;
    2bc2:	8c e7       	ldi	r24, 0x7C	; 124
    2bc4:	90 e0       	ldi	r25, 0x00	; 0
    2bc6:	fc 01       	movw	r30, r24
    2bc8:	20 81       	ld	r18, Z
    2bca:	8c e7       	ldi	r24, 0x7C	; 124
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	2e 7f       	andi	r18, 0xFE	; 254
    2bd0:	fc 01       	movw	r30, r24
    2bd2:	20 83       	st	Z, r18
        ADCSRA|=(1<<ADSC);
    2bd4:	8a e7       	ldi	r24, 0x7A	; 122
    2bd6:	90 e0       	ldi	r25, 0x00	; 0
    2bd8:	fc 01       	movw	r30, r24
    2bda:	20 81       	ld	r18, Z
    2bdc:	8a e7       	ldi	r24, 0x7A	; 122
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	20 64       	ori	r18, 0x40	; 64
    2be2:	fc 01       	movw	r30, r24
    2be4:	20 83       	st	Z, r18
        while(ADCSRA&(1<<ADSC));
    2be6:	00 00       	nop
    2be8:	8a e7       	ldi	r24, 0x7A	; 122
    2bea:	90 e0       	ldi	r25, 0x00	; 0
    2bec:	fc 01       	movw	r30, r24
    2bee:	80 81       	ld	r24, Z
    2bf0:	88 2f       	mov	r24, r24
    2bf2:	90 e0       	ldi	r25, 0x00	; 0
    2bf4:	80 74       	andi	r24, 0x40	; 64
    2bf6:	99 27       	eor	r25, r25
    2bf8:	89 2b       	or	r24, r25
    2bfa:	b1 f7       	brne	.-20     	; 0x2be8 <main+0xd6>
        y=ADCH;
    2bfc:	89 e7       	ldi	r24, 0x79	; 121
    2bfe:	90 e0       	ldi	r25, 0x00	; 0
    2c00:	fc 01       	movw	r30, r24
    2c02:	80 81       	ld	r24, Z
    2c04:	8a 83       	std	Y+2, r24	; 0x02
        itoa8(y,koordy);
    2c06:	8a 81       	ldd	r24, Y+2	; 0x02
    2c08:	88 2f       	mov	r24, r24
    2c0a:	90 e0       	ldi	r25, 0x00	; 0
    2c0c:	65 e0       	ldi	r22, 0x05	; 5
    2c0e:	71 e0       	ldi	r23, 0x01	; 1
    2c10:	0e 94 70 14 	call	0x28e0	; 0x28e0 <itoa8>
        ADMUX|=1;
    2c14:	ad cf       	rjmp	.-166    	; 0x2b70 <main+0x5e>

00002c16 <__udivmodsi4>:
    2c16:	a1 e2       	ldi	r26, 0x21	; 33
    2c18:	1a 2e       	mov	r1, r26
    2c1a:	aa 1b       	sub	r26, r26
    2c1c:	bb 1b       	sub	r27, r27
    2c1e:	fd 01       	movw	r30, r26
    2c20:	0d c0       	rjmp	.+26     	; 0x2c3c <__udivmodsi4_ep>

00002c22 <__udivmodsi4_loop>:
    2c22:	aa 1f       	adc	r26, r26
    2c24:	bb 1f       	adc	r27, r27
    2c26:	ee 1f       	adc	r30, r30
    2c28:	ff 1f       	adc	r31, r31
    2c2a:	a2 17       	cp	r26, r18
    2c2c:	b3 07       	cpc	r27, r19
    2c2e:	e4 07       	cpc	r30, r20
    2c30:	f5 07       	cpc	r31, r21
    2c32:	20 f0       	brcs	.+8      	; 0x2c3c <__udivmodsi4_ep>
    2c34:	a2 1b       	sub	r26, r18
    2c36:	b3 0b       	sbc	r27, r19
    2c38:	e4 0b       	sbc	r30, r20
    2c3a:	f5 0b       	sbc	r31, r21

00002c3c <__udivmodsi4_ep>:
    2c3c:	66 1f       	adc	r22, r22
    2c3e:	77 1f       	adc	r23, r23
    2c40:	88 1f       	adc	r24, r24
    2c42:	99 1f       	adc	r25, r25
    2c44:	1a 94       	dec	r1
    2c46:	69 f7       	brne	.-38     	; 0x2c22 <__udivmodsi4_loop>
    2c48:	60 95       	com	r22
    2c4a:	70 95       	com	r23
    2c4c:	80 95       	com	r24
    2c4e:	90 95       	com	r25
    2c50:	9b 01       	movw	r18, r22
    2c52:	ac 01       	movw	r20, r24
    2c54:	bd 01       	movw	r22, r26
    2c56:	cf 01       	movw	r24, r30
    2c58:	08 95       	ret

00002c5a <__umulhisi3>:
    2c5a:	a2 9f       	mul	r26, r18
    2c5c:	b0 01       	movw	r22, r0
    2c5e:	b3 9f       	mul	r27, r19
    2c60:	c0 01       	movw	r24, r0
    2c62:	a3 9f       	mul	r26, r19
    2c64:	70 0d       	add	r23, r0
    2c66:	81 1d       	adc	r24, r1
    2c68:	11 24       	eor	r1, r1
    2c6a:	91 1d       	adc	r25, r1
    2c6c:	b2 9f       	mul	r27, r18
    2c6e:	70 0d       	add	r23, r0
    2c70:	81 1d       	adc	r24, r1
    2c72:	11 24       	eor	r1, r1
    2c74:	91 1d       	adc	r25, r1
    2c76:	08 95       	ret

00002c78 <__cmpsf2>:
    2c78:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <__fp_cmp>
    2c7c:	08 f4       	brcc	.+2      	; 0x2c80 <__cmpsf2+0x8>
    2c7e:	81 e0       	ldi	r24, 0x01	; 1
    2c80:	08 95       	ret

00002c82 <__divsf3>:
    2c82:	0e 94 55 16 	call	0x2caa	; 0x2caa <__divsf3x>
    2c86:	0c 94 1d 17 	jmp	0x2e3a	; 0x2e3a <__fp_round>
    2c8a:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <__fp_pscB>
    2c8e:	58 f0       	brcs	.+22     	; 0x2ca6 <__divsf3+0x24>
    2c90:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <__fp_pscA>
    2c94:	40 f0       	brcs	.+16     	; 0x2ca6 <__divsf3+0x24>
    2c96:	29 f4       	brne	.+10     	; 0x2ca2 <__divsf3+0x20>
    2c98:	5f 3f       	cpi	r21, 0xFF	; 255
    2c9a:	29 f0       	breq	.+10     	; 0x2ca6 <__divsf3+0x24>
    2c9c:	0c 94 06 17 	jmp	0x2e0c	; 0x2e0c <__fp_inf>
    2ca0:	51 11       	cpse	r21, r1
    2ca2:	0c 94 51 17 	jmp	0x2ea2	; 0x2ea2 <__fp_szero>
    2ca6:	0c 94 0c 17 	jmp	0x2e18	; 0x2e18 <__fp_nan>

00002caa <__divsf3x>:
    2caa:	0e 94 2e 17 	call	0x2e5c	; 0x2e5c <__fp_split3>
    2cae:	68 f3       	brcs	.-38     	; 0x2c8a <__divsf3+0x8>

00002cb0 <__divsf3_pse>:
    2cb0:	99 23       	and	r25, r25
    2cb2:	b1 f3       	breq	.-20     	; 0x2ca0 <__divsf3+0x1e>
    2cb4:	55 23       	and	r21, r21
    2cb6:	91 f3       	breq	.-28     	; 0x2c9c <__divsf3+0x1a>
    2cb8:	95 1b       	sub	r25, r21
    2cba:	55 0b       	sbc	r21, r21
    2cbc:	bb 27       	eor	r27, r27
    2cbe:	aa 27       	eor	r26, r26
    2cc0:	62 17       	cp	r22, r18
    2cc2:	73 07       	cpc	r23, r19
    2cc4:	84 07       	cpc	r24, r20
    2cc6:	38 f0       	brcs	.+14     	; 0x2cd6 <__divsf3_pse+0x26>
    2cc8:	9f 5f       	subi	r25, 0xFF	; 255
    2cca:	5f 4f       	sbci	r21, 0xFF	; 255
    2ccc:	22 0f       	add	r18, r18
    2cce:	33 1f       	adc	r19, r19
    2cd0:	44 1f       	adc	r20, r20
    2cd2:	aa 1f       	adc	r26, r26
    2cd4:	a9 f3       	breq	.-22     	; 0x2cc0 <__divsf3_pse+0x10>
    2cd6:	35 d0       	rcall	.+106    	; 0x2d42 <__divsf3_pse+0x92>
    2cd8:	0e 2e       	mov	r0, r30
    2cda:	3a f0       	brmi	.+14     	; 0x2cea <__divsf3_pse+0x3a>
    2cdc:	e0 e8       	ldi	r30, 0x80	; 128
    2cde:	32 d0       	rcall	.+100    	; 0x2d44 <__divsf3_pse+0x94>
    2ce0:	91 50       	subi	r25, 0x01	; 1
    2ce2:	50 40       	sbci	r21, 0x00	; 0
    2ce4:	e6 95       	lsr	r30
    2ce6:	00 1c       	adc	r0, r0
    2ce8:	ca f7       	brpl	.-14     	; 0x2cdc <__divsf3_pse+0x2c>
    2cea:	2b d0       	rcall	.+86     	; 0x2d42 <__divsf3_pse+0x92>
    2cec:	fe 2f       	mov	r31, r30
    2cee:	29 d0       	rcall	.+82     	; 0x2d42 <__divsf3_pse+0x92>
    2cf0:	66 0f       	add	r22, r22
    2cf2:	77 1f       	adc	r23, r23
    2cf4:	88 1f       	adc	r24, r24
    2cf6:	bb 1f       	adc	r27, r27
    2cf8:	26 17       	cp	r18, r22
    2cfa:	37 07       	cpc	r19, r23
    2cfc:	48 07       	cpc	r20, r24
    2cfe:	ab 07       	cpc	r26, r27
    2d00:	b0 e8       	ldi	r27, 0x80	; 128
    2d02:	09 f0       	breq	.+2      	; 0x2d06 <__divsf3_pse+0x56>
    2d04:	bb 0b       	sbc	r27, r27
    2d06:	80 2d       	mov	r24, r0
    2d08:	bf 01       	movw	r22, r30
    2d0a:	ff 27       	eor	r31, r31
    2d0c:	93 58       	subi	r25, 0x83	; 131
    2d0e:	5f 4f       	sbci	r21, 0xFF	; 255
    2d10:	3a f0       	brmi	.+14     	; 0x2d20 <__divsf3_pse+0x70>
    2d12:	9e 3f       	cpi	r25, 0xFE	; 254
    2d14:	51 05       	cpc	r21, r1
    2d16:	78 f0       	brcs	.+30     	; 0x2d36 <__divsf3_pse+0x86>
    2d18:	0c 94 06 17 	jmp	0x2e0c	; 0x2e0c <__fp_inf>
    2d1c:	0c 94 51 17 	jmp	0x2ea2	; 0x2ea2 <__fp_szero>
    2d20:	5f 3f       	cpi	r21, 0xFF	; 255
    2d22:	e4 f3       	brlt	.-8      	; 0x2d1c <__divsf3_pse+0x6c>
    2d24:	98 3e       	cpi	r25, 0xE8	; 232
    2d26:	d4 f3       	brlt	.-12     	; 0x2d1c <__divsf3_pse+0x6c>
    2d28:	86 95       	lsr	r24
    2d2a:	77 95       	ror	r23
    2d2c:	67 95       	ror	r22
    2d2e:	b7 95       	ror	r27
    2d30:	f7 95       	ror	r31
    2d32:	9f 5f       	subi	r25, 0xFF	; 255
    2d34:	c9 f7       	brne	.-14     	; 0x2d28 <__divsf3_pse+0x78>
    2d36:	88 0f       	add	r24, r24
    2d38:	91 1d       	adc	r25, r1
    2d3a:	96 95       	lsr	r25
    2d3c:	87 95       	ror	r24
    2d3e:	97 f9       	bld	r25, 7
    2d40:	08 95       	ret
    2d42:	e1 e0       	ldi	r30, 0x01	; 1
    2d44:	66 0f       	add	r22, r22
    2d46:	77 1f       	adc	r23, r23
    2d48:	88 1f       	adc	r24, r24
    2d4a:	bb 1f       	adc	r27, r27
    2d4c:	62 17       	cp	r22, r18
    2d4e:	73 07       	cpc	r23, r19
    2d50:	84 07       	cpc	r24, r20
    2d52:	ba 07       	cpc	r27, r26
    2d54:	20 f0       	brcs	.+8      	; 0x2d5e <__divsf3_pse+0xae>
    2d56:	62 1b       	sub	r22, r18
    2d58:	73 0b       	sbc	r23, r19
    2d5a:	84 0b       	sbc	r24, r20
    2d5c:	ba 0b       	sbc	r27, r26
    2d5e:	ee 1f       	adc	r30, r30
    2d60:	88 f7       	brcc	.-30     	; 0x2d44 <__divsf3_pse+0x94>
    2d62:	e0 95       	com	r30
    2d64:	08 95       	ret

00002d66 <__fixunssfsi>:
    2d66:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <__fp_splitA>
    2d6a:	88 f0       	brcs	.+34     	; 0x2d8e <__fixunssfsi+0x28>
    2d6c:	9f 57       	subi	r25, 0x7F	; 127
    2d6e:	98 f0       	brcs	.+38     	; 0x2d96 <__fixunssfsi+0x30>
    2d70:	b9 2f       	mov	r27, r25
    2d72:	99 27       	eor	r25, r25
    2d74:	b7 51       	subi	r27, 0x17	; 23
    2d76:	b0 f0       	brcs	.+44     	; 0x2da4 <__fixunssfsi+0x3e>
    2d78:	e1 f0       	breq	.+56     	; 0x2db2 <__fixunssfsi+0x4c>
    2d7a:	66 0f       	add	r22, r22
    2d7c:	77 1f       	adc	r23, r23
    2d7e:	88 1f       	adc	r24, r24
    2d80:	99 1f       	adc	r25, r25
    2d82:	1a f0       	brmi	.+6      	; 0x2d8a <__fixunssfsi+0x24>
    2d84:	ba 95       	dec	r27
    2d86:	c9 f7       	brne	.-14     	; 0x2d7a <__fixunssfsi+0x14>
    2d88:	14 c0       	rjmp	.+40     	; 0x2db2 <__fixunssfsi+0x4c>
    2d8a:	b1 30       	cpi	r27, 0x01	; 1
    2d8c:	91 f0       	breq	.+36     	; 0x2db2 <__fixunssfsi+0x4c>
    2d8e:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <__fp_zero>
    2d92:	b1 e0       	ldi	r27, 0x01	; 1
    2d94:	08 95       	ret
    2d96:	0c 94 50 17 	jmp	0x2ea0	; 0x2ea0 <__fp_zero>
    2d9a:	67 2f       	mov	r22, r23
    2d9c:	78 2f       	mov	r23, r24
    2d9e:	88 27       	eor	r24, r24
    2da0:	b8 5f       	subi	r27, 0xF8	; 248
    2da2:	39 f0       	breq	.+14     	; 0x2db2 <__fixunssfsi+0x4c>
    2da4:	b9 3f       	cpi	r27, 0xF9	; 249
    2da6:	cc f3       	brlt	.-14     	; 0x2d9a <__fixunssfsi+0x34>
    2da8:	86 95       	lsr	r24
    2daa:	77 95       	ror	r23
    2dac:	67 95       	ror	r22
    2dae:	b3 95       	inc	r27
    2db0:	d9 f7       	brne	.-10     	; 0x2da8 <__fixunssfsi+0x42>
    2db2:	3e f4       	brtc	.+14     	; 0x2dc2 <__fixunssfsi+0x5c>
    2db4:	90 95       	com	r25
    2db6:	80 95       	com	r24
    2db8:	70 95       	com	r23
    2dba:	61 95       	neg	r22
    2dbc:	7f 4f       	sbci	r23, 0xFF	; 255
    2dbe:	8f 4f       	sbci	r24, 0xFF	; 255
    2dc0:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc2:	08 95       	ret

00002dc4 <__fp_cmp>:
    2dc4:	99 0f       	add	r25, r25
    2dc6:	00 08       	sbc	r0, r0
    2dc8:	55 0f       	add	r21, r21
    2dca:	aa 0b       	sbc	r26, r26
    2dcc:	e0 e8       	ldi	r30, 0x80	; 128
    2dce:	fe ef       	ldi	r31, 0xFE	; 254
    2dd0:	16 16       	cp	r1, r22
    2dd2:	17 06       	cpc	r1, r23
    2dd4:	e8 07       	cpc	r30, r24
    2dd6:	f9 07       	cpc	r31, r25
    2dd8:	c0 f0       	brcs	.+48     	; 0x2e0a <__fp_cmp+0x46>
    2dda:	12 16       	cp	r1, r18
    2ddc:	13 06       	cpc	r1, r19
    2dde:	e4 07       	cpc	r30, r20
    2de0:	f5 07       	cpc	r31, r21
    2de2:	98 f0       	brcs	.+38     	; 0x2e0a <__fp_cmp+0x46>
    2de4:	62 1b       	sub	r22, r18
    2de6:	73 0b       	sbc	r23, r19
    2de8:	84 0b       	sbc	r24, r20
    2dea:	95 0b       	sbc	r25, r21
    2dec:	39 f4       	brne	.+14     	; 0x2dfc <__fp_cmp+0x38>
    2dee:	0a 26       	eor	r0, r26
    2df0:	61 f0       	breq	.+24     	; 0x2e0a <__fp_cmp+0x46>
    2df2:	23 2b       	or	r18, r19
    2df4:	24 2b       	or	r18, r20
    2df6:	25 2b       	or	r18, r21
    2df8:	21 f4       	brne	.+8      	; 0x2e02 <__fp_cmp+0x3e>
    2dfa:	08 95       	ret
    2dfc:	0a 26       	eor	r0, r26
    2dfe:	09 f4       	brne	.+2      	; 0x2e02 <__fp_cmp+0x3e>
    2e00:	a1 40       	sbci	r26, 0x01	; 1
    2e02:	a6 95       	lsr	r26
    2e04:	8f ef       	ldi	r24, 0xFF	; 255
    2e06:	81 1d       	adc	r24, r1
    2e08:	81 1d       	adc	r24, r1
    2e0a:	08 95       	ret

00002e0c <__fp_inf>:
    2e0c:	97 f9       	bld	r25, 7
    2e0e:	9f 67       	ori	r25, 0x7F	; 127
    2e10:	80 e8       	ldi	r24, 0x80	; 128
    2e12:	70 e0       	ldi	r23, 0x00	; 0
    2e14:	60 e0       	ldi	r22, 0x00	; 0
    2e16:	08 95       	ret

00002e18 <__fp_nan>:
    2e18:	9f ef       	ldi	r25, 0xFF	; 255
    2e1a:	80 ec       	ldi	r24, 0xC0	; 192
    2e1c:	08 95       	ret

00002e1e <__fp_pscA>:
    2e1e:	00 24       	eor	r0, r0
    2e20:	0a 94       	dec	r0
    2e22:	16 16       	cp	r1, r22
    2e24:	17 06       	cpc	r1, r23
    2e26:	18 06       	cpc	r1, r24
    2e28:	09 06       	cpc	r0, r25
    2e2a:	08 95       	ret

00002e2c <__fp_pscB>:
    2e2c:	00 24       	eor	r0, r0
    2e2e:	0a 94       	dec	r0
    2e30:	12 16       	cp	r1, r18
    2e32:	13 06       	cpc	r1, r19
    2e34:	14 06       	cpc	r1, r20
    2e36:	05 06       	cpc	r0, r21
    2e38:	08 95       	ret

00002e3a <__fp_round>:
    2e3a:	09 2e       	mov	r0, r25
    2e3c:	03 94       	inc	r0
    2e3e:	00 0c       	add	r0, r0
    2e40:	11 f4       	brne	.+4      	; 0x2e46 <__fp_round+0xc>
    2e42:	88 23       	and	r24, r24
    2e44:	52 f0       	brmi	.+20     	; 0x2e5a <__fp_round+0x20>
    2e46:	bb 0f       	add	r27, r27
    2e48:	40 f4       	brcc	.+16     	; 0x2e5a <__fp_round+0x20>
    2e4a:	bf 2b       	or	r27, r31
    2e4c:	11 f4       	brne	.+4      	; 0x2e52 <__fp_round+0x18>
    2e4e:	60 ff       	sbrs	r22, 0
    2e50:	04 c0       	rjmp	.+8      	; 0x2e5a <__fp_round+0x20>
    2e52:	6f 5f       	subi	r22, 0xFF	; 255
    2e54:	7f 4f       	sbci	r23, 0xFF	; 255
    2e56:	8f 4f       	sbci	r24, 0xFF	; 255
    2e58:	9f 4f       	sbci	r25, 0xFF	; 255
    2e5a:	08 95       	ret

00002e5c <__fp_split3>:
    2e5c:	57 fd       	sbrc	r21, 7
    2e5e:	90 58       	subi	r25, 0x80	; 128
    2e60:	44 0f       	add	r20, r20
    2e62:	55 1f       	adc	r21, r21
    2e64:	59 f0       	breq	.+22     	; 0x2e7c <__fp_splitA+0x10>
    2e66:	5f 3f       	cpi	r21, 0xFF	; 255
    2e68:	71 f0       	breq	.+28     	; 0x2e86 <__fp_splitA+0x1a>
    2e6a:	47 95       	ror	r20

00002e6c <__fp_splitA>:
    2e6c:	88 0f       	add	r24, r24
    2e6e:	97 fb       	bst	r25, 7
    2e70:	99 1f       	adc	r25, r25
    2e72:	61 f0       	breq	.+24     	; 0x2e8c <__fp_splitA+0x20>
    2e74:	9f 3f       	cpi	r25, 0xFF	; 255
    2e76:	79 f0       	breq	.+30     	; 0x2e96 <__fp_splitA+0x2a>
    2e78:	87 95       	ror	r24
    2e7a:	08 95       	ret
    2e7c:	12 16       	cp	r1, r18
    2e7e:	13 06       	cpc	r1, r19
    2e80:	14 06       	cpc	r1, r20
    2e82:	55 1f       	adc	r21, r21
    2e84:	f2 cf       	rjmp	.-28     	; 0x2e6a <__fp_split3+0xe>
    2e86:	46 95       	lsr	r20
    2e88:	f1 df       	rcall	.-30     	; 0x2e6c <__fp_splitA>
    2e8a:	08 c0       	rjmp	.+16     	; 0x2e9c <__fp_splitA+0x30>
    2e8c:	16 16       	cp	r1, r22
    2e8e:	17 06       	cpc	r1, r23
    2e90:	18 06       	cpc	r1, r24
    2e92:	99 1f       	adc	r25, r25
    2e94:	f1 cf       	rjmp	.-30     	; 0x2e78 <__fp_splitA+0xc>
    2e96:	86 95       	lsr	r24
    2e98:	71 05       	cpc	r23, r1
    2e9a:	61 05       	cpc	r22, r1
    2e9c:	08 94       	sec
    2e9e:	08 95       	ret

00002ea0 <__fp_zero>:
    2ea0:	e8 94       	clt

00002ea2 <__fp_szero>:
    2ea2:	bb 27       	eor	r27, r27
    2ea4:	66 27       	eor	r22, r22
    2ea6:	77 27       	eor	r23, r23
    2ea8:	cb 01       	movw	r24, r22
    2eaa:	97 f9       	bld	r25, 7
    2eac:	08 95       	ret

00002eae <__gesf2>:
    2eae:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <__fp_cmp>
    2eb2:	08 f4       	brcc	.+2      	; 0x2eb6 <__gesf2+0x8>
    2eb4:	8f ef       	ldi	r24, 0xFF	; 255
    2eb6:	08 95       	ret

00002eb8 <__mulsf3>:
    2eb8:	0e 94 6f 17 	call	0x2ede	; 0x2ede <__mulsf3x>
    2ebc:	0c 94 1d 17 	jmp	0x2e3a	; 0x2e3a <__fp_round>
    2ec0:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <__fp_pscA>
    2ec4:	38 f0       	brcs	.+14     	; 0x2ed4 <__mulsf3+0x1c>
    2ec6:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <__fp_pscB>
    2eca:	20 f0       	brcs	.+8      	; 0x2ed4 <__mulsf3+0x1c>
    2ecc:	95 23       	and	r25, r21
    2ece:	11 f0       	breq	.+4      	; 0x2ed4 <__mulsf3+0x1c>
    2ed0:	0c 94 06 17 	jmp	0x2e0c	; 0x2e0c <__fp_inf>
    2ed4:	0c 94 0c 17 	jmp	0x2e18	; 0x2e18 <__fp_nan>
    2ed8:	11 24       	eor	r1, r1
    2eda:	0c 94 51 17 	jmp	0x2ea2	; 0x2ea2 <__fp_szero>

00002ede <__mulsf3x>:
    2ede:	0e 94 2e 17 	call	0x2e5c	; 0x2e5c <__fp_split3>
    2ee2:	70 f3       	brcs	.-36     	; 0x2ec0 <__mulsf3+0x8>

00002ee4 <__mulsf3_pse>:
    2ee4:	95 9f       	mul	r25, r21
    2ee6:	c1 f3       	breq	.-16     	; 0x2ed8 <__mulsf3+0x20>
    2ee8:	95 0f       	add	r25, r21
    2eea:	50 e0       	ldi	r21, 0x00	; 0
    2eec:	55 1f       	adc	r21, r21
    2eee:	62 9f       	mul	r22, r18
    2ef0:	f0 01       	movw	r30, r0
    2ef2:	72 9f       	mul	r23, r18
    2ef4:	bb 27       	eor	r27, r27
    2ef6:	f0 0d       	add	r31, r0
    2ef8:	b1 1d       	adc	r27, r1
    2efa:	63 9f       	mul	r22, r19
    2efc:	aa 27       	eor	r26, r26
    2efe:	f0 0d       	add	r31, r0
    2f00:	b1 1d       	adc	r27, r1
    2f02:	aa 1f       	adc	r26, r26
    2f04:	64 9f       	mul	r22, r20
    2f06:	66 27       	eor	r22, r22
    2f08:	b0 0d       	add	r27, r0
    2f0a:	a1 1d       	adc	r26, r1
    2f0c:	66 1f       	adc	r22, r22
    2f0e:	82 9f       	mul	r24, r18
    2f10:	22 27       	eor	r18, r18
    2f12:	b0 0d       	add	r27, r0
    2f14:	a1 1d       	adc	r26, r1
    2f16:	62 1f       	adc	r22, r18
    2f18:	73 9f       	mul	r23, r19
    2f1a:	b0 0d       	add	r27, r0
    2f1c:	a1 1d       	adc	r26, r1
    2f1e:	62 1f       	adc	r22, r18
    2f20:	83 9f       	mul	r24, r19
    2f22:	a0 0d       	add	r26, r0
    2f24:	61 1d       	adc	r22, r1
    2f26:	22 1f       	adc	r18, r18
    2f28:	74 9f       	mul	r23, r20
    2f2a:	33 27       	eor	r19, r19
    2f2c:	a0 0d       	add	r26, r0
    2f2e:	61 1d       	adc	r22, r1
    2f30:	23 1f       	adc	r18, r19
    2f32:	84 9f       	mul	r24, r20
    2f34:	60 0d       	add	r22, r0
    2f36:	21 1d       	adc	r18, r1
    2f38:	82 2f       	mov	r24, r18
    2f3a:	76 2f       	mov	r23, r22
    2f3c:	6a 2f       	mov	r22, r26
    2f3e:	11 24       	eor	r1, r1
    2f40:	9f 57       	subi	r25, 0x7F	; 127
    2f42:	50 40       	sbci	r21, 0x00	; 0
    2f44:	9a f0       	brmi	.+38     	; 0x2f6c <__mulsf3_pse+0x88>
    2f46:	f1 f0       	breq	.+60     	; 0x2f84 <__mulsf3_pse+0xa0>
    2f48:	88 23       	and	r24, r24
    2f4a:	4a f0       	brmi	.+18     	; 0x2f5e <__mulsf3_pse+0x7a>
    2f4c:	ee 0f       	add	r30, r30
    2f4e:	ff 1f       	adc	r31, r31
    2f50:	bb 1f       	adc	r27, r27
    2f52:	66 1f       	adc	r22, r22
    2f54:	77 1f       	adc	r23, r23
    2f56:	88 1f       	adc	r24, r24
    2f58:	91 50       	subi	r25, 0x01	; 1
    2f5a:	50 40       	sbci	r21, 0x00	; 0
    2f5c:	a9 f7       	brne	.-22     	; 0x2f48 <__mulsf3_pse+0x64>
    2f5e:	9e 3f       	cpi	r25, 0xFE	; 254
    2f60:	51 05       	cpc	r21, r1
    2f62:	80 f0       	brcs	.+32     	; 0x2f84 <__mulsf3_pse+0xa0>
    2f64:	0c 94 06 17 	jmp	0x2e0c	; 0x2e0c <__fp_inf>
    2f68:	0c 94 51 17 	jmp	0x2ea2	; 0x2ea2 <__fp_szero>
    2f6c:	5f 3f       	cpi	r21, 0xFF	; 255
    2f6e:	e4 f3       	brlt	.-8      	; 0x2f68 <__mulsf3_pse+0x84>
    2f70:	98 3e       	cpi	r25, 0xE8	; 232
    2f72:	d4 f3       	brlt	.-12     	; 0x2f68 <__mulsf3_pse+0x84>
    2f74:	86 95       	lsr	r24
    2f76:	77 95       	ror	r23
    2f78:	67 95       	ror	r22
    2f7a:	b7 95       	ror	r27
    2f7c:	f7 95       	ror	r31
    2f7e:	e7 95       	ror	r30
    2f80:	9f 5f       	subi	r25, 0xFF	; 255
    2f82:	c1 f7       	brne	.-16     	; 0x2f74 <__mulsf3_pse+0x90>
    2f84:	fe 2b       	or	r31, r30
    2f86:	88 0f       	add	r24, r24
    2f88:	91 1d       	adc	r25, r1
    2f8a:	96 95       	lsr	r25
    2f8c:	87 95       	ror	r24
    2f8e:	97 f9       	bld	r25, 7
    2f90:	08 95       	ret

00002f92 <_exit>:
    2f92:	f8 94       	cli

00002f94 <__stop_program>:
    2f94:	ff cf       	rjmp	.-2      	; 0x2f94 <__stop_program>
