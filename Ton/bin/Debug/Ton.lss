
bin\Debug\Ton.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000b24  00000bb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b24  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000bda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  00000bdd  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bf0  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000060  00000000  00000000  00000c30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_pubnames 0000001d  00000000  00000000  00000c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000a38  00000000  00000000  00000cad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000776  00000000  00000000  000016e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000005db  00000000  00000000  00001e5b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000080  00000000  00000000  00002438  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000003d7  00000000  00000000  000024b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e2       	ldi	r30, 0x24	; 36
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 32       	cpi	r26, 0x22	; 34
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 90 05 	jmp	0xb20	; 0xb20 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:
#include <util/delay.h>
double powh(double basis,uint8_t exponent);
void liedspielen(int8_t lied[],uint8_t noten);

int main(void)
{
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	c4 54       	subi	r28, 0x44	; 68
  a0:	d1 09       	sbc	r29, r1
  a2:	0f b6       	in	r0, 0x3f	; 63
  a4:	f8 94       	cli
  a6:	de bf       	out	0x3e, r29	; 62
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	cd bf       	out	0x3d, r28	; 61
    int8_t lied[]={3,5,7,8,10,-1,10,-1,12,12,12,12,10,-1,12,12,12,12,10,-1,8,8,8,8,7,-1,7,-1,5,5,5,5,3};
  ac:	81 e2       	ldi	r24, 0x21	; 33
  ae:	e0 e0       	ldi	r30, 0x00	; 0
  b0:	f1 e0       	ldi	r31, 0x01	; 1
  b2:	de 01       	movw	r26, r28
  b4:	50 96       	adiw	r26, 0x10	; 16
  b6:	01 90       	ld	r0, Z+
  b8:	0d 92       	st	X+, r0
  ba:	8a 95       	dec	r24
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x20>
    uint8_t noten=sizeof(lied)/sizeof(lied[0]);
  be:	81 e2       	ldi	r24, 0x21	; 33
  c0:	89 83       	std	Y+1, r24	; 0x01
    TCCR0B|=0x05;
  c2:	85 e4       	ldi	r24, 0x45	; 69
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	dc 01       	movw	r26, r24
  c8:	2c 91       	ld	r18, X
  ca:	85 e4       	ldi	r24, 0x45	; 69
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	25 60       	ori	r18, 0x05	; 5
  d0:	fc 01       	movw	r30, r24
  d2:	20 83       	st	Z, r18
    TCCR0A=0b01000010;
  d4:	84 e4       	ldi	r24, 0x44	; 68
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	22 e4       	ldi	r18, 0x42	; 66
  da:	dc 01       	movw	r26, r24
  dc:	2c 93       	st	X, r18
    DDRD|=(1<<6);
  de:	8a e2       	ldi	r24, 0x2A	; 42
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	fc 01       	movw	r30, r24
  e4:	20 81       	ld	r18, Z
  e6:	8a e2       	ldi	r24, 0x2A	; 42
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	20 64       	ori	r18, 0x40	; 64
  ec:	dc 01       	movw	r26, r24
  ee:	2c 93       	st	X, r18

    while(1)
    {
        liedspielen(lied,noten);
  f0:	ce 01       	movw	r24, r28
  f2:	40 96       	adiw	r24, 0x10	; 16
  f4:	69 81       	ldd	r22, Y+1	; 0x01
  f6:	0e 94 13 01 	call	0x226	; 0x226 <liedspielen>
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e4       	ldi	r25, 0x40	; 64
  fe:	ac e9       	ldi	r26, 0x9C	; 156
 100:	b5 e4       	ldi	r27, 0x45	; 69
 102:	8a 83       	std	Y+2, r24	; 0x02
 104:	9b 83       	std	Y+3, r25	; 0x03
 106:	ac 83       	std	Y+4, r26	; 0x04
 108:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	4a e7       	ldi	r20, 0x7A	; 122
 110:	55 e4       	ldi	r21, 0x45	; 69
 112:	6a 81       	ldd	r22, Y+2	; 0x02
 114:	7b 81       	ldd	r23, Y+3	; 0x03
 116:	8c 81       	ldd	r24, Y+4	; 0x04
 118:	9d 81       	ldd	r25, Y+5	; 0x05
 11a:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 11e:	6d ab       	std	Y+53, r22	; 0x35
 120:	7e ab       	std	Y+54, r23	; 0x36
 122:	8f ab       	std	Y+55, r24	; 0x37
 124:	98 af       	std	Y+56, r25	; 0x38
 126:	8d a9       	ldd	r24, Y+53	; 0x35
 128:	9e a9       	ldd	r25, Y+54	; 0x36
 12a:	af a9       	ldd	r26, Y+55	; 0x37
 12c:	b8 ad       	ldd	r27, Y+56	; 0x38
 12e:	8e 83       	std	Y+6, r24	; 0x06
 130:	9f 83       	std	Y+7, r25	; 0x07
 132:	a8 87       	std	Y+8, r26	; 0x08
 134:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e8       	ldi	r20, 0x80	; 128
 13c:	5f e3       	ldi	r21, 0x3F	; 63
 13e:	6e 81       	ldd	r22, Y+6	; 0x06
 140:	7f 81       	ldd	r23, Y+7	; 0x07
 142:	88 85       	ldd	r24, Y+8	; 0x08
 144:	99 85       	ldd	r25, Y+9	; 0x09
 146:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
 14a:	88 23       	and	r24, r24
 14c:	2c f4       	brge	.+10     	; 0x158 <main+0xc2>
		__ticks = 1;
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	9b 87       	std	Y+11, r25	; 0x0b
 154:	8a 87       	std	Y+10, r24	; 0x0a
 156:	5b c0       	rjmp	.+182    	; 0x20e <main+0x178>
	else if (__tmp > 65535)
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	3f ef       	ldi	r19, 0xFF	; 255
 15c:	4f e7       	ldi	r20, 0x7F	; 127
 15e:	57 e4       	ldi	r21, 0x47	; 71
 160:	6e 81       	ldd	r22, Y+6	; 0x06
 162:	7f 81       	ldd	r23, Y+7	; 0x07
 164:	88 85       	ldd	r24, Y+8	; 0x08
 166:	99 85       	ldd	r25, Y+9	; 0x09
 168:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gesf2>
 16c:	18 16       	cp	r1, r24
 16e:	0c f0       	brlt	.+2      	; 0x172 <main+0xdc>
 170:	3c c0       	rjmp	.+120    	; 0x1ea <main+0x154>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 172:	20 e0       	ldi	r18, 0x00	; 0
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	40 e2       	ldi	r20, 0x20	; 32
 178:	51 e4       	ldi	r21, 0x41	; 65
 17a:	6a 81       	ldd	r22, Y+2	; 0x02
 17c:	7b 81       	ldd	r23, Y+3	; 0x03
 17e:	8c 81       	ldd	r24, Y+4	; 0x04
 180:	9d 81       	ldd	r25, Y+5	; 0x05
 182:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 186:	69 af       	std	Y+57, r22	; 0x39
 188:	7a af       	std	Y+58, r23	; 0x3a
 18a:	8b af       	std	Y+59, r24	; 0x3b
 18c:	9c af       	std	Y+60, r25	; 0x3c
 18e:	89 ad       	ldd	r24, Y+57	; 0x39
 190:	9a ad       	ldd	r25, Y+58	; 0x3a
 192:	ab ad       	ldd	r26, Y+59	; 0x3b
 194:	bc ad       	ldd	r27, Y+60	; 0x3c
 196:	89 ab       	std	Y+49, r24	; 0x31
 198:	9a ab       	std	Y+50, r25	; 0x32
 19a:	ab ab       	std	Y+51, r26	; 0x33
 19c:	bc ab       	std	Y+52, r27	; 0x34
 19e:	69 a9       	ldd	r22, Y+49	; 0x31
 1a0:	7a a9       	ldd	r23, Y+50	; 0x32
 1a2:	8b a9       	ldd	r24, Y+51	; 0x33
 1a4:	9c a9       	ldd	r25, Y+52	; 0x34
 1a6:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 1aa:	21 96       	adiw	r28, 0x01	; 1
 1ac:	6c af       	std	Y+60, r22	; 0x3c
 1ae:	7d af       	std	Y+61, r23	; 0x3d
 1b0:	8e af       	std	Y+62, r24	; 0x3e
 1b2:	9f af       	std	Y+63, r25	; 0x3f
 1b4:	21 97       	sbiw	r28, 0x01	; 1
 1b6:	ad ad       	ldd	r26, Y+61	; 0x3d
 1b8:	be ad       	ldd	r27, Y+62	; 0x3e
 1ba:	bb 87       	std	Y+11, r27	; 0x0b
 1bc:	aa 87       	std	Y+10, r26	; 0x0a
		while(__ticks)
 1be:	10 c0       	rjmp	.+32     	; 0x1e0 <main+0x14a>
 1c0:	80 e9       	ldi	r24, 0x90	; 144
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	9d 87       	std	Y+13, r25	; 0x0d
 1c6:	8c 87       	std	Y+12, r24	; 0x0c
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 1c8:	8c 85       	ldd	r24, Y+12	; 0x0c
 1ca:	9d 85       	ldd	r25, Y+13	; 0x0d
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <main+0x136>
 1d0:	9d 87       	std	Y+13, r25	; 0x0d
 1d2:	8c 87       	std	Y+12, r24	; 0x0c
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
 1d4:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1d6:	8a 85       	ldd	r24, Y+10	; 0x0a
 1d8:	9b 85       	ldd	r25, Y+11	; 0x0b
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	9b 87       	std	Y+11, r25	; 0x0b
 1de:	8a 87       	std	Y+10, r24	; 0x0a
		while(__ticks)
 1e0:	8a 85       	ldd	r24, Y+10	; 0x0a
 1e2:	9b 85       	ldd	r25, Y+11	; 0x0b
 1e4:	89 2b       	or	r24, r25
 1e6:	61 f7       	brne	.-40     	; 0x1c0 <main+0x12a>
		}
		return;
 1e8:	1d c0       	rjmp	.+58     	; 0x224 <main+0x18e>
	}
	else
		__ticks = (uint16_t)__tmp;
 1ea:	6e 81       	ldd	r22, Y+6	; 0x06
 1ec:	7f 81       	ldd	r23, Y+7	; 0x07
 1ee:	88 85       	ldd	r24, Y+8	; 0x08
 1f0:	99 85       	ldd	r25, Y+9	; 0x09
 1f2:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 1f6:	25 96       	adiw	r28, 0x05	; 5
 1f8:	6c af       	std	Y+60, r22	; 0x3c
 1fa:	7d af       	std	Y+61, r23	; 0x3d
 1fc:	8e af       	std	Y+62, r24	; 0x3e
 1fe:	9f af       	std	Y+63, r25	; 0x3f
 200:	25 97       	sbiw	r28, 0x05	; 5
 202:	23 96       	adiw	r28, 0x03	; 3
 204:	ee ad       	ldd	r30, Y+62	; 0x3e
 206:	ff ad       	ldd	r31, Y+63	; 0x3f
 208:	23 97       	sbiw	r28, 0x03	; 3
 20a:	fb 87       	std	Y+11, r31	; 0x0b
 20c:	ea 87       	std	Y+10, r30	; 0x0a
 20e:	8a 85       	ldd	r24, Y+10	; 0x0a
 210:	9b 85       	ldd	r25, Y+11	; 0x0b
 212:	9f 87       	std	Y+15, r25	; 0x0f
 214:	8e 87       	std	Y+14, r24	; 0x0e
	__asm__ volatile (
 216:	8e 85       	ldd	r24, Y+14	; 0x0e
 218:	9f 85       	ldd	r25, Y+15	; 0x0f
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <main+0x184>
 21e:	9f 87       	std	Y+15, r25	; 0x0f
 220:	8e 87       	std	Y+14, r24	; 0x0e
}
 222:	00 00       	nop
 224:	65 cf       	rjmp	.-310    	; 0xf0 <main+0x5a>

00000226 <liedspielen>:
        _delay_ms(5000);
    }
    return 0;
}
void liedspielen(int8_t lied[],uint8_t noten)
{
 226:	0f 93       	push	r16
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	cd b7       	in	r28, 0x3d	; 61
 230:	de b7       	in	r29, 0x3e	; 62
 232:	c6 58       	subi	r28, 0x86	; 134
 234:	d1 09       	sbc	r29, r1
 236:	0f b6       	in	r0, 0x3f	; 63
 238:	f8 94       	cli
 23a:	de bf       	out	0x3e, r29	; 62
 23c:	0f be       	out	0x3f, r0	; 63
 23e:	cd bf       	out	0x3d, r28	; 61
 240:	99 ab       	std	Y+49, r25	; 0x31
 242:	88 ab       	std	Y+48, r24	; 0x30
 244:	6a ab       	std	Y+50, r22	; 0x32

    uint8_t i=0;
 246:	19 82       	std	Y+1, r1	; 0x01

    double faktor=1.059463;
 248:	8c e7       	ldi	r24, 0x7C	; 124
 24a:	9c e9       	ldi	r25, 0x9C	; 156
 24c:	a7 e8       	ldi	r26, 0x87	; 135
 24e:	bf e3       	ldi	r27, 0x3F	; 63
 250:	8a 83       	std	Y+2, r24	; 0x02
 252:	9b 83       	std	Y+3, r25	; 0x03
 254:	ac 83       	std	Y+4, r26	; 0x04
 256:	bd 83       	std	Y+5, r27	; 0x05

    for(i=0;i<noten;i++)
 258:	19 82       	std	Y+1, r1	; 0x01
 25a:	76 c2       	rjmp	.+1260   	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
    {
        if(lied[i]==-1)
 25c:	89 81       	ldd	r24, Y+1	; 0x01
 25e:	88 2f       	mov	r24, r24
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	28 a9       	ldd	r18, Y+48	; 0x30
 264:	39 a9       	ldd	r19, Y+49	; 0x31
 266:	82 0f       	add	r24, r18
 268:	93 1f       	adc	r25, r19
 26a:	dc 01       	movw	r26, r24
 26c:	8c 91       	ld	r24, X
 26e:	8f 3f       	cpi	r24, 0xFF	; 255
 270:	09 f0       	breq	.+2      	; 0x274 <liedspielen+0x4e>
 272:	9f c0       	rjmp	.+318    	; 0x3b2 <liedspielen+0x18c>
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	a6 e9       	ldi	r26, 0x96	; 150
 27a:	b3 e4       	ldi	r27, 0x43	; 67
 27c:	8e 83       	std	Y+6, r24	; 0x06
 27e:	9f 83       	std	Y+7, r25	; 0x07
 280:	a8 87       	std	Y+8, r26	; 0x08
 282:	b9 87       	std	Y+9, r27	; 0x09
	__tmp = ((F_CPU) / 4e3) * __ms;
 284:	20 e0       	ldi	r18, 0x00	; 0
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	4a e7       	ldi	r20, 0x7A	; 122
 28a:	55 e4       	ldi	r21, 0x45	; 69
 28c:	6e 81       	ldd	r22, Y+6	; 0x06
 28e:	7f 81       	ldd	r23, Y+7	; 0x07
 290:	88 85       	ldd	r24, Y+8	; 0x08
 292:	99 85       	ldd	r25, Y+9	; 0x09
 294:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 298:	2b 96       	adiw	r28, 0x0b	; 11
 29a:	6c af       	std	Y+60, r22	; 0x3c
 29c:	7d af       	std	Y+61, r23	; 0x3d
 29e:	8e af       	std	Y+62, r24	; 0x3e
 2a0:	9f af       	std	Y+63, r25	; 0x3f
 2a2:	2b 97       	sbiw	r28, 0x0b	; 11
 2a4:	2b 96       	adiw	r28, 0x0b	; 11
 2a6:	2c ad       	ldd	r18, Y+60	; 0x3c
 2a8:	3d ad       	ldd	r19, Y+61	; 0x3d
 2aa:	4e ad       	ldd	r20, Y+62	; 0x3e
 2ac:	5f ad       	ldd	r21, Y+63	; 0x3f
 2ae:	2b 97       	sbiw	r28, 0x0b	; 11
 2b0:	2a 87       	std	Y+10, r18	; 0x0a
 2b2:	3b 87       	std	Y+11, r19	; 0x0b
 2b4:	4c 87       	std	Y+12, r20	; 0x0c
 2b6:	5d 87       	std	Y+13, r21	; 0x0d
	if (__tmp < 1.0)
 2b8:	20 e0       	ldi	r18, 0x00	; 0
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	40 e8       	ldi	r20, 0x80	; 128
 2be:	5f e3       	ldi	r21, 0x3F	; 63
 2c0:	6a 85       	ldd	r22, Y+10	; 0x0a
 2c2:	7b 85       	ldd	r23, Y+11	; 0x0b
 2c4:	8c 85       	ldd	r24, Y+12	; 0x0c
 2c6:	9d 85       	ldd	r25, Y+13	; 0x0d
 2c8:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
 2cc:	88 23       	and	r24, r24
 2ce:	2c f4       	brge	.+10     	; 0x2da <liedspielen+0xb4>
		__ticks = 1;
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	9f 87       	std	Y+15, r25	; 0x0f
 2d6:	8e 87       	std	Y+14, r24	; 0x0e
 2d8:	61 c0       	rjmp	.+194    	; 0x39c <liedspielen+0x176>
	else if (__tmp > 65535)
 2da:	20 e0       	ldi	r18, 0x00	; 0
 2dc:	3f ef       	ldi	r19, 0xFF	; 255
 2de:	4f e7       	ldi	r20, 0x7F	; 127
 2e0:	57 e4       	ldi	r21, 0x47	; 71
 2e2:	6a 85       	ldd	r22, Y+10	; 0x0a
 2e4:	7b 85       	ldd	r23, Y+11	; 0x0b
 2e6:	8c 85       	ldd	r24, Y+12	; 0x0c
 2e8:	9d 85       	ldd	r25, Y+13	; 0x0d
 2ea:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gesf2>
 2ee:	18 16       	cp	r1, r24
 2f0:	0c f0       	brlt	.+2      	; 0x2f4 <liedspielen+0xce>
 2f2:	42 c0       	rjmp	.+132    	; 0x378 <liedspielen+0x152>
		__ticks = (uint16_t) (__ms * 10.0);
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	40 e2       	ldi	r20, 0x20	; 32
 2fa:	51 e4       	ldi	r21, 0x41	; 65
 2fc:	6e 81       	ldd	r22, Y+6	; 0x06
 2fe:	7f 81       	ldd	r23, Y+7	; 0x07
 300:	88 85       	ldd	r24, Y+8	; 0x08
 302:	99 85       	ldd	r25, Y+9	; 0x09
 304:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 308:	2f 96       	adiw	r28, 0x0f	; 15
 30a:	6c af       	std	Y+60, r22	; 0x3c
 30c:	7d af       	std	Y+61, r23	; 0x3d
 30e:	8e af       	std	Y+62, r24	; 0x3e
 310:	9f af       	std	Y+63, r25	; 0x3f
 312:	2f 97       	sbiw	r28, 0x0f	; 15
 314:	2f 96       	adiw	r28, 0x0f	; 15
 316:	8c ad       	ldd	r24, Y+60	; 0x3c
 318:	9d ad       	ldd	r25, Y+61	; 0x3d
 31a:	ae ad       	ldd	r26, Y+62	; 0x3e
 31c:	bf ad       	ldd	r27, Y+63	; 0x3f
 31e:	2f 97       	sbiw	r28, 0x0f	; 15
 320:	8b af       	std	Y+59, r24	; 0x3b
 322:	9c af       	std	Y+60, r25	; 0x3c
 324:	ad af       	std	Y+61, r26	; 0x3d
 326:	be af       	std	Y+62, r27	; 0x3e
 328:	6b ad       	ldd	r22, Y+59	; 0x3b
 32a:	7c ad       	ldd	r23, Y+60	; 0x3c
 32c:	8d ad       	ldd	r24, Y+61	; 0x3d
 32e:	9e ad       	ldd	r25, Y+62	; 0x3e
 330:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 334:	63 96       	adiw	r28, 0x13	; 19
 336:	6c af       	std	Y+60, r22	; 0x3c
 338:	7d af       	std	Y+61, r23	; 0x3d
 33a:	8e af       	std	Y+62, r24	; 0x3e
 33c:	9f af       	std	Y+63, r25	; 0x3f
 33e:	63 97       	sbiw	r28, 0x13	; 19
 340:	61 96       	adiw	r28, 0x11	; 17
 342:	ae ad       	ldd	r26, Y+62	; 0x3e
 344:	bf ad       	ldd	r27, Y+63	; 0x3f
 346:	61 97       	sbiw	r28, 0x11	; 17
 348:	bf 87       	std	Y+15, r27	; 0x0f
 34a:	ae 87       	std	Y+14, r26	; 0x0e
		while(__ticks)
 34c:	10 c0       	rjmp	.+32     	; 0x36e <liedspielen+0x148>
 34e:	80 e9       	ldi	r24, 0x90	; 144
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	99 8b       	std	Y+17, r25	; 0x11
 354:	88 8b       	std	Y+16, r24	; 0x10
	__asm__ volatile (
 356:	88 89       	ldd	r24, Y+16	; 0x10
 358:	99 89       	ldd	r25, Y+17	; 0x11
 35a:	01 97       	sbiw	r24, 0x01	; 1
 35c:	f1 f7       	brne	.-4      	; 0x35a <liedspielen+0x134>
 35e:	99 8b       	std	Y+17, r25	; 0x11
 360:	88 8b       	std	Y+16, r24	; 0x10
}
 362:	00 00       	nop
			__ticks --;
 364:	8e 85       	ldd	r24, Y+14	; 0x0e
 366:	9f 85       	ldd	r25, Y+15	; 0x0f
 368:	01 97       	sbiw	r24, 0x01	; 1
 36a:	9f 87       	std	Y+15, r25	; 0x0f
 36c:	8e 87       	std	Y+14, r24	; 0x0e
		while(__ticks)
 36e:	8e 85       	ldd	r24, Y+14	; 0x0e
 370:	9f 85       	ldd	r25, Y+15	; 0x0f
 372:	89 2b       	or	r24, r25
 374:	61 f7       	brne	.-40     	; 0x34e <liedspielen+0x128>
		return;
 376:	1d c0       	rjmp	.+58     	; 0x3b2 <liedspielen+0x18c>
		__ticks = (uint16_t)__tmp;
 378:	6a 85       	ldd	r22, Y+10	; 0x0a
 37a:	7b 85       	ldd	r23, Y+11	; 0x0b
 37c:	8c 85       	ldd	r24, Y+12	; 0x0c
 37e:	9d 85       	ldd	r25, Y+13	; 0x0d
 380:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 384:	67 96       	adiw	r28, 0x17	; 23
 386:	6c af       	std	Y+60, r22	; 0x3c
 388:	7d af       	std	Y+61, r23	; 0x3d
 38a:	8e af       	std	Y+62, r24	; 0x3e
 38c:	9f af       	std	Y+63, r25	; 0x3f
 38e:	67 97       	sbiw	r28, 0x17	; 23
 390:	65 96       	adiw	r28, 0x15	; 21
 392:	ee ad       	ldd	r30, Y+62	; 0x3e
 394:	ff ad       	ldd	r31, Y+63	; 0x3f
 396:	65 97       	sbiw	r28, 0x15	; 21
 398:	ff 87       	std	Y+15, r31	; 0x0f
 39a:	ee 87       	std	Y+14, r30	; 0x0e
 39c:	8e 85       	ldd	r24, Y+14	; 0x0e
 39e:	9f 85       	ldd	r25, Y+15	; 0x0f
 3a0:	9b 8b       	std	Y+19, r25	; 0x13
 3a2:	8a 8b       	std	Y+18, r24	; 0x12
	__asm__ volatile (
 3a4:	8a 89       	ldd	r24, Y+18	; 0x12
 3a6:	9b 89       	ldd	r25, Y+19	; 0x13
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <liedspielen+0x182>
 3ac:	9b 8b       	std	Y+19, r25	; 0x13
 3ae:	8a 8b       	std	Y+18, r24	; 0x12
}
 3b0:	00 00       	nop
        {
            _delay_ms(300);
        }
        if(lied[i]!=-1)
 3b2:	89 81       	ldd	r24, Y+1	; 0x01
 3b4:	88 2f       	mov	r24, r24
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	28 a9       	ldd	r18, Y+48	; 0x30
 3ba:	39 a9       	ldd	r19, Y+49	; 0x31
 3bc:	82 0f       	add	r24, r18
 3be:	93 1f       	adc	r25, r19
 3c0:	dc 01       	movw	r26, r24
 3c2:	8c 91       	ld	r24, X
 3c4:	8f 3f       	cpi	r24, 0xFF	; 255
 3c6:	09 f4       	brne	.+2      	; 0x3ca <liedspielen+0x1a4>
 3c8:	11 c1       	rjmp	.+546    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
        {
            OCR0A=15625/(440*powh(faktor,lied[i]));
 3ca:	89 81       	ldd	r24, Y+1	; 0x01
 3cc:	88 2f       	mov	r24, r24
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	28 a9       	ldd	r18, Y+48	; 0x30
 3d2:	39 a9       	ldd	r19, Y+49	; 0x31
 3d4:	82 0f       	add	r24, r18
 3d6:	93 1f       	adc	r25, r19
 3d8:	fc 01       	movw	r30, r24
 3da:	80 81       	ld	r24, Z
 3dc:	2a 81       	ldd	r18, Y+2	; 0x02
 3de:	3b 81       	ldd	r19, Y+3	; 0x03
 3e0:	4c 81       	ldd	r20, Y+4	; 0x04
 3e2:	5d 81       	ldd	r21, Y+5	; 0x05
 3e4:	6b 96       	adiw	r28, 0x1b	; 27
 3e6:	2c af       	std	Y+60, r18	; 0x3c
 3e8:	3d af       	std	Y+61, r19	; 0x3d
 3ea:	4e af       	std	Y+62, r20	; 0x3e
 3ec:	5f af       	std	Y+63, r21	; 0x3f
 3ee:	6b 97       	sbiw	r28, 0x1b	; 27
 3f0:	48 2f       	mov	r20, r24
 3f2:	6b 96       	adiw	r28, 0x1b	; 27
 3f4:	6c ad       	ldd	r22, Y+60	; 0x3c
 3f6:	7d ad       	ldd	r23, Y+61	; 0x3d
 3f8:	8e ad       	ldd	r24, Y+62	; 0x3e
 3fa:	9f ad       	ldd	r25, Y+63	; 0x3f
 3fc:	6b 97       	sbiw	r28, 0x1b	; 27
 3fe:	0e 94 b7 03 	call	0x76e	; 0x76e <powh>
 402:	6b ab       	std	Y+51, r22	; 0x33
 404:	7c ab       	std	Y+52, r23	; 0x34
 406:	8d ab       	std	Y+53, r24	; 0x35
 408:	9e ab       	std	Y+54, r25	; 0x36
 40a:	20 e0       	ldi	r18, 0x00	; 0
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	4c ed       	ldi	r20, 0xDC	; 220
 410:	53 e4       	ldi	r21, 0x43	; 67
 412:	6b a9       	ldd	r22, Y+51	; 0x33
 414:	7c a9       	ldd	r23, Y+52	; 0x34
 416:	8d a9       	ldd	r24, Y+53	; 0x35
 418:	9e a9       	ldd	r25, Y+54	; 0x36
 41a:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 41e:	6f 96       	adiw	r28, 0x1f	; 31
 420:	6c af       	std	Y+60, r22	; 0x3c
 422:	7d af       	std	Y+61, r23	; 0x3d
 424:	8e af       	std	Y+62, r24	; 0x3e
 426:	9f af       	std	Y+63, r25	; 0x3f
 428:	6f 97       	sbiw	r28, 0x1f	; 31
 42a:	6f 96       	adiw	r28, 0x1f	; 31
 42c:	8c ad       	ldd	r24, Y+60	; 0x3c
 42e:	9d ad       	ldd	r25, Y+61	; 0x3d
 430:	ae ad       	ldd	r26, Y+62	; 0x3e
 432:	bf ad       	ldd	r27, Y+63	; 0x3f
 434:	6f 97       	sbiw	r28, 0x1f	; 31
 436:	9c 01       	movw	r18, r24
 438:	ad 01       	movw	r20, r26
 43a:	60 e0       	ldi	r22, 0x00	; 0
 43c:	74 e2       	ldi	r23, 0x24	; 36
 43e:	84 e7       	ldi	r24, 0x74	; 116
 440:	96 e4       	ldi	r25, 0x46	; 70
 442:	0e 94 08 04 	call	0x810	; 0x810 <__divsf3>
 446:	a3 96       	adiw	r28, 0x23	; 35
 448:	6c af       	std	Y+60, r22	; 0x3c
 44a:	7d af       	std	Y+61, r23	; 0x3d
 44c:	8e af       	std	Y+62, r24	; 0x3e
 44e:	9f af       	std	Y+63, r25	; 0x3f
 450:	a3 97       	sbiw	r28, 0x23	; 35
 452:	a3 96       	adiw	r28, 0x23	; 35
 454:	8c ad       	ldd	r24, Y+60	; 0x3c
 456:	9d ad       	ldd	r25, Y+61	; 0x3d
 458:	ae ad       	ldd	r26, Y+62	; 0x3e
 45a:	bf ad       	ldd	r27, Y+63	; 0x3f
 45c:	a3 97       	sbiw	r28, 0x23	; 35
 45e:	8f ab       	std	Y+55, r24	; 0x37
 460:	98 af       	std	Y+56, r25	; 0x38
 462:	a9 af       	std	Y+57, r26	; 0x39
 464:	ba af       	std	Y+58, r27	; 0x3a
 466:	07 e4       	ldi	r16, 0x47	; 71
 468:	10 e0       	ldi	r17, 0x00	; 0
 46a:	6f a9       	ldd	r22, Y+55	; 0x37
 46c:	78 ad       	ldd	r23, Y+56	; 0x38
 46e:	89 ad       	ldd	r24, Y+57	; 0x39
 470:	9a ad       	ldd	r25, Y+58	; 0x3a
 472:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 476:	a7 96       	adiw	r28, 0x27	; 39
 478:	6c af       	std	Y+60, r22	; 0x3c
 47a:	7d af       	std	Y+61, r23	; 0x3d
 47c:	8e af       	std	Y+62, r24	; 0x3e
 47e:	9f af       	std	Y+63, r25	; 0x3f
 480:	a7 97       	sbiw	r28, 0x27	; 39
 482:	a4 96       	adiw	r28, 0x24	; 36
 484:	8f ad       	ldd	r24, Y+63	; 0x3f
 486:	a4 97       	sbiw	r28, 0x24	; 36
 488:	d8 01       	movw	r26, r16
 48a:	8c 93       	st	X, r24
            TCCR0B|=0b101;
 48c:	85 e4       	ldi	r24, 0x45	; 69
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	fc 01       	movw	r30, r24
 492:	20 81       	ld	r18, Z
 494:	85 e4       	ldi	r24, 0x45	; 69
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	25 60       	ori	r18, 0x05	; 5
 49a:	dc 01       	movw	r26, r24
 49c:	2c 93       	st	X, r18
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	a6 e9       	ldi	r26, 0x96	; 150
 4a4:	b3 e4       	ldi	r27, 0x43	; 67
 4a6:	8c 8b       	std	Y+20, r24	; 0x14
 4a8:	9d 8b       	std	Y+21, r25	; 0x15
 4aa:	ae 8b       	std	Y+22, r26	; 0x16
 4ac:	bf 8b       	std	Y+23, r27	; 0x17
	__tmp = ((F_CPU) / 4e3) * __ms;
 4ae:	20 e0       	ldi	r18, 0x00	; 0
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	4a e7       	ldi	r20, 0x7A	; 122
 4b4:	55 e4       	ldi	r21, 0x45	; 69
 4b6:	6c 89       	ldd	r22, Y+20	; 0x14
 4b8:	7d 89       	ldd	r23, Y+21	; 0x15
 4ba:	8e 89       	ldd	r24, Y+22	; 0x16
 4bc:	9f 89       	ldd	r25, Y+23	; 0x17
 4be:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 4c2:	ab 96       	adiw	r28, 0x2b	; 43
 4c4:	6c af       	std	Y+60, r22	; 0x3c
 4c6:	7d af       	std	Y+61, r23	; 0x3d
 4c8:	8e af       	std	Y+62, r24	; 0x3e
 4ca:	9f af       	std	Y+63, r25	; 0x3f
 4cc:	ab 97       	sbiw	r28, 0x2b	; 43
 4ce:	ab 96       	adiw	r28, 0x2b	; 43
 4d0:	2c ad       	ldd	r18, Y+60	; 0x3c
 4d2:	3d ad       	ldd	r19, Y+61	; 0x3d
 4d4:	4e ad       	ldd	r20, Y+62	; 0x3e
 4d6:	5f ad       	ldd	r21, Y+63	; 0x3f
 4d8:	ab 97       	sbiw	r28, 0x2b	; 43
 4da:	28 8f       	std	Y+24, r18	; 0x18
 4dc:	39 8f       	std	Y+25, r19	; 0x19
 4de:	4a 8f       	std	Y+26, r20	; 0x1a
 4e0:	5b 8f       	std	Y+27, r21	; 0x1b
	if (__tmp < 1.0)
 4e2:	20 e0       	ldi	r18, 0x00	; 0
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	40 e8       	ldi	r20, 0x80	; 128
 4e8:	5f e3       	ldi	r21, 0x3F	; 63
 4ea:	68 8d       	ldd	r22, Y+24	; 0x18
 4ec:	79 8d       	ldd	r23, Y+25	; 0x19
 4ee:	8a 8d       	ldd	r24, Y+26	; 0x1a
 4f0:	9b 8d       	ldd	r25, Y+27	; 0x1b
 4f2:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
 4f6:	88 23       	and	r24, r24
 4f8:	2c f4       	brge	.+10     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
		__ticks = 1;
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	9d 8f       	std	Y+29, r25	; 0x1d
 500:	8c 8f       	std	Y+28, r24	; 0x1c
 502:	65 c0       	rjmp	.+202    	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
	else if (__tmp > 65535)
 504:	20 e0       	ldi	r18, 0x00	; 0
 506:	3f ef       	ldi	r19, 0xFF	; 255
 508:	4f e7       	ldi	r20, 0x7F	; 127
 50a:	57 e4       	ldi	r21, 0x47	; 71
 50c:	68 8d       	ldd	r22, Y+24	; 0x18
 50e:	79 8d       	ldd	r23, Y+25	; 0x19
 510:	8a 8d       	ldd	r24, Y+26	; 0x1a
 512:	9b 8d       	ldd	r25, Y+27	; 0x1b
 514:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gesf2>
 518:	18 16       	cp	r1, r24
 51a:	0c f0       	brlt	.+2      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 51c:	46 c0       	rjmp	.+140    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
		__ticks = (uint16_t) (__ms * 10.0);
 51e:	20 e0       	ldi	r18, 0x00	; 0
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	40 e2       	ldi	r20, 0x20	; 32
 524:	51 e4       	ldi	r21, 0x41	; 65
 526:	6c 89       	ldd	r22, Y+20	; 0x14
 528:	7d 89       	ldd	r23, Y+21	; 0x15
 52a:	8e 89       	ldd	r24, Y+22	; 0x16
 52c:	9f 89       	ldd	r25, Y+23	; 0x17
 52e:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 532:	af 96       	adiw	r28, 0x2f	; 47
 534:	6c af       	std	Y+60, r22	; 0x3c
 536:	7d af       	std	Y+61, r23	; 0x3d
 538:	8e af       	std	Y+62, r24	; 0x3e
 53a:	9f af       	std	Y+63, r25	; 0x3f
 53c:	af 97       	sbiw	r28, 0x2f	; 47
 53e:	af 96       	adiw	r28, 0x2f	; 47
 540:	8c ad       	ldd	r24, Y+60	; 0x3c
 542:	9d ad       	ldd	r25, Y+61	; 0x3d
 544:	ae ad       	ldd	r26, Y+62	; 0x3e
 546:	bf ad       	ldd	r27, Y+63	; 0x3f
 548:	af 97       	sbiw	r28, 0x2f	; 47
 54a:	23 96       	adiw	r28, 0x03	; 3
 54c:	8c af       	std	Y+60, r24	; 0x3c
 54e:	9d af       	std	Y+61, r25	; 0x3d
 550:	ae af       	std	Y+62, r26	; 0x3e
 552:	bf af       	std	Y+63, r27	; 0x3f
 554:	23 97       	sbiw	r28, 0x03	; 3
 556:	23 96       	adiw	r28, 0x03	; 3
 558:	6c ad       	ldd	r22, Y+60	; 0x3c
 55a:	7d ad       	ldd	r23, Y+61	; 0x3d
 55c:	8e ad       	ldd	r24, Y+62	; 0x3e
 55e:	9f ad       	ldd	r25, Y+63	; 0x3f
 560:	23 97       	sbiw	r28, 0x03	; 3
 562:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 566:	e3 96       	adiw	r28, 0x33	; 51
 568:	6c af       	std	Y+60, r22	; 0x3c
 56a:	7d af       	std	Y+61, r23	; 0x3d
 56c:	8e af       	std	Y+62, r24	; 0x3e
 56e:	9f af       	std	Y+63, r25	; 0x3f
 570:	e3 97       	sbiw	r28, 0x33	; 51
 572:	e1 96       	adiw	r28, 0x31	; 49
 574:	ae ad       	ldd	r26, Y+62	; 0x3e
 576:	bf ad       	ldd	r27, Y+63	; 0x3f
 578:	e1 97       	sbiw	r28, 0x31	; 49
 57a:	bd 8f       	std	Y+29, r27	; 0x1d
 57c:	ac 8f       	std	Y+28, r26	; 0x1c
		while(__ticks)
 57e:	10 c0       	rjmp	.+32     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 580:	80 e9       	ldi	r24, 0x90	; 144
 582:	91 e0       	ldi	r25, 0x01	; 1
 584:	9f 8f       	std	Y+31, r25	; 0x1f
 586:	8e 8f       	std	Y+30, r24	; 0x1e
	__asm__ volatile (
 588:	8e 8d       	ldd	r24, Y+30	; 0x1e
 58a:	9f 8d       	ldd	r25, Y+31	; 0x1f
 58c:	01 97       	sbiw	r24, 0x01	; 1
 58e:	f1 f7       	brne	.-4      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 590:	9f 8f       	std	Y+31, r25	; 0x1f
 592:	8e 8f       	std	Y+30, r24	; 0x1e
}
 594:	00 00       	nop
			__ticks --;
 596:	8c 8d       	ldd	r24, Y+28	; 0x1c
 598:	9d 8d       	ldd	r25, Y+29	; 0x1d
 59a:	01 97       	sbiw	r24, 0x01	; 1
 59c:	9d 8f       	std	Y+29, r25	; 0x1d
 59e:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
 5a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
 5a2:	9d 8d       	ldd	r25, Y+29	; 0x1d
 5a4:	89 2b       	or	r24, r25
 5a6:	61 f7       	brne	.-40     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
		return;
 5a8:	1d c0       	rjmp	.+58     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
		__ticks = (uint16_t)__tmp;
 5aa:	68 8d       	ldd	r22, Y+24	; 0x18
 5ac:	79 8d       	ldd	r23, Y+25	; 0x19
 5ae:	8a 8d       	ldd	r24, Y+26	; 0x1a
 5b0:	9b 8d       	ldd	r25, Y+27	; 0x1b
 5b2:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 5b6:	e7 96       	adiw	r28, 0x37	; 55
 5b8:	6c af       	std	Y+60, r22	; 0x3c
 5ba:	7d af       	std	Y+61, r23	; 0x3d
 5bc:	8e af       	std	Y+62, r24	; 0x3e
 5be:	9f af       	std	Y+63, r25	; 0x3f
 5c0:	e7 97       	sbiw	r28, 0x37	; 55
 5c2:	e5 96       	adiw	r28, 0x35	; 53
 5c4:	ee ad       	ldd	r30, Y+62	; 0x3e
 5c6:	ff ad       	ldd	r31, Y+63	; 0x3f
 5c8:	e5 97       	sbiw	r28, 0x35	; 53
 5ca:	fd 8f       	std	Y+29, r31	; 0x1d
 5cc:	ec 8f       	std	Y+28, r30	; 0x1c
 5ce:	8c 8d       	ldd	r24, Y+28	; 0x1c
 5d0:	9d 8d       	ldd	r25, Y+29	; 0x1d
 5d2:	99 a3       	std	Y+33, r25	; 0x21
 5d4:	88 a3       	std	Y+32, r24	; 0x20
	__asm__ volatile (
 5d6:	88 a1       	ldd	r24, Y+32	; 0x20
 5d8:	99 a1       	ldd	r25, Y+33	; 0x21
 5da:	01 97       	sbiw	r24, 0x01	; 1
 5dc:	f1 f7       	brne	.-4      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5de:	99 a3       	std	Y+33, r25	; 0x21
 5e0:	88 a3       	std	Y+32, r24	; 0x20
}
 5e2:	00 00       	nop
            _delay_ms(300);
            TCCR0B=0;
 5e4:	85 e4       	ldi	r24, 0x45	; 69
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	dc 01       	movw	r26, r24
 5ea:	1c 92       	st	X, r1
 5ec:	80 e0       	ldi	r24, 0x00	; 0
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	a8 ec       	ldi	r26, 0xC8	; 200
 5f2:	b2 e4       	ldi	r27, 0x42	; 66
 5f4:	8a a3       	std	Y+34, r24	; 0x22
 5f6:	9b a3       	std	Y+35, r25	; 0x23
 5f8:	ac a3       	std	Y+36, r26	; 0x24
 5fa:	bd a3       	std	Y+37, r27	; 0x25
	__tmp = ((F_CPU) / 4e3) * __ms;
 5fc:	20 e0       	ldi	r18, 0x00	; 0
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	4a e7       	ldi	r20, 0x7A	; 122
 602:	55 e4       	ldi	r21, 0x45	; 69
 604:	6a a1       	ldd	r22, Y+34	; 0x22
 606:	7b a1       	ldd	r23, Y+35	; 0x23
 608:	8c a1       	ldd	r24, Y+36	; 0x24
 60a:	9d a1       	ldd	r25, Y+37	; 0x25
 60c:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 610:	eb 96       	adiw	r28, 0x3b	; 59
 612:	6c af       	std	Y+60, r22	; 0x3c
 614:	7d af       	std	Y+61, r23	; 0x3d
 616:	8e af       	std	Y+62, r24	; 0x3e
 618:	9f af       	std	Y+63, r25	; 0x3f
 61a:	eb 97       	sbiw	r28, 0x3b	; 59
 61c:	eb 96       	adiw	r28, 0x3b	; 59
 61e:	2c ad       	ldd	r18, Y+60	; 0x3c
 620:	3d ad       	ldd	r19, Y+61	; 0x3d
 622:	4e ad       	ldd	r20, Y+62	; 0x3e
 624:	5f ad       	ldd	r21, Y+63	; 0x3f
 626:	eb 97       	sbiw	r28, 0x3b	; 59
 628:	2e a3       	std	Y+38, r18	; 0x26
 62a:	3f a3       	std	Y+39, r19	; 0x27
 62c:	48 a7       	std	Y+40, r20	; 0x28
 62e:	59 a7       	std	Y+41, r21	; 0x29
	if (__tmp < 1.0)
 630:	20 e0       	ldi	r18, 0x00	; 0
 632:	30 e0       	ldi	r19, 0x00	; 0
 634:	40 e8       	ldi	r20, 0x80	; 128
 636:	5f e3       	ldi	r21, 0x3F	; 63
 638:	6e a1       	ldd	r22, Y+38	; 0x26
 63a:	7f a1       	ldd	r23, Y+39	; 0x27
 63c:	88 a5       	ldd	r24, Y+40	; 0x28
 63e:	99 a5       	ldd	r25, Y+41	; 0x29
 640:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
 644:	88 23       	and	r24, r24
 646:	2c f4       	brge	.+10     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
		__ticks = 1;
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	9b a7       	std	Y+43, r25	; 0x2b
 64e:	8a a7       	std	Y+42, r24	; 0x2a
 650:	6d c0       	rjmp	.+218    	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
	else if (__tmp > 65535)
 652:	20 e0       	ldi	r18, 0x00	; 0
 654:	3f ef       	ldi	r19, 0xFF	; 255
 656:	4f e7       	ldi	r20, 0x7F	; 127
 658:	57 e4       	ldi	r21, 0x47	; 71
 65a:	6e a1       	ldd	r22, Y+38	; 0x26
 65c:	7f a1       	ldd	r23, Y+39	; 0x27
 65e:	88 a5       	ldd	r24, Y+40	; 0x28
 660:	99 a5       	ldd	r25, Y+41	; 0x29
 662:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gesf2>
 666:	18 16       	cp	r1, r24
 668:	0c f0       	brlt	.+2      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 66a:	4a c0       	rjmp	.+148    	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
		__ticks = (uint16_t) (__ms * 10.0);
 66c:	20 e0       	ldi	r18, 0x00	; 0
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	40 e2       	ldi	r20, 0x20	; 32
 672:	51 e4       	ldi	r21, 0x41	; 65
 674:	6a a1       	ldd	r22, Y+34	; 0x22
 676:	7b a1       	ldd	r23, Y+35	; 0x23
 678:	8c a1       	ldd	r24, Y+36	; 0x24
 67a:	9d a1       	ldd	r25, Y+37	; 0x25
 67c:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 680:	ef 96       	adiw	r28, 0x3f	; 63
 682:	6c af       	std	Y+60, r22	; 0x3c
 684:	7d af       	std	Y+61, r23	; 0x3d
 686:	8e af       	std	Y+62, r24	; 0x3e
 688:	9f af       	std	Y+63, r25	; 0x3f
 68a:	ef 97       	sbiw	r28, 0x3f	; 63
 68c:	ef 96       	adiw	r28, 0x3f	; 63
 68e:	8c ad       	ldd	r24, Y+60	; 0x3c
 690:	9d ad       	ldd	r25, Y+61	; 0x3d
 692:	ae ad       	ldd	r26, Y+62	; 0x3e
 694:	bf ad       	ldd	r27, Y+63	; 0x3f
 696:	ef 97       	sbiw	r28, 0x3f	; 63
 698:	27 96       	adiw	r28, 0x07	; 7
 69a:	8c af       	std	Y+60, r24	; 0x3c
 69c:	9d af       	std	Y+61, r25	; 0x3d
 69e:	ae af       	std	Y+62, r26	; 0x3e
 6a0:	bf af       	std	Y+63, r27	; 0x3f
 6a2:	27 97       	sbiw	r28, 0x07	; 7
 6a4:	27 96       	adiw	r28, 0x07	; 7
 6a6:	6c ad       	ldd	r22, Y+60	; 0x3c
 6a8:	7d ad       	ldd	r23, Y+61	; 0x3d
 6aa:	8e ad       	ldd	r24, Y+62	; 0x3e
 6ac:	9f ad       	ldd	r25, Y+63	; 0x3f
 6ae:	27 97       	sbiw	r28, 0x07	; 7
 6b0:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 6b4:	c1 58       	subi	r28, 0x81	; 129
 6b6:	df 4f       	sbci	r29, 0xFF	; 255
 6b8:	68 83       	st	Y, r22
 6ba:	79 83       	std	Y+1, r23	; 0x01
 6bc:	8a 83       	std	Y+2, r24	; 0x02
 6be:	9b 83       	std	Y+3, r25	; 0x03
 6c0:	cf 57       	subi	r28, 0x7F	; 127
 6c2:	d0 40       	sbci	r29, 0x00	; 0
 6c4:	c1 58       	subi	r28, 0x81	; 129
 6c6:	df 4f       	sbci	r29, 0xFF	; 255
 6c8:	a8 81       	ld	r26, Y
 6ca:	b9 81       	ldd	r27, Y+1	; 0x01
 6cc:	cf 57       	subi	r28, 0x7F	; 127
 6ce:	d0 40       	sbci	r29, 0x00	; 0
 6d0:	bb a7       	std	Y+43, r27	; 0x2b
 6d2:	aa a7       	std	Y+42, r26	; 0x2a
		while(__ticks)
 6d4:	10 c0       	rjmp	.+32     	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6d6:	80 e9       	ldi	r24, 0x90	; 144
 6d8:	91 e0       	ldi	r25, 0x01	; 1
 6da:	9d a7       	std	Y+45, r25	; 0x2d
 6dc:	8c a7       	std	Y+44, r24	; 0x2c
	__asm__ volatile (
 6de:	8c a5       	ldd	r24, Y+44	; 0x2c
 6e0:	9d a5       	ldd	r25, Y+45	; 0x2d
 6e2:	01 97       	sbiw	r24, 0x01	; 1
 6e4:	f1 f7       	brne	.-4      	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6e6:	9d a7       	std	Y+45, r25	; 0x2d
 6e8:	8c a7       	std	Y+44, r24	; 0x2c
}
 6ea:	00 00       	nop
			__ticks --;
 6ec:	8a a5       	ldd	r24, Y+42	; 0x2a
 6ee:	9b a5       	ldd	r25, Y+43	; 0x2b
 6f0:	01 97       	sbiw	r24, 0x01	; 1
 6f2:	9b a7       	std	Y+43, r25	; 0x2b
 6f4:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
 6f6:	8a a5       	ldd	r24, Y+42	; 0x2a
 6f8:	9b a5       	ldd	r25, Y+43	; 0x2b
 6fa:	89 2b       	or	r24, r25
 6fc:	61 f7       	brne	.-40     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
		return;
 6fe:	21 c0       	rjmp	.+66     	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
		__ticks = (uint16_t)__tmp;
 700:	6e a1       	ldd	r22, Y+38	; 0x26
 702:	7f a1       	ldd	r23, Y+39	; 0x27
 704:	88 a5       	ldd	r24, Y+40	; 0x28
 706:	99 a5       	ldd	r25, Y+41	; 0x29
 708:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixunssfsi>
 70c:	cd 57       	subi	r28, 0x7D	; 125
 70e:	df 4f       	sbci	r29, 0xFF	; 255
 710:	68 83       	st	Y, r22
 712:	79 83       	std	Y+1, r23	; 0x01
 714:	8a 83       	std	Y+2, r24	; 0x02
 716:	9b 83       	std	Y+3, r25	; 0x03
 718:	c3 58       	subi	r28, 0x83	; 131
 71a:	d0 40       	sbci	r29, 0x00	; 0
 71c:	cd 57       	subi	r28, 0x7D	; 125
 71e:	df 4f       	sbci	r29, 0xFF	; 255
 720:	e8 81       	ld	r30, Y
 722:	f9 81       	ldd	r31, Y+1	; 0x01
 724:	c3 58       	subi	r28, 0x83	; 131
 726:	d0 40       	sbci	r29, 0x00	; 0
 728:	fb a7       	std	Y+43, r31	; 0x2b
 72a:	ea a7       	std	Y+42, r30	; 0x2a
 72c:	8a a5       	ldd	r24, Y+42	; 0x2a
 72e:	9b a5       	ldd	r25, Y+43	; 0x2b
 730:	9f a7       	std	Y+47, r25	; 0x2f
 732:	8e a7       	std	Y+46, r24	; 0x2e
	__asm__ volatile (
 734:	8e a5       	ldd	r24, Y+46	; 0x2e
 736:	9f a5       	ldd	r25, Y+47	; 0x2f
 738:	01 97       	sbiw	r24, 0x01	; 1
 73a:	f1 f7       	brne	.-4      	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 73c:	9f a7       	std	Y+47, r25	; 0x2f
 73e:	8e a7       	std	Y+46, r24	; 0x2e
}
 740:	00 00       	nop
    for(i=0;i<noten;i++)
 742:	89 81       	ldd	r24, Y+1	; 0x01
 744:	8f 5f       	subi	r24, 0xFF	; 255
 746:	89 83       	std	Y+1, r24	; 0x01
 748:	99 81       	ldd	r25, Y+1	; 0x01
 74a:	8a a9       	ldd	r24, Y+50	; 0x32
 74c:	98 17       	cp	r25, r24
 74e:	08 f4       	brcc	.+2      	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 750:	85 cd       	rjmp	.-1270   	; 0x25c <liedspielen+0x36>
        }
        _delay_ms(100);
    }
}
 752:	00 00       	nop
 754:	00 00       	nop
 756:	ca 57       	subi	r28, 0x7A	; 122
 758:	df 4f       	sbci	r29, 0xFF	; 255
 75a:	0f b6       	in	r0, 0x3f	; 63
 75c:	f8 94       	cli
 75e:	de bf       	out	0x3e, r29	; 62
 760:	0f be       	out	0x3f, r0	; 63
 762:	cd bf       	out	0x3d, r28	; 61
 764:	df 91       	pop	r29
 766:	cf 91       	pop	r28
 768:	1f 91       	pop	r17
 76a:	0f 91       	pop	r16
 76c:	08 95       	ret

0000076e <powh>:
double powh(double basis,uint8_t exponent)
{
 76e:	cf 93       	push	r28
 770:	df 93       	push	r29
 772:	cd b7       	in	r28, 0x3d	; 61
 774:	de b7       	in	r29, 0x3e	; 62
 776:	62 97       	sbiw	r28, 0x12	; 18
 778:	0f b6       	in	r0, 0x3f	; 63
 77a:	f8 94       	cli
 77c:	de bf       	out	0x3e, r29	; 62
 77e:	0f be       	out	0x3f, r0	; 63
 780:	cd bf       	out	0x3d, r28	; 61
 782:	6e 83       	std	Y+6, r22	; 0x06
 784:	7f 83       	std	Y+7, r23	; 0x07
 786:	88 87       	std	Y+8, r24	; 0x08
 788:	99 87       	std	Y+9, r25	; 0x09
 78a:	4a 87       	std	Y+10, r20	; 0x0a
    uint8_t i;
    double ret=basis;
 78c:	8e 81       	ldd	r24, Y+6	; 0x06
 78e:	9f 81       	ldd	r25, Y+7	; 0x07
 790:	a8 85       	ldd	r26, Y+8	; 0x08
 792:	b9 85       	ldd	r27, Y+9	; 0x09
 794:	8a 83       	std	Y+2, r24	; 0x02
 796:	9b 83       	std	Y+3, r25	; 0x03
 798:	ac 83       	std	Y+4, r26	; 0x04
 79a:	bd 83       	std	Y+5, r27	; 0x05
    for(i=1;i<exponent;i++)
 79c:	81 e0       	ldi	r24, 0x01	; 1
 79e:	89 83       	std	Y+1, r24	; 0x01
 7a0:	19 c0       	rjmp	.+50     	; 0x7d4 <powh+0x66>
    {
        ret*=basis;
 7a2:	2e 81       	ldd	r18, Y+6	; 0x06
 7a4:	3f 81       	ldd	r19, Y+7	; 0x07
 7a6:	48 85       	ldd	r20, Y+8	; 0x08
 7a8:	59 85       	ldd	r21, Y+9	; 0x09
 7aa:	6a 81       	ldd	r22, Y+2	; 0x02
 7ac:	7b 81       	ldd	r23, Y+3	; 0x03
 7ae:	8c 81       	ldd	r24, Y+4	; 0x04
 7b0:	9d 81       	ldd	r25, Y+5	; 0x05
 7b2:	0e 94 23 05 	call	0xa46	; 0xa46 <__mulsf3>
 7b6:	6f 87       	std	Y+15, r22	; 0x0f
 7b8:	78 8b       	std	Y+16, r23	; 0x10
 7ba:	89 8b       	std	Y+17, r24	; 0x11
 7bc:	9a 8b       	std	Y+18, r25	; 0x12
 7be:	8f 85       	ldd	r24, Y+15	; 0x0f
 7c0:	98 89       	ldd	r25, Y+16	; 0x10
 7c2:	a9 89       	ldd	r26, Y+17	; 0x11
 7c4:	ba 89       	ldd	r27, Y+18	; 0x12
 7c6:	8a 83       	std	Y+2, r24	; 0x02
 7c8:	9b 83       	std	Y+3, r25	; 0x03
 7ca:	ac 83       	std	Y+4, r26	; 0x04
 7cc:	bd 83       	std	Y+5, r27	; 0x05
    for(i=1;i<exponent;i++)
 7ce:	89 81       	ldd	r24, Y+1	; 0x01
 7d0:	8f 5f       	subi	r24, 0xFF	; 255
 7d2:	89 83       	std	Y+1, r24	; 0x01
 7d4:	99 81       	ldd	r25, Y+1	; 0x01
 7d6:	8a 85       	ldd	r24, Y+10	; 0x0a
 7d8:	98 17       	cp	r25, r24
 7da:	18 f3       	brcs	.-58     	; 0x7a2 <powh+0x34>
    }
    return ret;
 7dc:	8a 81       	ldd	r24, Y+2	; 0x02
 7de:	9b 81       	ldd	r25, Y+3	; 0x03
 7e0:	ac 81       	ldd	r26, Y+4	; 0x04
 7e2:	bd 81       	ldd	r27, Y+5	; 0x05
 7e4:	8b 87       	std	Y+11, r24	; 0x0b
 7e6:	9c 87       	std	Y+12, r25	; 0x0c
 7e8:	ad 87       	std	Y+13, r26	; 0x0d
 7ea:	be 87       	std	Y+14, r27	; 0x0e
}
 7ec:	6b 85       	ldd	r22, Y+11	; 0x0b
 7ee:	7c 85       	ldd	r23, Y+12	; 0x0c
 7f0:	8d 85       	ldd	r24, Y+13	; 0x0d
 7f2:	9e 85       	ldd	r25, Y+14	; 0x0e
 7f4:	62 96       	adiw	r28, 0x12	; 18
 7f6:	0f b6       	in	r0, 0x3f	; 63
 7f8:	f8 94       	cli
 7fa:	de bf       	out	0x3e, r29	; 62
 7fc:	0f be       	out	0x3f, r0	; 63
 7fe:	cd bf       	out	0x3d, r28	; 61
 800:	df 91       	pop	r29
 802:	cf 91       	pop	r28
 804:	08 95       	ret

00000806 <__cmpsf2>:
 806:	0e 94 a9 04 	call	0x952	; 0x952 <__fp_cmp>
 80a:	08 f4       	brcc	.+2      	; 0x80e <__cmpsf2+0x8>
 80c:	81 e0       	ldi	r24, 0x01	; 1
 80e:	08 95       	ret

00000810 <__divsf3>:
 810:	0e 94 1c 04 	call	0x838	; 0x838 <__divsf3x>
 814:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_round>
 818:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__fp_pscB>
 81c:	58 f0       	brcs	.+22     	; 0x834 <__divsf3+0x24>
 81e:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__fp_pscA>
 822:	40 f0       	brcs	.+16     	; 0x834 <__divsf3+0x24>
 824:	29 f4       	brne	.+10     	; 0x830 <__divsf3+0x20>
 826:	5f 3f       	cpi	r21, 0xFF	; 255
 828:	29 f0       	breq	.+10     	; 0x834 <__divsf3+0x24>
 82a:	0c 94 cd 04 	jmp	0x99a	; 0x99a <__fp_inf>
 82e:	51 11       	cpse	r21, r1
 830:	0c 94 18 05 	jmp	0xa30	; 0xa30 <__fp_szero>
 834:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__fp_nan>

00000838 <__divsf3x>:
 838:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__fp_split3>
 83c:	68 f3       	brcs	.-38     	; 0x818 <__divsf3+0x8>

0000083e <__divsf3_pse>:
 83e:	99 23       	and	r25, r25
 840:	b1 f3       	breq	.-20     	; 0x82e <__divsf3+0x1e>
 842:	55 23       	and	r21, r21
 844:	91 f3       	breq	.-28     	; 0x82a <__divsf3+0x1a>
 846:	95 1b       	sub	r25, r21
 848:	55 0b       	sbc	r21, r21
 84a:	bb 27       	eor	r27, r27
 84c:	aa 27       	eor	r26, r26
 84e:	62 17       	cp	r22, r18
 850:	73 07       	cpc	r23, r19
 852:	84 07       	cpc	r24, r20
 854:	38 f0       	brcs	.+14     	; 0x864 <__divsf3_pse+0x26>
 856:	9f 5f       	subi	r25, 0xFF	; 255
 858:	5f 4f       	sbci	r21, 0xFF	; 255
 85a:	22 0f       	add	r18, r18
 85c:	33 1f       	adc	r19, r19
 85e:	44 1f       	adc	r20, r20
 860:	aa 1f       	adc	r26, r26
 862:	a9 f3       	breq	.-22     	; 0x84e <__divsf3_pse+0x10>
 864:	35 d0       	rcall	.+106    	; 0x8d0 <__divsf3_pse+0x92>
 866:	0e 2e       	mov	r0, r30
 868:	3a f0       	brmi	.+14     	; 0x878 <__divsf3_pse+0x3a>
 86a:	e0 e8       	ldi	r30, 0x80	; 128
 86c:	32 d0       	rcall	.+100    	; 0x8d2 <__divsf3_pse+0x94>
 86e:	91 50       	subi	r25, 0x01	; 1
 870:	50 40       	sbci	r21, 0x00	; 0
 872:	e6 95       	lsr	r30
 874:	00 1c       	adc	r0, r0
 876:	ca f7       	brpl	.-14     	; 0x86a <__divsf3_pse+0x2c>
 878:	2b d0       	rcall	.+86     	; 0x8d0 <__divsf3_pse+0x92>
 87a:	fe 2f       	mov	r31, r30
 87c:	29 d0       	rcall	.+82     	; 0x8d0 <__divsf3_pse+0x92>
 87e:	66 0f       	add	r22, r22
 880:	77 1f       	adc	r23, r23
 882:	88 1f       	adc	r24, r24
 884:	bb 1f       	adc	r27, r27
 886:	26 17       	cp	r18, r22
 888:	37 07       	cpc	r19, r23
 88a:	48 07       	cpc	r20, r24
 88c:	ab 07       	cpc	r26, r27
 88e:	b0 e8       	ldi	r27, 0x80	; 128
 890:	09 f0       	breq	.+2      	; 0x894 <__divsf3_pse+0x56>
 892:	bb 0b       	sbc	r27, r27
 894:	80 2d       	mov	r24, r0
 896:	bf 01       	movw	r22, r30
 898:	ff 27       	eor	r31, r31
 89a:	93 58       	subi	r25, 0x83	; 131
 89c:	5f 4f       	sbci	r21, 0xFF	; 255
 89e:	3a f0       	brmi	.+14     	; 0x8ae <__divsf3_pse+0x70>
 8a0:	9e 3f       	cpi	r25, 0xFE	; 254
 8a2:	51 05       	cpc	r21, r1
 8a4:	78 f0       	brcs	.+30     	; 0x8c4 <__divsf3_pse+0x86>
 8a6:	0c 94 cd 04 	jmp	0x99a	; 0x99a <__fp_inf>
 8aa:	0c 94 18 05 	jmp	0xa30	; 0xa30 <__fp_szero>
 8ae:	5f 3f       	cpi	r21, 0xFF	; 255
 8b0:	e4 f3       	brlt	.-8      	; 0x8aa <__divsf3_pse+0x6c>
 8b2:	98 3e       	cpi	r25, 0xE8	; 232
 8b4:	d4 f3       	brlt	.-12     	; 0x8aa <__divsf3_pse+0x6c>
 8b6:	86 95       	lsr	r24
 8b8:	77 95       	ror	r23
 8ba:	67 95       	ror	r22
 8bc:	b7 95       	ror	r27
 8be:	f7 95       	ror	r31
 8c0:	9f 5f       	subi	r25, 0xFF	; 255
 8c2:	c9 f7       	brne	.-14     	; 0x8b6 <__divsf3_pse+0x78>
 8c4:	88 0f       	add	r24, r24
 8c6:	91 1d       	adc	r25, r1
 8c8:	96 95       	lsr	r25
 8ca:	87 95       	ror	r24
 8cc:	97 f9       	bld	r25, 7
 8ce:	08 95       	ret
 8d0:	e1 e0       	ldi	r30, 0x01	; 1
 8d2:	66 0f       	add	r22, r22
 8d4:	77 1f       	adc	r23, r23
 8d6:	88 1f       	adc	r24, r24
 8d8:	bb 1f       	adc	r27, r27
 8da:	62 17       	cp	r22, r18
 8dc:	73 07       	cpc	r23, r19
 8de:	84 07       	cpc	r24, r20
 8e0:	ba 07       	cpc	r27, r26
 8e2:	20 f0       	brcs	.+8      	; 0x8ec <__divsf3_pse+0xae>
 8e4:	62 1b       	sub	r22, r18
 8e6:	73 0b       	sbc	r23, r19
 8e8:	84 0b       	sbc	r24, r20
 8ea:	ba 0b       	sbc	r27, r26
 8ec:	ee 1f       	adc	r30, r30
 8ee:	88 f7       	brcc	.-30     	; 0x8d2 <__divsf3_pse+0x94>
 8f0:	e0 95       	com	r30
 8f2:	08 95       	ret

000008f4 <__fixunssfsi>:
 8f4:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__fp_splitA>
 8f8:	88 f0       	brcs	.+34     	; 0x91c <__stack+0x1d>
 8fa:	9f 57       	subi	r25, 0x7F	; 127
 8fc:	98 f0       	brcs	.+38     	; 0x924 <__stack+0x25>
 8fe:	b9 2f       	mov	r27, r25
 900:	99 27       	eor	r25, r25
 902:	b7 51       	subi	r27, 0x17	; 23
 904:	b0 f0       	brcs	.+44     	; 0x932 <__stack+0x33>
 906:	e1 f0       	breq	.+56     	; 0x940 <__stack+0x41>
 908:	66 0f       	add	r22, r22
 90a:	77 1f       	adc	r23, r23
 90c:	88 1f       	adc	r24, r24
 90e:	99 1f       	adc	r25, r25
 910:	1a f0       	brmi	.+6      	; 0x918 <__stack+0x19>
 912:	ba 95       	dec	r27
 914:	c9 f7       	brne	.-14     	; 0x908 <__stack+0x9>
 916:	14 c0       	rjmp	.+40     	; 0x940 <__stack+0x41>
 918:	b1 30       	cpi	r27, 0x01	; 1
 91a:	91 f0       	breq	.+36     	; 0x940 <__stack+0x41>
 91c:	0e 94 17 05 	call	0xa2e	; 0xa2e <__fp_zero>
 920:	b1 e0       	ldi	r27, 0x01	; 1
 922:	08 95       	ret
 924:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_zero>
 928:	67 2f       	mov	r22, r23
 92a:	78 2f       	mov	r23, r24
 92c:	88 27       	eor	r24, r24
 92e:	b8 5f       	subi	r27, 0xF8	; 248
 930:	39 f0       	breq	.+14     	; 0x940 <__stack+0x41>
 932:	b9 3f       	cpi	r27, 0xF9	; 249
 934:	cc f3       	brlt	.-14     	; 0x928 <__stack+0x29>
 936:	86 95       	lsr	r24
 938:	77 95       	ror	r23
 93a:	67 95       	ror	r22
 93c:	b3 95       	inc	r27
 93e:	d9 f7       	brne	.-10     	; 0x936 <__stack+0x37>
 940:	3e f4       	brtc	.+14     	; 0x950 <__stack+0x51>
 942:	90 95       	com	r25
 944:	80 95       	com	r24
 946:	70 95       	com	r23
 948:	61 95       	neg	r22
 94a:	7f 4f       	sbci	r23, 0xFF	; 255
 94c:	8f 4f       	sbci	r24, 0xFF	; 255
 94e:	9f 4f       	sbci	r25, 0xFF	; 255
 950:	08 95       	ret

00000952 <__fp_cmp>:
 952:	99 0f       	add	r25, r25
 954:	00 08       	sbc	r0, r0
 956:	55 0f       	add	r21, r21
 958:	aa 0b       	sbc	r26, r26
 95a:	e0 e8       	ldi	r30, 0x80	; 128
 95c:	fe ef       	ldi	r31, 0xFE	; 254
 95e:	16 16       	cp	r1, r22
 960:	17 06       	cpc	r1, r23
 962:	e8 07       	cpc	r30, r24
 964:	f9 07       	cpc	r31, r25
 966:	c0 f0       	brcs	.+48     	; 0x998 <__fp_cmp+0x46>
 968:	12 16       	cp	r1, r18
 96a:	13 06       	cpc	r1, r19
 96c:	e4 07       	cpc	r30, r20
 96e:	f5 07       	cpc	r31, r21
 970:	98 f0       	brcs	.+38     	; 0x998 <__fp_cmp+0x46>
 972:	62 1b       	sub	r22, r18
 974:	73 0b       	sbc	r23, r19
 976:	84 0b       	sbc	r24, r20
 978:	95 0b       	sbc	r25, r21
 97a:	39 f4       	brne	.+14     	; 0x98a <__fp_cmp+0x38>
 97c:	0a 26       	eor	r0, r26
 97e:	61 f0       	breq	.+24     	; 0x998 <__fp_cmp+0x46>
 980:	23 2b       	or	r18, r19
 982:	24 2b       	or	r18, r20
 984:	25 2b       	or	r18, r21
 986:	21 f4       	brne	.+8      	; 0x990 <__fp_cmp+0x3e>
 988:	08 95       	ret
 98a:	0a 26       	eor	r0, r26
 98c:	09 f4       	brne	.+2      	; 0x990 <__fp_cmp+0x3e>
 98e:	a1 40       	sbci	r26, 0x01	; 1
 990:	a6 95       	lsr	r26
 992:	8f ef       	ldi	r24, 0xFF	; 255
 994:	81 1d       	adc	r24, r1
 996:	81 1d       	adc	r24, r1
 998:	08 95       	ret

0000099a <__fp_inf>:
 99a:	97 f9       	bld	r25, 7
 99c:	9f 67       	ori	r25, 0x7F	; 127
 99e:	80 e8       	ldi	r24, 0x80	; 128
 9a0:	70 e0       	ldi	r23, 0x00	; 0
 9a2:	60 e0       	ldi	r22, 0x00	; 0
 9a4:	08 95       	ret

000009a6 <__fp_nan>:
 9a6:	9f ef       	ldi	r25, 0xFF	; 255
 9a8:	80 ec       	ldi	r24, 0xC0	; 192
 9aa:	08 95       	ret

000009ac <__fp_pscA>:
 9ac:	00 24       	eor	r0, r0
 9ae:	0a 94       	dec	r0
 9b0:	16 16       	cp	r1, r22
 9b2:	17 06       	cpc	r1, r23
 9b4:	18 06       	cpc	r1, r24
 9b6:	09 06       	cpc	r0, r25
 9b8:	08 95       	ret

000009ba <__fp_pscB>:
 9ba:	00 24       	eor	r0, r0
 9bc:	0a 94       	dec	r0
 9be:	12 16       	cp	r1, r18
 9c0:	13 06       	cpc	r1, r19
 9c2:	14 06       	cpc	r1, r20
 9c4:	05 06       	cpc	r0, r21
 9c6:	08 95       	ret

000009c8 <__fp_round>:
 9c8:	09 2e       	mov	r0, r25
 9ca:	03 94       	inc	r0
 9cc:	00 0c       	add	r0, r0
 9ce:	11 f4       	brne	.+4      	; 0x9d4 <__fp_round+0xc>
 9d0:	88 23       	and	r24, r24
 9d2:	52 f0       	brmi	.+20     	; 0x9e8 <__fp_round+0x20>
 9d4:	bb 0f       	add	r27, r27
 9d6:	40 f4       	brcc	.+16     	; 0x9e8 <__fp_round+0x20>
 9d8:	bf 2b       	or	r27, r31
 9da:	11 f4       	brne	.+4      	; 0x9e0 <__fp_round+0x18>
 9dc:	60 ff       	sbrs	r22, 0
 9de:	04 c0       	rjmp	.+8      	; 0x9e8 <__fp_round+0x20>
 9e0:	6f 5f       	subi	r22, 0xFF	; 255
 9e2:	7f 4f       	sbci	r23, 0xFF	; 255
 9e4:	8f 4f       	sbci	r24, 0xFF	; 255
 9e6:	9f 4f       	sbci	r25, 0xFF	; 255
 9e8:	08 95       	ret

000009ea <__fp_split3>:
 9ea:	57 fd       	sbrc	r21, 7
 9ec:	90 58       	subi	r25, 0x80	; 128
 9ee:	44 0f       	add	r20, r20
 9f0:	55 1f       	adc	r21, r21
 9f2:	59 f0       	breq	.+22     	; 0xa0a <__fp_splitA+0x10>
 9f4:	5f 3f       	cpi	r21, 0xFF	; 255
 9f6:	71 f0       	breq	.+28     	; 0xa14 <__fp_splitA+0x1a>
 9f8:	47 95       	ror	r20

000009fa <__fp_splitA>:
 9fa:	88 0f       	add	r24, r24
 9fc:	97 fb       	bst	r25, 7
 9fe:	99 1f       	adc	r25, r25
 a00:	61 f0       	breq	.+24     	; 0xa1a <__fp_splitA+0x20>
 a02:	9f 3f       	cpi	r25, 0xFF	; 255
 a04:	79 f0       	breq	.+30     	; 0xa24 <__fp_splitA+0x2a>
 a06:	87 95       	ror	r24
 a08:	08 95       	ret
 a0a:	12 16       	cp	r1, r18
 a0c:	13 06       	cpc	r1, r19
 a0e:	14 06       	cpc	r1, r20
 a10:	55 1f       	adc	r21, r21
 a12:	f2 cf       	rjmp	.-28     	; 0x9f8 <__fp_split3+0xe>
 a14:	46 95       	lsr	r20
 a16:	f1 df       	rcall	.-30     	; 0x9fa <__fp_splitA>
 a18:	08 c0       	rjmp	.+16     	; 0xa2a <__fp_splitA+0x30>
 a1a:	16 16       	cp	r1, r22
 a1c:	17 06       	cpc	r1, r23
 a1e:	18 06       	cpc	r1, r24
 a20:	99 1f       	adc	r25, r25
 a22:	f1 cf       	rjmp	.-30     	; 0xa06 <__fp_splitA+0xc>
 a24:	86 95       	lsr	r24
 a26:	71 05       	cpc	r23, r1
 a28:	61 05       	cpc	r22, r1
 a2a:	08 94       	sec
 a2c:	08 95       	ret

00000a2e <__fp_zero>:
 a2e:	e8 94       	clt

00000a30 <__fp_szero>:
 a30:	bb 27       	eor	r27, r27
 a32:	66 27       	eor	r22, r22
 a34:	77 27       	eor	r23, r23
 a36:	cb 01       	movw	r24, r22
 a38:	97 f9       	bld	r25, 7
 a3a:	08 95       	ret

00000a3c <__gesf2>:
 a3c:	0e 94 a9 04 	call	0x952	; 0x952 <__fp_cmp>
 a40:	08 f4       	brcc	.+2      	; 0xa44 <__gesf2+0x8>
 a42:	8f ef       	ldi	r24, 0xFF	; 255
 a44:	08 95       	ret

00000a46 <__mulsf3>:
 a46:	0e 94 36 05 	call	0xa6c	; 0xa6c <__mulsf3x>
 a4a:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_round>
 a4e:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__fp_pscA>
 a52:	38 f0       	brcs	.+14     	; 0xa62 <__mulsf3+0x1c>
 a54:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__fp_pscB>
 a58:	20 f0       	brcs	.+8      	; 0xa62 <__mulsf3+0x1c>
 a5a:	95 23       	and	r25, r21
 a5c:	11 f0       	breq	.+4      	; 0xa62 <__mulsf3+0x1c>
 a5e:	0c 94 cd 04 	jmp	0x99a	; 0x99a <__fp_inf>
 a62:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__fp_nan>
 a66:	11 24       	eor	r1, r1
 a68:	0c 94 18 05 	jmp	0xa30	; 0xa30 <__fp_szero>

00000a6c <__mulsf3x>:
 a6c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__fp_split3>
 a70:	70 f3       	brcs	.-36     	; 0xa4e <__mulsf3+0x8>

00000a72 <__mulsf3_pse>:
 a72:	95 9f       	mul	r25, r21
 a74:	c1 f3       	breq	.-16     	; 0xa66 <__mulsf3+0x20>
 a76:	95 0f       	add	r25, r21
 a78:	50 e0       	ldi	r21, 0x00	; 0
 a7a:	55 1f       	adc	r21, r21
 a7c:	62 9f       	mul	r22, r18
 a7e:	f0 01       	movw	r30, r0
 a80:	72 9f       	mul	r23, r18
 a82:	bb 27       	eor	r27, r27
 a84:	f0 0d       	add	r31, r0
 a86:	b1 1d       	adc	r27, r1
 a88:	63 9f       	mul	r22, r19
 a8a:	aa 27       	eor	r26, r26
 a8c:	f0 0d       	add	r31, r0
 a8e:	b1 1d       	adc	r27, r1
 a90:	aa 1f       	adc	r26, r26
 a92:	64 9f       	mul	r22, r20
 a94:	66 27       	eor	r22, r22
 a96:	b0 0d       	add	r27, r0
 a98:	a1 1d       	adc	r26, r1
 a9a:	66 1f       	adc	r22, r22
 a9c:	82 9f       	mul	r24, r18
 a9e:	22 27       	eor	r18, r18
 aa0:	b0 0d       	add	r27, r0
 aa2:	a1 1d       	adc	r26, r1
 aa4:	62 1f       	adc	r22, r18
 aa6:	73 9f       	mul	r23, r19
 aa8:	b0 0d       	add	r27, r0
 aaa:	a1 1d       	adc	r26, r1
 aac:	62 1f       	adc	r22, r18
 aae:	83 9f       	mul	r24, r19
 ab0:	a0 0d       	add	r26, r0
 ab2:	61 1d       	adc	r22, r1
 ab4:	22 1f       	adc	r18, r18
 ab6:	74 9f       	mul	r23, r20
 ab8:	33 27       	eor	r19, r19
 aba:	a0 0d       	add	r26, r0
 abc:	61 1d       	adc	r22, r1
 abe:	23 1f       	adc	r18, r19
 ac0:	84 9f       	mul	r24, r20
 ac2:	60 0d       	add	r22, r0
 ac4:	21 1d       	adc	r18, r1
 ac6:	82 2f       	mov	r24, r18
 ac8:	76 2f       	mov	r23, r22
 aca:	6a 2f       	mov	r22, r26
 acc:	11 24       	eor	r1, r1
 ace:	9f 57       	subi	r25, 0x7F	; 127
 ad0:	50 40       	sbci	r21, 0x00	; 0
 ad2:	9a f0       	brmi	.+38     	; 0xafa <__mulsf3_pse+0x88>
 ad4:	f1 f0       	breq	.+60     	; 0xb12 <__mulsf3_pse+0xa0>
 ad6:	88 23       	and	r24, r24
 ad8:	4a f0       	brmi	.+18     	; 0xaec <__mulsf3_pse+0x7a>
 ada:	ee 0f       	add	r30, r30
 adc:	ff 1f       	adc	r31, r31
 ade:	bb 1f       	adc	r27, r27
 ae0:	66 1f       	adc	r22, r22
 ae2:	77 1f       	adc	r23, r23
 ae4:	88 1f       	adc	r24, r24
 ae6:	91 50       	subi	r25, 0x01	; 1
 ae8:	50 40       	sbci	r21, 0x00	; 0
 aea:	a9 f7       	brne	.-22     	; 0xad6 <__mulsf3_pse+0x64>
 aec:	9e 3f       	cpi	r25, 0xFE	; 254
 aee:	51 05       	cpc	r21, r1
 af0:	80 f0       	brcs	.+32     	; 0xb12 <__mulsf3_pse+0xa0>
 af2:	0c 94 cd 04 	jmp	0x99a	; 0x99a <__fp_inf>
 af6:	0c 94 18 05 	jmp	0xa30	; 0xa30 <__fp_szero>
 afa:	5f 3f       	cpi	r21, 0xFF	; 255
 afc:	e4 f3       	brlt	.-8      	; 0xaf6 <__mulsf3_pse+0x84>
 afe:	98 3e       	cpi	r25, 0xE8	; 232
 b00:	d4 f3       	brlt	.-12     	; 0xaf6 <__mulsf3_pse+0x84>
 b02:	86 95       	lsr	r24
 b04:	77 95       	ror	r23
 b06:	67 95       	ror	r22
 b08:	b7 95       	ror	r27
 b0a:	f7 95       	ror	r31
 b0c:	e7 95       	ror	r30
 b0e:	9f 5f       	subi	r25, 0xFF	; 255
 b10:	c1 f7       	brne	.-16     	; 0xb02 <__mulsf3_pse+0x90>
 b12:	fe 2b       	or	r31, r30
 b14:	88 0f       	add	r24, r24
 b16:	91 1d       	adc	r25, r1
 b18:	96 95       	lsr	r25
 b1a:	87 95       	ror	r24
 b1c:	97 f9       	bld	r25, 7
 b1e:	08 95       	ret

00000b20 <_exit>:
 b20:	f8 94       	cli

00000b22 <__stop_program>:
 b22:	ff cf       	rjmp	.-2      	; 0xb22 <__stop_program>
